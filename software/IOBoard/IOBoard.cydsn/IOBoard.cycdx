<?xml version="1.0" encoding="utf-8"?>
<blockRegMap version="1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://cypress.com/xsd/cyblockregmap cyblockregmap.xsd" xmlns="http://cypress.com/xsd/cyblockregmap">
  <block name="DIGITAL_IN1" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
  <block name="DIGITAL_OUT2" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
  <block name="DIGITAL_OUT1" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
  <block name="DIGITAL_IN2" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
  <block name="cy_lfclk" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
  <block name="DMAC" BASE="0x0" SIZE="0x0" desc="DMAC Registers" visible="true" hidden="false">
    <register name="DMAC_CH_CTL17" address="0x40000000" bitWidth="32" desc="DMA channel 17 control register" hidden="true">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL8" address="0x40000000" bitWidth="32" desc="DMA channel 8 control register" hidden="true">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL9" address="0x40000000" bitWidth="32" desc="DMA channel 9 control register" hidden="true">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL20" address="0x40000000" bitWidth="32" desc="DMA channel 20 control register" hidden="true">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL19" address="0x40000000" bitWidth="32" desc="DMA channel 19 control register" hidden="true">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL18" address="0x40000000" bitWidth="32" desc="DMA channel 18 control register" hidden="true">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL13" address="0x40000000" bitWidth="32" desc="DMA channel 13 control register" hidden="true">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL14" address="0x40000000" bitWidth="32" desc="DMA channel 14 control register" hidden="true">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL15" address="0x40000000" bitWidth="32" desc="DMA channel 15 control register" hidden="true">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL10" address="0x40000000" bitWidth="32" desc="DMA channel 10 control register" hidden="true">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL11" address="0x40000000" bitWidth="32" desc="DMA channel 11 control register" hidden="true">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL12" address="0x40000000" bitWidth="32" desc="DMA channel 12 control register" hidden="true">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL29" address="0x40000000" bitWidth="32" desc="DMA channel 29 control register" hidden="true">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL28" address="0x40000000" bitWidth="32" desc="DMA channel 28 control register" hidden="true">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL27" address="0x40000000" bitWidth="32" desc="DMA channel 27 control register" hidden="true">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL16" address="0x40000000" bitWidth="32" desc="DMA channel 16 control register" hidden="true">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL31" address="0x40000000" bitWidth="31" desc="DMA channel 31 control register" hidden="true">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL30" address="0x40000000" bitWidth="32" desc="DMA channel 30 control register" hidden="true">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL26" address="0x40000000" bitWidth="32" desc="DMA channel 26 control register" hidden="true">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL23" address="0x40000000" bitWidth="32" desc="DMA channel 23 control register" hidden="true">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL22" address="0x40000000" bitWidth="32" desc="DMA channel 22 control register" hidden="true">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL21" address="0x40000000" bitWidth="32" desc="DMA channel 21 control register" hidden="true">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL25" address="0x40000000" bitWidth="32" desc="DMA channel 25 control register" hidden="true">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL24" address="0x40000000" bitWidth="32" desc="DMA channel 24 control register" hidden="true">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CTL" address="0x40101000" bitWidth="32" desc="DMA controller control register" hidden="false">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Global DMAC enable" hidden="false">
        <value name="Disabled" value="0" desc="DMA controller is disabled." />
        <value name="Enabled" value="1" desc="DMA controller is enabled." />
      </field>
    </register>
    <register name="DMAC_STATUS" address="0x40101010" bitWidth="32" desc="DMA controller status register" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="R" resetVal="" desc="Specifies the index of the currently active data transfer. This value increases from '0' to the DATA_NR field specified of the currently active descriptor control word." hidden="false" />
      <field name="CH_ADDR" from="20" to="16" access="R" resetVal="" desc="Specifies the channel number of the currently active channel. For example, if channel 7 is active, DMAC_STATUS.ACTIVE is '1' and STATUS.CH_ADDR is '7'." hidden="false" />
      <field name="STATE" from="26" to="24" access="R" resetVal="" desc="State of the data transfer engine." hidden="false">
        <value name="IDLE" value="000" desc="Idle state when the DMA is not active." />
        <value name="LOAD_DESCR" value="001" desc="The DMA is loading the descriptor to the DMA transfer engine." />
        <value name="LOAD_SRC" value="010" desc="The DMA is getting the value from the source location." />
        <value name="STORE_DST" value="011" desc="The DMA is storing the value at the destination location." />
        <value name="STORE_DESCR" value="100" desc="The DMA is updating the descriptors after completion of transfer." />
        <value name="WAIT_TRIG_DEACT" value="101" desc="The DMA is waiting for the level sensitive trigger to deactivate." />
        <value name="STORE_ERROR" value="110" desc="There was an error during the transaction and the DMA is writing the error code to the channel status register." />
      </field>
      <field name="PRIO" from="29" to="28" access="R" resetVal="" desc="Specifies the priority of the currently active channel." hidden="false" />
      <field name="PING_PONG" from="31" to="31" access="R" resetVal="" desc="Specifies whether the PING descriptor ('0') or PONG descriptor ('1') of the channel is currently in use." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="ACTIVE" from="31" to="31" access="R" resetVal="" desc="Specifies if there is a currently active (pending) channel in the data transfer engine." hidden="false">
        <value name="IDLE" value="0" desc="No currently active channel." />
        <value name="ACTIVE" value="1" desc="Currently active channel." />
      </field>
    </register>
    <register name="DMAC_STATUS_SRC_ADDR" address="0x40101014" bitWidth="32" desc="Source address currently being used by the DMA controller" hidden="false">
      <field name="ADDR" from="31" to="0" access="R" resetVal="" desc="The source address currently being used by the DMA transfer engine. This field is provided for debug purposes. Note while reading the DMAC_STATUS, DMAC_STATUS_SRC_ADDR and DMAC_STATUS_DST_ADDR registers, the transfer engine may have advanced after one or more of these reads. Meaning the register values may not be related to each other." hidden="false" />
    </register>
    <register name="DMAC_STATUS_DST_ADDR" address="0x40101018" bitWidth="32" desc="Destination address currently being used by the DMA controller" hidden="false">
      <field name="ADDR" from="31" to="0" access="R" resetVal="" desc="The destination address currently being used by the DMA transfer engine. This field is provided for debug purposes. Note while reading the DMAC_STATUS, DMAC_STATUS_SRC_ADDR and DMAC_STATUS_DST_ADDR registers, the transfer engine may have advanced after one or more of these reads. Meaning the register values may not be related to each other." hidden="false" />
    </register>
    <register name="DMAC_STATUS_CH_ACT" address="0x4010101C" bitWidth="32" desc="Channel activation status" hidden="false">
      <field name="CH" from="31" to="0" access="R" resetVal="" desc="Channel activation status. Bit i is associated to channel i. Software reads this field to get information on all actively pending channels (either in pending or in the data transfer engine)." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL0" address="0x40101080" bitWidth="32" desc="DMA channel 0 control register" hidden="false">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL1" address="0x40101084" bitWidth="32" desc="DMA channel 1 control register" hidden="false">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL2" address="0x40101088" bitWidth="32" desc="DMA channel 2 control register" hidden="false">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL3" address="0x4010108C" bitWidth="32" desc="DMA channel 3 control register" hidden="false">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL4" address="0x40101090" bitWidth="32" desc="DMA channel 4 control register" hidden="false">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL5" address="0x40101094" bitWidth="32" desc="DMA channel 5 control register" hidden="false">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL6" address="0x40101098" bitWidth="32" desc="DMA channel 6 control register" hidden="false">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL7" address="0x4010109C" bitWidth="32" desc="DMA channel 7 control register" hidden="false">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_INTR" address="0x401017F0" bitWidth="32" desc="Interrupt register" hidden="false">
      <field name="CH" from="31" to="0" access="RW" resetVal="" desc="Set to '1', when event is detected. Write INTR field with '1', to clear bit. Write INTR_SET field with '1', to set bit." hidden="false" />
    </register>
    <register name="DMAC_INTR_SET" address="0x401017F4" bitWidth="32" desc="Interrupt set register" hidden="false">
      <field name="CH" from="31" to="0" access="RW" resetVal="" desc="Write INTR_SET field with '1' to set corresponding INTR field (a write of '0' has no effect)." hidden="false" />
    </register>
    <register name="DMAC_INTR_MASK" address="0x401017F8" bitWidth="32" desc="Interrupt mask register" hidden="false">
      <field name="CH" from="31" to="0" access="RW" resetVal="" desc="Mask for corresponding field in INTR register." hidden="false" />
    </register>
    <register name="DMAC_INTR_MASKED" address="0x401017FC" bitWidth="32" desc="Interrupt masked register" hidden="false">
      <field name="CH" from="31" to="0" access="R" resetVal="" desc="Bitwise AND between the interrupt reguest (INTR) and mask (INTR_MASK) registers." hidden="false" />
    </register>
    <register name="DMAC_DESCR0_PING_SRC" address="0x40101800" bitWidth="32" desc="Descriptor 0 source address location for channel 0" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR0_PING_DST" address="0x40101804" bitWidth="32" desc="Descriptor 0 destination address location for channel 0" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR0_PING_CTL" address="0x40101808" bitWidth="32" desc="Descriptor 0 control register for channel 0" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR0_PING_STATUS" address="0x4010180C" bitWidth="32" desc="Descriptor 0 status register for channel 0" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR0_PONG_SRC" address="0x40101810" bitWidth="32" desc="Descriptor 1 source address location for channel 0" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR0_PONG_DST" address="0x40101814" bitWidth="32" desc="Descriptor 1 destination address location for channel 0" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR0_PONG_CTL" address="0x40101818" bitWidth="32" desc="Descriptor 1 control register for channel 0" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR0_PONG_STATUS" address="0x4010181C" bitWidth="32" desc="Descriptor 1 status register for channel 0" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR1_PING_SRC" address="0x40101820" bitWidth="32" desc="Descriptor 0 source address location for channel 1" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR1_PING_DST" address="0x40101824" bitWidth="32" desc="Descriptor 0 destination address location for channel 1" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR1_PING_CTL" address="0x40101828" bitWidth="32" desc="Descriptor 0 control register for channel 1" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR1_PING_STATUS" address="0x4010182C" bitWidth="32" desc="Descriptor 0 status register for channel 1" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR1_PONG_SRC" address="0x40101830" bitWidth="32" desc="Descriptor 1 source address location for channel 1" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR1_PONG_DST" address="0x40101834" bitWidth="32" desc="Descriptor 1 destination address location for channel 1" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR1_PONG_CTL" address="0x40101838" bitWidth="32" desc="Descriptor 1 control register for channel 1" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR1_PONG_STATUS" address="0x4010183C" bitWidth="32" desc="Descriptor 1 status register for channel 1" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR2_PING_SRC" address="0x40101840" bitWidth="32" desc="Descriptor 0 source address location for channel 2" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR2_PING_DST" address="0x40101844" bitWidth="32" desc="Descriptor 0 destination address location for channel 2" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR2_PING_CTL" address="0x40101848" bitWidth="32" desc="Descriptor 0 control register for channel 2" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR2_PING_STATUS" address="0x4010184C" bitWidth="32" desc="Descriptor 0 status register for channel 2" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR2_PONG_SRC" address="0x40101850" bitWidth="32" desc="Descriptor 1 source address location for channel 2" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR2_PONG_DST" address="0x40101854" bitWidth="32" desc="Descriptor 1 destination address location for channel 2" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR2_PONG_CTL" address="0x40101858" bitWidth="32" desc="Descriptor 1 control register for channel 2" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR2_PONG_STATUS" address="0x4010185C" bitWidth="32" desc="Descriptor 1 status register for channel 2" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR3_PING_SRC" address="0x40101860" bitWidth="32" desc="Descriptor 0 source address location for channel 3" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR3_PING_DST" address="0x40101864" bitWidth="32" desc="Descriptor 0 destination address location for channel 3" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR3_PING_CTL" address="0x40101868" bitWidth="32" desc="Descriptor 0 control register for channel 3" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR3_PING_STATUS" address="0x4010186C" bitWidth="32" desc="Descriptor 0 status register for channel 3" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR3_PONG_SRC" address="0x40101870" bitWidth="32" desc="Descriptor 1 source address location for channel 3" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR3_PONG_DST" address="0x40101874" bitWidth="32" desc="Descriptor 1 destination address location for channel 3" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR3_PONG_CTL" address="0x40101878" bitWidth="32" desc="Descriptor 1 control register for channel 3" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR3_PONG_STATUS" address="0x4010187C" bitWidth="32" desc="Descriptor 1 status register for channel 3" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR4_PING_SRC" address="0x40101880" bitWidth="32" desc="Descriptor 0 source address location for channel 4" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR4_PING_DST" address="0x40101884" bitWidth="32" desc="Descriptor 0 destination address location for channel 4" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR4_PING_CTL" address="0x40101888" bitWidth="32" desc="Descriptor 0 control register for channel 4" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR4_PING_STATUS" address="0x4010188C" bitWidth="32" desc="Descriptor 0 status register for channel 4" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR4_PONG_SRC" address="0x40101890" bitWidth="32" desc="Descriptor 1 source address location for channel 4" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR4_PONG_DST" address="0x40101894" bitWidth="32" desc="Descriptor 1 destination address location for channel 4" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR4_PONG_CTL" address="0x40101898" bitWidth="32" desc="Descriptor 1 control register for channel 4" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR4_PONG_STATUS" address="0x4010189C" bitWidth="32" desc="Descriptor 1 status register for channel 4" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR5_PING_SRC" address="0x401018A0" bitWidth="32" desc="Descriptor 0 source address location for channel 5" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR5_PING_DST" address="0x401018A4" bitWidth="32" desc="Descriptor 0 destination address location for channel 5" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR5_PING_CTL" address="0x401018A8" bitWidth="32" desc="Descriptor 0 control register for channel 5" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR5_PING_STATUS" address="0x401018AC" bitWidth="32" desc="Descriptor 0 status register for channel 5" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR5_PONG_SRC" address="0x401018B0" bitWidth="32" desc="Descriptor 1 source address location for channel 5" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR5_PONG_DST" address="0x401018B4" bitWidth="32" desc="Descriptor 1 destination address location for channel 5" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR5_PONG_CTL" address="0x401018B8" bitWidth="32" desc="Descriptor 1 control register for channel 5" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR5_PONG_STATUS" address="0x401018BC" bitWidth="32" desc="Descriptor 1 status register for channel 5" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR6_PING_SRC" address="0x401018C0" bitWidth="32" desc="Descriptor 0 source address location for channel 6" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR6_PING_DST" address="0x401018C4" bitWidth="32" desc="Descriptor 0 destination address location for channel 6" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR6_PING_CTL" address="0x401018C8" bitWidth="32" desc="Descriptor 0 control register for channel 6" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR6_PING_STATUS" address="0x401018CC" bitWidth="32" desc="Descriptor 0 status register for channel 6" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR6_PONG_SRC" address="0x401018D0" bitWidth="32" desc="Descriptor 1 source address location for channel 6" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR6_PONG_DST" address="0x401018D4" bitWidth="32" desc="Descriptor 1 destination address location for channel 6" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR6_PONG_CTL" address="0x401018D8" bitWidth="32" desc="Descriptor 1 control register for channel 6" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR6_PONG_STATUS" address="0x401018DC" bitWidth="32" desc="Descriptor 1 status register for channel 6" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR7_PING_SRC" address="0x401018E0" bitWidth="32" desc="Descriptor 0 source address location for channel 7" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR7_PING_DST" address="0x401018E4" bitWidth="32" desc="Descriptor 0 destination address location for channel 7" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR7_PING_CTL" address="0x401018E8" bitWidth="32" desc="Descriptor 0 control register for channel 7" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR7_PING_STATUS" address="0x401018EC" bitWidth="32" desc="Descriptor 0 status register for channel 7" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR7_PONG_SRC" address="0x401018F0" bitWidth="32" desc="Descriptor 1 source address location for channel 7" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR7_PONG_DST" address="0x401018F4" bitWidth="32" desc="Descriptor 1 destination address location for channel 7" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR7_PONG_CTL" address="0x401018F8" bitWidth="32" desc="Descriptor 1 control register for channel 7" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR7_PONG_STATUS" address="0x401018FC" bitWidth="32" desc="Descriptor 1 status register for channel 7" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
  </block>
  <block name="cy_boot" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
  <block name="SPI" BASE="0x0" SIZE="0x0" desc="Serial Communication Block" visible="true" hidden="false">
    <block name="clock_VM" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="rx_wake_VM" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="mosi_s_VM" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="sclk_s_VM" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="ss_s" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="SCBCLK" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="rx_VM" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="select_s_VM" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="miso_m_VM" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="cts_VM" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="mosi_s" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="Device_VM4" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="SCB" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="ZeroTerminal_7" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="miso_s" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="sclk_s" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="or_sclk" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <register name="_CTRL" address="0x40090000" bitWidth="32" desc="Generic control register" hidden="false">
      <field name="OVS" from="3" to="0" access="RW" resetVal="" desc="Serial interface bit period oversampling factor expressed in lP clock cycles. Used for SPI and UART functionality. OVS + 1 IP clock cycles constitute a single serial interface clock/bit cycle." hidden="false" />
      <field name="EC_AM_MODE" from="8" to="8" access="RW" resetVal="" desc="Internally clocked mode ('0') or externally clocked mode ('1') address matching (I2C) or selection (SPI).In internally clocked mode, the serial interface protocols run off the peripheral clock. In externally clocked mode, the serial interface protocols run off the clock as provided by the serial interface." hidden="false" />
      <field name="EC_OP_MODE" from="9" to="9" access="RW" resetVal="" desc="Internally clocked mode ('0') or externally clocked mode ('1') operation. In internally clocked mode, the serial interface protocols run off the peripheral clock. In externally clocked mode, the serial interface protocols run off the clock as provided by the serial interface." hidden="false" />
      <field name="EZ_MODE" from="10" to="10" access="RW" resetVal="" desc="Non EZ mode ('0') or EZ mode ('1'). In EZ mode, a meta protocol is applied to the serial interface protocol." hidden="false" />
      <field name="BYTE_MODE" from="11" to="11" access="RW" resetVal="" desc="Determines the number of bits per FIFO data element: '0' - 16-bit FIFO data elements (FIFO entries 8), '1' - 8-bit FIFO data elements (FIFO entries 16). Setting data elemelents to 8-bits doubles the amount of FIFO entries." hidden="false" />
      <field name="ADDR_ACCEPT" from="16" to="16" access="RW" resetVal="" desc="Determines whether a received matching address is accepted in the RX FIFO ('1') or not ('0').his field is used in the I2C mode." hidden="false" />
      <field name="BLOCK" from="17" to="17" access="RW" resetVal="" desc=" If the externally clocked logic and the MMIO SW accesses to EZ memory coincide/collide, this bit determines whether a SW access should block and result in bus wait states ('BLOCK is 1') or not (BLOCK is '0')" hidden="false" />
      <field name="MODE" from="25" to="24" access="RW" resetVal="" desc="Mode of operation: I2C = 0, SPI = 1, UART = 2" hidden="false" />
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="IP enabled ('1') or not ('0')." hidden="false" />
    </register>
    <register name="_SPI_CTRL" address="0x40090020" bitWidth="32" desc="SPI control register" hidden="false">
      <field name="CONTINUOUS" from="0" to="0" access="RW" resetVal="" desc="Continuous SPI data transfers enabled ('1') or not ('0')." hidden="false" />
      <field name="SELECT_PRECEDE" from="1" to="1" access="RW" resetVal="" desc="Only used in SPI Texas Instruments' submode. When '1', the data frame start indication is a pulse on the SELECT line that precedes the transfer of the first data frame bit. When '0', the data frame start indication is a pulse on the SELECT line that coincides with the transfer of the first data frame bit." hidden="false" />
      <field name="CPHA" from="2" to="2" access="RW" resetVal="" desc="Only applicable in SPI Motorola submode. Indicates the clock phase." hidden="false" />
      <field name="CPOL" from="3" to="3" access="RW" resetVal="" desc="Only applicable in SPI Motorola submode. Indicates the clock polarity." hidden="false" />
      <field name="LATE_MISO_SAMPLE" from="4" to="4" access="RW" resetVal="" desc="Only applicable in master mode. Changes the SCLK edge on which MISO is captured." hidden="false" />
      <field name="SCLK_CONTINUOUS" from="5" to="5" access="RW" resetVal="" desc="Enables SCLK generation continuiusly by master regars data is avaiable in TX FIFO or not." hidden="false" />
      <field name="SSEL_POLARITY0" from="8" to="8" access="RW" resetVal="" desc="Slave select polarity of SS0." hidden="false" />
      <field name="SSEL_POLARITY1" from="9" to="9" access="RW" resetVal="" desc="Slave select polarity of SS1." hidden="false" />
      <field name="SSEL_POLARITY2" from="10" to="10" access="RW" resetVal="" desc="Slave select polarity of SS2." hidden="false" />
      <field name="SSEL_POLARITY3" from="11" to="11" access="RW" resetVal="" desc="Slave select polarity of SS3." hidden="false" />
      <field name="LOOPBACK" from="16" to="16" access="RW" resetVal="" desc="Local loopback control." hidden="false" />
      <field name="MODE" from="25" to="24" access="RW" resetVal="" desc="Submode of SPI operation: Motorola = 0, Texas Instruments = 1, National Semiconducturs = 2." hidden="false" />
      <field name="SLAVE_SELECT" from="27" to="26" access="RW" resetVal="" desc="Selects one of the four SPI slave select signals: SS0 = 0, SS1 = 1 , SS2 = 2, SS3 = 3." hidden="false" />
      <field name="MASTER_MODE" from="31" to="31" access="RW" resetVal="" desc="Master ('1') or slave ('0') mode." hidden="false" />
    </register>
    <register name="_SPI_STATUS" address="0x40090024" bitWidth="32" desc="SPI status register" hidden="false">
      <field name="BUS_BUSY" from="0" to="0" access="R" resetVal="" desc="SPI bus is busy. The bus is considered busy ('1') during an ongoing transaction" hidden="false" />
    </register>
    <register name="_UART_CTRL" address="0x40090040" bitWidth="32" desc="UART control register" hidden="false">
      <field name="LOOPBACK" from="16" to="16" access="RW" resetVal="" desc="Local loopback control." hidden="false" />
      <field name="MODE" from="25" to="24" access="RW" resetVal="" desc="Submode of UART operation: Standard = 0, Smart Card = 1, IrDA = 2." hidden="false" />
    </register>
    <register name="_UART_TX_CTRL" address="0x40090044" bitWidth="32" desc="UART transmitter control register" hidden="false">
      <field name="STOP_BTIS" from="2" to="0" access="RW" resetVal="" desc="Stop bits. STOP_BITS + 1 is the duration of the stop period in terms of halve bit periods." hidden="false" />
      <field name="PARITY" from="4" to="4" access="RW" resetVal="" desc="Parity bit. When '0', the transmitter generates an even parity. When '1', the transmitter generates an odd parity" hidden="false" />
      <field name="PARITY_ENABLED" from="5" to="5" access="RW" resetVal="" desc="Parity generation enabled ('1') or not ('0'). Only applicable in standard UART submodes. In SmartCard submode, parity generation is always enabled through hardware. In IrDA submode, parity generation is always disabled through hardware." hidden="false" />
      <field name="RETRY_ON_NACK" from="8" to="8" access="RW" resetVal="" desc="When '1', a data frame is retransmitted when a negative acknowledgement is received. Only applicable to the SmartCard submode." hidden="false" />
    </register>
    <register name="_UART_RX_CTRL" address="0x40090048" bitWidth="32" desc="UART receiver control register" hidden="false">
      <field name="STOP_BITS" from="2" to="0" access="RW" resetVal="" desc="Stop bits. STOP_BITS + 1 is the duration of the stop period in terms of halve bit periods." hidden="false" />
      <field name="PARITY" from="4" to="4" access="RW" resetVal="" desc="Parity bit. When '0', the receiver expects an even parity. When '1', the receiver expects an odd parity." hidden="false" />
      <field name="PARITY_ENABLED" from="5" to="5" access="RW" resetVal="" desc="Parity checking enabled ('1') or not ('0'). Only applicable in standard UART submode. In SmartCard submode, parity checking is always enabled through hardware. In IrDA submode, parity checking is always disabled through hardware." hidden="false" />
      <field name="POLARITY" from="6" to="6" access="RW" resetVal="" desc="Inverts incoming RX line signal. Inversion is after local loopback. This functionality is intended for IrDA receiver functionality." hidden="false" />
      <field name="DROP_ON_PARITY_ERR" from="8" to="8" access="RW" resetVal="" desc="Behaviour when a parity check fails. When '0', received data is send to the RX FIFO. When '1', received data is dropped and lost." hidden="false" />
      <field name="DROP_ON_FRAME_ERR" from="9" to="9" access="RW" resetVal="" desc="Behaviour when an error is detected in a start or stop period. When '0', received data is send to the RX FIFO. When '1', received data is dropped and lost." hidden="false" />
      <field name="MP_MODE" from="10" to="10" access="RW" resetVal="" desc="Multi-processor mode. When '1', multi-processor mode is enabled. In this mode, RX_CTRL.DATA_WIDTH should indicate a 9-bit data frame." hidden="false" />
      <field name="LIN_MODE" from="12" to="12" access="RW" resetVal="" desc="Only applicable in standard UART submode. When '1', the receiver performs break detection and baud rate detection on the incoming data" hidden="false" />
      <field name="SKIP_START" from="13" to="13" access="RW" resetVal="" desc="Only applicable in standard UART submode. When '1', the receiver skips start bit detection for the first received data frame. Instead, it synchronizes on the first received data frame bit, which should be a '1'." hidden="false" />
      <field name="BREAK_WIDTH" from="19" to="16" access="RW" resetVal="" desc="Break width. BREAK_WIDTH + 1 is the minimum width in bit periods of a break." hidden="false" />
    </register>
    <register name="_UART_FLOW_CTRL" address="0x40090050" bitWidth="32" desc="UART flow control register" hidden="false">
      <field name="TRIGGER_LEVEL" from="3" to="0" access="RW" resetVal="" desc="Trigger level. When the receiver FIFO has less entries than the amount of this field, a RTS signal is activated. Setting this field to 0 disables RTS generation." hidden="false" />
      <field name="RTS_POLARITY" from="16" to="16" access="RW" resetVal="" desc="Polarity of the RTS output signal" hidden="false" />
      <field name="CTS_POLARITY" from="24" to="24" access="RW" resetVal="" desc="Polarity of the CTS input signal" hidden="false" />
      <field name="CTS_ENABLED" from="25" to="25" access="RW" resetVal="" desc="Enable use of CTS input signal by the UART transmitter" hidden="false" />
    </register>
    <register name="_I2C_CTRL" address="0x40090060" bitWidth="32" desc="I2C control register" hidden="false">
      <field name="HIGH_PHASE_OVS" from="3" to="0" access="RW" resetVal="" desc="Serial I2C interface high phase oversampling factor. HIGH_PHASE_OVS + 1 peripheral clock periods constitute the high phase of a bit period." hidden="false" />
      <field name="LOW_PHASE_OVS" from="7" to="4" access="RW" resetVal="" desc="Serial I2C interface low phase oversampling factor. LOW_PHASE_OVS + 1 peripheral clock periods constitute the low phase of a bit period" hidden="false" />
      <field name="M_READY_DATA_ACK" from="8" to="8" access="RW" resetVal="" desc="When '1', a received data element by the master is immediately ACK'd when the receiver FIFO is not full." hidden="false" />
      <field name="M_NOT_READY_DATA_NACK" from="9" to="9" access="RW" resetVal="" desc="When '1', a received data element byte the master is immediately NACK'd when the receiver FIFO is full. When '0', clock stretching is used instead (till the receiver FIFO is no longer full)." hidden="false" />
      <field name="S_GENERAL_IGNORE" from="11" to="11" access="RW" resetVal="" desc="When '1', a received general call slave address is immediately NACK'd (no ACK or clock stretching) and treated as a non matching slave address." hidden="false" />
      <field name="S_READY_ADDR_ACK" from="12" to="12" access="RW" resetVal="" desc="When '1', a received (matching) slave address is immediately ACK'd when the receiver FIFO is not full" hidden="false" />
      <field name="S_READY_DATA_ACK" from="13" to="13" access="RW" resetVal="" desc="When '1', a received data element by the slave is immediately ACK'd when the receiver FIFO is not full" hidden="false" />
      <field name="S_NOT_READY_ADDR_NACK" from="14" to="14" access="RW" resetVal="" desc="When '1', a received address by the slave is immediately ACK'd when the receiver FIFO is not full" hidden="false" />
      <field name="S_NOT_READY_DATA_NACK" from="15" to="15" access="RW" resetVal="" desc=" When '1' a received data element byte the slave is immediately NACK'd when the receiver FIFO is full. When '1' clock stretching is performed (till the receiver FIFO is no longer full)." hidden="false" />
      <field name="LOOPBACK" from="16" to="16" access="RW" resetVal="" desc="Local loopback control" hidden="false" />
      <field name="SLAVE_MODE" from="30" to="30" access="RW" resetVal="" desc="Slave mode enabled ('1') or not ('0')." hidden="false" />
      <field name="MASTER_MODE" from="31" to="31" access="RW" resetVal="" desc="Master mode enabled ('1') or not ('0'). Note that both master and slave modes can be enabled at the same time. This allows the IP to address itself." hidden="false" />
    </register>
    <register name="_I2C_STATUS" address="0x40090064" bitWidth="32" desc="I2C status register" hidden="false">
      <field name="BUS_BUSY" from="0" to="0" access="R" resetVal="" desc="I2C bus is busy. The bus is considered busy ('1')." hidden="false" />
      <field name="S_READ" from="4" to="4" access="R" resetVal="" desc="I2C slave read transfer ('1') or I2C slave write transfer ('0'). When the I2C slave is inactive/idle or receiving START, REPEATED START, STOP or an address, this field is '0'." hidden="false" />
      <field name="M_READ" from="5" to="5" access="R" resetVal="" desc="I2C master read transfer ('1') or I2C master write transfer ('0'). When the I2C master is inactive/idle or transmitting START, REPEATED START, STOP or an address, this field is '0''." hidden="false" />
    </register>
    <register name="_I2C_M_CMD" address="0x40090068" bitWidth="32" desc="I2C master command register" hidden="false">
      <field name="M_START" from="0" to="0" access="RW" resetVal="" desc="When '1', transmit a START or REPEATED START. Whether a START or REPEATED START is transmitted depends on the state of the master state machine. When this action is performed, the hardware sets this field to '0'." hidden="false" />
      <field name="M_IDLE_START" from="1" to="1" access="RW" resetVal="" desc="When '1', transmit a START as soon as the bus is idle (I2C_STATUS.BUS_BUSY is '0', note that BUSY has a default value of '0'). When this action is performed, the hardware sets this field to '0'." hidden="false" />
      <field name="M_ACK" from="2" to="2" access="RW" resetVal="" desc="When '1', attempt to transmit an acknowledgement (ACK). When this action is performed, the hardware sets this field to '0'." hidden="false" />
      <field name="M_NACK" from="3" to="3" access="RW" resetVal="" desc="When '1', attempt to transmit a negative acknowledgement (NACK). When this action is performed, the hardware sets this field to '0'." hidden="false" />
      <field name="M_STOP" from="4" to="4" access="RW" resetVal="" desc="When '1', attempt to transmit a STOP. When this action is performed, the hardware sets this field to '0'. This command has a higher priority than I2C_M_CMD.M_START: in situations where both a STOP and a REPEATED START could be transmitted, M_STOP takes precedence over M_START." hidden="false" />
    </register>
    <register name="_I2C_S_CMD" address="0x4009006C" bitWidth="32" desc="I2C slave command register" hidden="false">
      <field name="S_ACK" from="0" to="0" access="RW" resetVal="" desc="When '1', attempt to transmit an acknowledgement (ACK). When this action is performed, the hardware sets this field to '0'." hidden="false" />
      <field name="S_NACK" from="1" to="1" access="RW" resetVal="" desc="When '1', attempt to transmit a negative acknowledgement (NACK). When this action is performed, the hardware sets this field to '0'" hidden="false" />
    </register>
    <register name="_I2C_CFG" address="0x40090070" bitWidth="32" desc="I2C fitler trimm register" hidden="false">
      <field name="SDA_IN_FILT_TRIM" from="1" to="0" access="RW" resetVal="" desc="" hidden="false" />
      <field name="SDA_IN_FILT_SEL" from="4" to="4" access="RW" resetVal="" desc="" hidden="false" />
      <field name="SCL_IN_FILT_TRIM" from="9" to="8" access="RW" resetVal="" desc="" hidden="false" />
      <field name="SCL_IN_FILT_SEL" from="12" to="12" access="RW" resetVal="" desc="" hidden="false" />
      <field name="SDA_OUT_FILT0_TRIM" from="17" to="16" access="RW" resetVal="" desc="" hidden="false" />
      <field name="SDA_OUT_FILT1_TRIM" from="19" to="18" access="RW" resetVal="" desc="" hidden="false" />
      <field name="SDA_OUT_FILT2_TRIM" from="21" to="20" access="RW" resetVal="" desc="" hidden="false" />
      <field name="SDA_OUT_FILT_SEL" from="29" to="28" access="RW" resetVal="" desc="" hidden="false" />
    </register>
    <register name="_TX_CTRL" address="0x40090200" bitWidth="32" desc="Transmitter control register" hidden="false">
      <field name="DATA_WIDTH" from="3" to="0" access="RW" resetVal="" desc="Data frame width. DATA_WIDTH + 1 is the amount of bits in a transmitted data frame." hidden="false" />
      <field name="MSB_FIRST" from="8" to="8" access="RW" resetVal="" desc="Least significant bit first ('0') or most significant bit first ('1'). For I2C, this field should be '1'." hidden="false" />
    </register>
    <register name="_TX_FIFO_CTRL" address="0x40090204" bitWidth="32" desc="Transmitter FIFO control register" hidden="false">
      <field name="TRIGGER_LEVEL" from="3" to="0" access="RW" resetVal="" desc="Trigger level. When the transmitter FIFO has less entries than the amount of this field, a transmitter trigger event is generated." hidden="false" />
      <field name="CLEAR" from="16" to="16" access="RW" resetVal="" desc="When '1', the transmitter FIFO and transmitter shift register are cleared/invalidated. Invalidation will last for as long as this field is '1'. If a quick clear/invalidation is required, the field should be set to '1' and be followed by a set to '0'. If a clear/invalidation is required for an extended time period, the field should be set to '1' during the complete time period." hidden="false" />
      <field name="FREEZE" from="17" to="17" access="RW" resetVal="" desc="When '1', hardware reads from the transmitter FIFO do not remove FIFO entries. Freeze will not advance the TX FIFO read pointer." hidden="false" />
    </register>
    <register name="_TX_FIFO_STATUS" address="0x40090208" bitWidth="32" desc="Transmitter FIFO status register" hidden="false">
      <field name="USED" from="4" to="0" access="R" resetVal="" desc="Amount of entries in the transmitter FIFO. The value of this field ranges from 0 to 8." hidden="false" />
      <field name="SR_VALID" from="15" to="15" access="R" resetVal="" desc="Indicates whether the TX shift registers holds a valid data frame ('1') or not ('0')" hidden="false" />
      <field name="RD_PTR" from="20" to="16" access="R" resetVal="" desc="FIFO read pointer: FIFO location from which a data frame is read by the hardware." hidden="false" />
      <field name="WR_PTR" from="28" to="24" access="R" resetVal="" desc="FIFO write pointer: FIFO location at which a new data frame is written." hidden="false" />
    </register>
    <register name="_TX_FIFO_WR" address="0x40090240" bitWidth="32" desc="Transmitter FIFO write register" hidden="false">
      <field name="DATA" from="15" to="0" access="W" resetVal="" desc="Data frame written into the transmitter FIFO. Behavior is similar to that of a PUSH operation." hidden="false" />
    </register>
    <register name="_RX_CTRL" address="0x40090300" bitWidth="32" desc="Receiver control register" hidden="false">
      <field name="DATA_WIDTH" from="3" to="0" access="RW" resetVal="" desc="Data frame width. DATA_WIDTH + 1 is the expected amount of bits in received data frame." hidden="false" />
      <field name="MSB_FIRST" from="8" to="8" access="RW" resetVal="" desc="Least significant bit first ('0') or most significant bit first ('1')." hidden="false" />
      <field name="MEDIAN" from="9" to="9" access="RW" resetVal="" desc="Median filter. When '1', a digital 3 taps median filter is performed on input interface lines." hidden="false" />
    </register>
    <register name="_RX_FIFO_CTRL" address="0x40090304" bitWidth="32" desc="Receiver FIFO control register" hidden="false">
      <field name="TRIGGER_LEVEL" from="3" to="0" access="RW" resetVal="" desc="Trigger level. When the receiver FIFO has more entries than the amount of this field, a receiver trigger event is generated." hidden="false" />
      <field name="CLEAR" from="16" to="16" access="RW" resetVal="" desc="When '1', the receiver FIFO and receiver shift register are cleared/invalidated. Invalidation will last for as long as this field is '1'. If a quick clear/invalidation is required, the field should be set to '1' and be followed by a set to '0'. If a clear/invalidation is required for an extended time period, the field should be set to '1' during the complete time period." hidden="false" />
      <field name="FREEZE" from="17" to="17" access="RW" resetVal="" desc="When '1', hardware writes to the receiver FIFO have no effect. Freeze will not advance the RX FIFO write pointer." hidden="false" />
    </register>
    <register name="_RX_FIFO_STATUS" address="0x40090308" bitWidth="32" desc="Receiver FIFO status registerS" hidden="false">
      <field name="USED" from="4" to="0" access="R" resetVal="" desc="Amount of entries in the receiver FIFO. The value of this field ranges from 0 to 8." hidden="false" />
      <field name="SR_VALID" from="15" to="15" access="R" resetVal="" desc="Indicates whether the RX shift registers holds a (partial) valid data frame ('1') or not ('0')." hidden="false" />
      <field name="RD_PTR" from="20" to="16" access="R" resetVal="" desc="FIFO read pointer: FIFO location from which a data frame is read." hidden="false" />
      <field name="WR_PTR" from="28" to="24" access="R" resetVal="" desc="FIFO write pointer: FIFO location at which a new data frame is written by the hardware." hidden="false" />
    </register>
    <register name="_RX_MATCH" address="0x40090310" bitWidth="32" desc="Slave address and mask register" hidden="false">
      <field name="ADDR" from="7" to="0" access="RW" resetVal="" desc="Slave device address. For UART multi-processor mode all eight bits a reused. For I2C, bit 0 of the register is not used." hidden="false" />
      <field name="MASK" from="23" to="16" access="RW" resetVal="" desc="Slave device address mask. This field is a 8 bit mask that specifies which of the ADDR field bits in the SCB_RX_MATCH_ADDR register take part in the matching of the slave address." hidden="false" />
    </register>
    <register name="_RX_FIFO_RD" address="0x40090340" bitWidth="32" desc="Receiver FIFO read register" hidden="false">
      <field name="DATA" from="15" to="0" access="R" resetVal="" desc="Data read from the receiver FIFO. Reading a data frame will remove the data frame from the FIFO." hidden="false" />
    </register>
    <register name="_INTR_CAUSE" address="0x40090E00" bitWidth="32" desc="Interrupt cause register" hidden="false">
      <field name="MASTER" from="0" to="0" access="R" resetVal="" desc="Master interrupt active." hidden="false" />
      <field name="SLAVE" from="1" to="1" access="R" resetVal="" desc="Slave interrupt active." hidden="false" />
      <field name="TX" from="2" to="2" access="R" resetVal="" desc="Transmitter interrupt active." hidden="false" />
      <field name="RX" from="3" to="3" access="R" resetVal="" desc="Receiver interrupt active." hidden="false" />
      <field name="I2C_EC" from="4" to="4" access="R" resetVal="" desc="Externally clock I2C interrupt active." hidden="false" />
      <field name="SPI_EC" from="5" to="5" access="R" resetVal="" desc="Externally clocked SPI interrupt active." hidden="false" />
    </register>
    <register name="_INTR_I2C_EC" address="0x40090E80" bitWidth="32" desc="Externally clocked I2C interrupt request register" hidden="false">
      <field name="WAKE_UP" from="0" to="0" access="RW" resetVal="" desc="Wake up request. Active on incoming slave request (with address match). Only used when EC_AM is '1'." hidden="false" />
    </register>
    <register name="_INTR_I2C_EC_MASK" address="0x40090E88" bitWidth="32" desc="Externally clocked I2C interrupt mask register" hidden="false">
      <field name="WAKE_UP" from="0" to="0" access="RW" resetVal="" desc="Mask bit for corresponding bit in interrupt request register." hidden="false" />
    </register>
    <register name="_INTR_I2C_EC_MASKED" address="0x40090E8C" bitWidth="32" desc="Externally clocked SPI interrupt masked register" hidden="false">
      <field name="WAKE_UP" from="0" to="0" access="RW" resetVal="" desc="Logical and of corresponding request and mask bits." hidden="false" />
    </register>
    <register name="_INTR_INTR_SPI_EC" address="0x40090EC0" bitWidth="32" desc="Externally clocked SPI interrupt request register" hidden="false">
      <field name="WAKE_UP" from="0" to="0" access="RW" resetVal="" desc="Wake up request. Active on incoming slave request when externally clocked selection is '1'." hidden="false" />
    </register>
    <register name="_INTR_INTR_SPI_EC_MASK" address="0x40090EC8" bitWidth="32" desc="Externally clocked SPI interrupt mask register" hidden="false">
      <field name="WAKE_UP" from="0" to="0" access="RW" resetVal="" desc="Mask bit for corresponding bit in interrupt request register." hidden="false" />
    </register>
    <register name="_INTR_INTR_SPI_EC_MASKED" address="0x40090ECC" bitWidth="32" desc="Externally clocked SPI interrupt masked register" hidden="false">
      <field name="WAKE_UP" from="0" to="0" access="RW" resetVal="" desc="Logical and of corresponding request and mask bits." hidden="false" />
    </register>
    <register name="_INTR_M" address="0x40090F00" bitWidth="32" desc="Master interrupt request register." hidden="false">
      <field name="I2C_LOST_ARB" from="0" to="0" access="RW" resetVal="" desc="I2C master lost arbitration: the value driven by the master on the SDA line is not the same as the value observed on the SDA line." hidden="false" />
      <field name="I2C_NACK" from="1" to="1" access="RW" resetVal="" desc="I2C master negative acknowledgement. Set to '1', when the master receives a NACK (typically after the master transmitted the slave address or TX data)." hidden="false" />
      <field name="I2C_ACK" from="2" to="2" access="RW" resetVal="" desc="I2C master acknowledgement. Set to '1', when the master receives a ACK (typically after the master transmitted the slave address or TX data)." hidden="false" />
      <field name="I2C_STOP" from="4" to="4" access="RW" resetVal="" desc="I2C master STOP. Set to '1', when the master has transmitted a STOP." hidden="false" />
      <field name="I2C_BUS_ERR" from="8" to="8" access="RW" resetVal="" desc="I2C master bus error (unexpected detection of START or STOP condition)." hidden="false" />
      <field name="SPI_DONE" from="9" to="9" access="RW" resetVal="" desc="SPI master transfer done event: all data frames in the transmit FIFO are sent and the transmit FIFO is empty." hidden="false" />
    </register>
    <register name="_INTR_M_SET" address="0x40090F04" bitWidth="32" desc="Master interrupt set request register" hidden="false">
      <field name="I2C_LOST_ARB" from="0" to="0" access="RW" resetVal="" desc="Write with '1' to set corresponding bit in interrupt request register." hidden="false" />
      <field name="I2C_NACK" from="1" to="1" access="RW" resetVal="" desc="Write with '1' to set corresponding bit in interrupt request register." hidden="false" />
      <field name="I2C_ACK" from="2" to="2" access="RW" resetVal="" desc="Write with '1' to set corresponding bit in interrupt request register." hidden="false" />
      <field name="I2C_STOP" from="4" to="4" access="RW" resetVal="" desc="Write with '1' to set corresponding bit in interrupt request register." hidden="false" />
      <field name="I2C_BUS_ERR" from="8" to="8" access="RW" resetVal="" desc="Write with '1' to set corresponding bit in interrupt request register." hidden="false" />
      <field name="SPI_DONE" from="9" to="9" access="RW" resetVal="" desc="Write with '1' to set corresponding bit in interrupt request register." hidden="false" />
    </register>
    <register name="_INTR_M_MASK" address="0x40090F08" bitWidth="32" desc="Master interrupt mask register" hidden="false">
      <field name="I2C_LOST_ARB" from="0" to="0" access="RW" resetVal="" desc="Mask bit for corresponding bit in interrupt request register." hidden="false" />
      <field name="I2C_NACK" from="1" to="1" access="RW" resetVal="" desc="Mask bit for corresponding bit in interrupt request register." hidden="false" />
      <field name="I2C_ACK" from="2" to="2" access="RW" resetVal="" desc="Mask bit for corresponding bit in interrupt request register." hidden="false" />
      <field name="I2C_STOP" from="4" to="4" access="RW" resetVal="" desc="Mask bit for corresponding bit in interrupt request register." hidden="false" />
      <field name="I2C_BUS_ERR" from="8" to="8" access="RW" resetVal="" desc="Mask bit for corresponding bit in interrupt request register." hidden="false" />
      <field name="SPI_DONE" from="9" to="9" access="RW" resetVal="" desc="Mask bit for corresponding bit in interrupt request register." hidden="false" />
    </register>
    <register name="_INTR_M_MASKED" address="0x40090F0C" bitWidth="32" desc="Master interrupt masked request register" hidden="false">
      <field name="I2C_LOST_ARB" from="0" to="0" access="RW" resetVal="" desc="Logical and of corresponding request and mask bits." hidden="false" />
      <field name="I2C_NACK" from="1" to="1" access="RW" resetVal="" desc="Logical and of corresponding request and mask bits." hidden="false" />
      <field name="I2C_ACK" from="2" to="2" access="RW" resetVal="" desc="Logical and of corresponding request and mask bits." hidden="false" />
      <field name="I2C_STOP" from="4" to="4" access="RW" resetVal="" desc="Logical and of corresponding request and mask bits." hidden="false" />
      <field name="I2C_BUS_ERR" from="8" to="8" access="RW" resetVal="" desc="Logical and of corresponding request and mask bits." hidden="false" />
      <field name="SPI_DONE" from="9" to="9" access="RW" resetVal="" desc="Logical and of corresponding request and mask bits." hidden="false" />
    </register>
    <register name="_INTR_S" address="0x40090F40" bitWidth="32" desc="Slave interrupt request register" hidden="false">
      <field name="I2C_ARB_LOST" from="0" to="0" access="RW" resetVal="" desc="I2C slave lost arbitration: the value driven on the SDA line is not the same as the value observed on the SDA line (while the SCL line is '1')." hidden="false" />
      <field name="I2C_NACK" from="1" to="1" access="RW" resetVal="" desc="I2C slave negative acknowledgement received. Set to '1', when the slave receives a NACK (typically after the slave transmitted TX data)." hidden="false" />
      <field name="I2C_ACK" from="2" to="2" access="RW" resetVal="" desc="I2C slave acknowledgement received. Set to '1', when the slave receives a ACK (typically after the slave transmitted TX data)." hidden="false" />
      <field name="I2C_WRITE_STOP" from="3" to="3" access="RW" resetVal="" desc="I2C STOP event for I2C write transfer intended for this slave (address matching is performed).Set to '1', when STOP or REPEATED START event is detected." hidden="false" />
      <field name="I2C_STOP" from="4" to="4" access="RW" resetVal="" desc="I2C STOP event for I2C (read or write) transfer intended for this slave (address matching is performed). Set to '1', when STOP or REPEATED START event is detected" hidden="false" />
      <field name="I2C_START" from="5" to="5" access="RW" resetVal="" desc="I2C slave START received. Set to '1', when START or REPEATED START event is detected." hidden="false" />
      <field name="I2C_ADDR_MATCH" from="6" to="6" access="RW" resetVal="" desc="I2C slave matching address received. If CTRL.ADDR_ACCEPT, the received address (including the R/W bit) is available in the RX FIFO." hidden="false" />
      <field name="I2C_GENERAL" from="7" to="7" access="RW" resetVal="" desc="I2C slave general call address received.  If CTRL.ADDR_ACCEPT, the received address 0x00 (including the R/W bit) is available in the RX FIFO" hidden="false" />
      <field name="I2C_BUS_ERR" from="8" to="8" access="RW" resetVal="" desc="I2C slave bus error (unexpected detection of START or STOP condition)." hidden="false" />
      <field name="SPI_BUS_ERR" from="11" to="11" access="RW" resetVal="" desc="SPI slave deselected at an unexpected time in the SPI transfer. The Firmware may decide to clear the TX and RX FIFOs in case of this error." hidden="false" />
    </register>
    <register name="_INTR_S_SET" address="0x40090F44" bitWidth="32" desc="Slave interrupt set request register" hidden="false">
      <field name="I2C_ARB_LOST" from="0" to="0" access="RW" resetVal="" desc="Write with '1' to set corresponding bit in interrupt request register." hidden="false" />
      <field name="I2C_NACK" from="1" to="1" access="RW" resetVal="" desc="Write with '1' to set corresponding bit in interrupt request register." hidden="false" />
      <field name="I2C_ACK" from="2" to="2" access="RW" resetVal="" desc="Write with '1' to set corresponding bit in interrupt request register." hidden="false" />
      <field name="I2C_WRITE_STOP" from="3" to="3" access="RW" resetVal="" desc="Write with '1' to set corresponding bit in interrupt request register." hidden="false" />
      <field name="I2C_STOP" from="4" to="4" access="RW" resetVal="" desc="Write with '1' to set corresponding bit in interrupt request register." hidden="false" />
      <field name="I2C_START" from="5" to="5" access="RW" resetVal="" desc="Write with '1' to set corresponding bit in interrupt request register." hidden="false" />
      <field name="I2C_ADDR_MATCH" from="6" to="6" access="RW" resetVal="" desc="Write with '1' to set corresponding bit in interrupt request register." hidden="false" />
      <field name="I2C_GENERAL" from="7" to="7" access="RW" resetVal="" desc="Write with '1' to set corresponding bit in interrupt request register." hidden="false" />
      <field name="I2C_BUS_ERR" from="8" to="8" access="RW" resetVal="" desc="Write with '1' to set corresponding bit in interrupt request register." hidden="false" />
      <field name="SPI_BUS_ERR" from="11" to="11" access="RW" resetVal="" desc="Write with '1' to set corresponding bit in interrupt request register." hidden="false" />
    </register>
    <register name="_INTR_S_MASK" address="0x40090F48" bitWidth="32" desc="Slave interrupt mask register" hidden="false">
      <field name="I2C_ARB_LOST" from="0" to="0" access="RW" resetVal="" desc="Mask bit for corresponding bit in interrupt request register." hidden="false" />
      <field name="I2C_NACK" from="1" to="1" access="RW" resetVal="" desc="Mask bit for corresponding bit in interrupt request register." hidden="false" />
      <field name="I2C_ACK" from="2" to="2" access="RW" resetVal="" desc="Mask bit for corresponding bit in interrupt request register." hidden="false" />
      <field name="I2C_WRITE_STOP" from="3" to="3" access="RW" resetVal="" desc="Mask bit for corresponding bit in interrupt request register." hidden="false" />
      <field name="I2C_STOP" from="4" to="4" access="RW" resetVal="" desc="Mask bit for corresponding bit in interrupt request register." hidden="false" />
      <field name="I2C_START" from="5" to="5" access="RW" resetVal="" desc="Mask bit for corresponding bit in interrupt request register." hidden="false" />
      <field name="I2C_ADDR_MATCH" from="6" to="6" access="RW" resetVal="" desc="Mask bit for corresponding bit in interrupt request register." hidden="false" />
      <field name="I2C_GENERAL" from="7" to="7" access="RW" resetVal="" desc="Mask bit for corresponding bit in interrupt request register." hidden="false" />
      <field name="I2C_BUS_ERR" from="8" to="8" access="RW" resetVal="" desc="Mask bit for corresponding bit in interrupt request register." hidden="false" />
      <field name="SPI_BUS_ERR" from="11" to="11" access="RW" resetVal="" desc="Mask bit for corresponding bit in interrupt request register." hidden="false" />
    </register>
    <register name="_INTR_S_MASKED" address="0x40090F4C" bitWidth="32" desc="Slave interrupt masked register" hidden="false">
      <field name="I2C_ARB_LOST" from="0" to="0" access="RW" resetVal="" desc="Logical and of corresponding request and mask bits." hidden="false" />
      <field name="I2C_NACK" from="1" to="1" access="RW" resetVal="" desc="Logical and of corresponding request and mask bits." hidden="false" />
      <field name="I2C_ACK" from="2" to="2" access="RW" resetVal="" desc="Logical and of corresponding request and mask bits." hidden="false" />
      <field name="I2C_WRITE_STOP" from="3" to="3" access="RW" resetVal="" desc="Logical and of corresponding request and mask bits." hidden="false" />
      <field name="I2C_STOP" from="4" to="4" access="RW" resetVal="" desc="Logical and of corresponding request and mask bits." hidden="false" />
      <field name="I2C_START" from="5" to="5" access="RW" resetVal="" desc="Logical and of corresponding request and mask bits." hidden="false" />
      <field name="I2C_ADDR_MATCH" from="6" to="6" access="RW" resetVal="" desc="Logical and of corresponding request and mask bits." hidden="false" />
      <field name="I2C_GENERAL" from="7" to="7" access="RW" resetVal="" desc="Logical and of corresponding request and mask bits." hidden="false" />
      <field name="SPI_BUS_ERR" from="11" to="11" access="RW" resetVal="" desc="Logical and of corresponding request and mask bits." hidden="false" />
    </register>
    <register name="_INTR_TX" address="0x40090F80" bitWidth="32" desc="Transmitter interrupt request register" hidden="false">
      <field name="TRIGGER" from="0" to="0" access="RW" resetVal="" desc="Less entries in the TX FIFO than the value specified by TRIGGER_LEVEL in SCB_TX_FIFO_CTL." hidden="false" />
      <field name="NOT_FULL" from="1" to="1" access="RW" resetVal="" desc="TX FIFO is not full." hidden="false" />
      <field name="EMPTY" from="4" to="4" access="RW" resetVal="" desc="TX FIFO is empty; i.e. it has 0 entries." hidden="false" />
      <field name="OVERFLOW" from="5" to="5" access="RW" resetVal="" desc="Attempt to write to a full TX FIFO." hidden="false" />
      <field name="UNDERFLOW" from="6" to="6" access="RW" resetVal="" desc="Attempt to read from an empty TX FIFO." hidden="false" />
      <field name="UART_NACK" from="8" to="8" access="RW" resetVal="" desc="UART transmitter received a negative acknowledgement in SmartCard mode. Set to '1', when event is detected." hidden="false" />
      <field name="UART_DONE" from="9" to="9" access="RW" resetVal="" desc="UART transmitter done event. This happens when the IP is done transferring all data in the TX FIFO; i.e. EMPTY is '1'. Set to '1', when event is detected." hidden="false" />
      <field name="UART_ARB_LOST" from="10" to="10" access="RW" resetVal="" desc="UART lost arbitration: the value driven on the TX line is not the same as the value observed on the RX line. " hidden="false" />
    </register>
    <register name="_INTR_TX_SET" address="0x40090F84" bitWidth="32" desc="Transmitter interrupt set request register" hidden="false">
      <field name="TRIGGER" from="0" to="0" access="RW" resetVal="" desc="Write with '1' to set corresponding bit in interrupt request register." hidden="false" />
      <field name="NOT_FULL" from="1" to="1" access="RW" resetVal="" desc="Write with '1' to set corresponding bit in interrupt request register." hidden="false" />
      <field name="EMPTY" from="4" to="4" access="RW" resetVal="" desc="Write with '1' to set corresponding bit in interrupt request register." hidden="false" />
      <field name="OVERFLOW" from="5" to="5" access="RW" resetVal="" desc="Write with '1' to set corresponding bit in interrupt request register." hidden="false" />
      <field name="UNDERFLOW" from="6" to="6" access="RW" resetVal="" desc="Write with '1' to set corresponding bit in interrupt request register." hidden="false" />
      <field name="UART_NACK" from="8" to="8" access="RW" resetVal="" desc="Write with '1' to set corresponding bit in interrupt request register." hidden="false" />
      <field name="UART_DONE" from="9" to="9" access="RW" resetVal="" desc="Write with '1' to set corresponding bit in interrupt request register." hidden="false" />
      <field name="UART_ARB_LOST" from="10" to="10" access="RW" resetVal="" desc="Write with '1' to set corresponding bit in interrupt request register." hidden="false" />
    </register>
    <register name="_INTR_TX_MASK" address="0x40090F88" bitWidth="32" desc="Transmitter interrupt mask request register" hidden="false">
      <field name="TRIGGER" from="0" to="0" access="RW" resetVal="" desc="Mask bit for corresponding bit in interrupt request register." hidden="false" />
      <field name="NOT_FULL" from="1" to="1" access="RW" resetVal="" desc="Mask bit for corresponding bit in interrupt request register." hidden="false" />
      <field name="EMPTY" from="4" to="4" access="RW" resetVal="" desc="Mask bit for corresponding bit in interrupt request register." hidden="false" />
      <field name="OVERFLOW" from="5" to="5" access="RW" resetVal="" desc="Mask bit for corresponding bit in interrupt request register." hidden="false" />
      <field name="UNDERFLOW" from="6" to="6" access="RW" resetVal="" desc="Mask bit for corresponding bit in interrupt request register." hidden="false" />
      <field name="UART_NACK" from="8" to="8" access="RW" resetVal="" desc="Mask bit for corresponding bit in interrupt request register." hidden="false" />
      <field name="UART_DONE" from="9" to="9" access="RW" resetVal="" desc="Mask bit for corresponding bit in interrupt request register." hidden="false" />
      <field name="UART_ARB_LOST" from="10" to="10" access="RW" resetVal="" desc="Mask bit for corresponding bit in interrupt request register." hidden="false" />
    </register>
    <register name="_INTR_TX_MASKED" address="0x40090F8C" bitWidth="32" desc="Transmitter interrupt masked request register" hidden="false">
      <field name="TRIGGER" from="0" to="0" access="RW" resetVal="" desc="Logical and of corresponding request and mask bits." hidden="false" />
      <field name="NOT_FULL" from="1" to="1" access="RW" resetVal="" desc="Logical and of corresponding request and mask bits." hidden="false" />
      <field name="EMPTY" from="4" to="4" access="RW" resetVal="" desc="Logical and of corresponding request and mask bits." hidden="false" />
      <field name="OVERFLOW" from="5" to="5" access="RW" resetVal="" desc="Logical and of corresponding request and mask bits." hidden="false" />
      <field name="UNDERFLOW" from="6" to="6" access="RW" resetVal="" desc="Logical and of corresponding request and mask bits." hidden="false" />
      <field name="UART_NACK" from="8" to="8" access="RW" resetVal="" desc="Logical and of corresponding request and mask bits." hidden="false" />
      <field name="UART_DONE" from="9" to="9" access="RW" resetVal="" desc="Logical and of corresponding request and mask bits." hidden="false" />
      <field name="UART_ARB_LOST" from="10" to="10" access="RW" resetVal="" desc="Logical and of corresponding request and mask bits." hidden="false" />
    </register>
    <register name="_INTR_RX" address="0x40090FC0" bitWidth="32" desc="Receiver interrupt request register" hidden="false">
      <field name="TRIGGER" from="0" to="0" access="RW" resetVal="" desc="More entries in the RX FIFO than the value specified by TRIGGER_LEVEL in SCB_RX_FIFO_CTL." hidden="false" />
      <field name="NOT_EMPTY" from="2" to="2" access="RW" resetVal="" desc="RX FIFO is not empty." hidden="false" />
      <field name="FULL" from="3" to="3" access="RW" resetVal="" desc="RX FIFO is full. Note that received data frames are lost when the RX FIFO is full." hidden="false" />
      <field name="OVERFLOW" from="5" to="5" access="RW" resetVal="" desc="Attempt to write to a full RX FIFO. Note: in I2C mode, the OVERFLOW is set when a data frame is received and the RX FIFO is full, independent of whether it is ACK'd or NACK'd." hidden="false" />
      <field name="UNDERFLOW" from="6" to="6" access="RW" resetVal="" desc="Attempt to read from an empty RX FIFO." hidden="false" />
      <field name="FRAME_ERR" from="8" to="8" access="RW" resetVal="" desc="Frame error in received data frame. Set to '1', when event is detected." hidden="false" />
      <field name="PARITY_ERR" from="9" to="9" access="RW" resetVal="" desc="Parity error in received data frame. Set to '1', when event is detected." hidden="false" />
      <field name="BAUD_DETECT" from="10" to="10" access="RW" resetVal="" desc="LIN baud rate detection is completed." hidden="false" />
      <field name="BREAK_DETECT" from="11" to="11" access="RW" resetVal="" desc="Break detection is successful: the line is '0' for UART_RX_CTRL.BREAK_WIDTH + 1 bit period." hidden="false" />
    </register>
    <register name="_INTR_RX_SET" address="0x40090FC4" bitWidth="32" desc="Receiver interrupt set request register" hidden="false">
      <field name="TRIGGER" from="0" to="0" access="RW" resetVal="" desc="Write with '1' to set corresponding bit in interrupt request register." hidden="false" />
      <field name="NOT_EMPTY" from="2" to="2" access="RW" resetVal="" desc="Write with '1' to set corresponding bit in interrupt request register." hidden="false" />
      <field name="FULL" from="3" to="3" access="RW" resetVal="" desc="Write with '1' to set corresponding bit in interrupt request register." hidden="false" />
      <field name="OVERFLOW" from="5" to="5" access="RW" resetVal="" desc="Write with '1' to set corresponding bit in interrupt request register." hidden="false" />
      <field name="UNDERFLOW" from="6" to="6" access="RW" resetVal="" desc="Write with '1' to set corresponding bit in interrupt request register." hidden="false" />
      <field name="FRAME_ERR" from="8" to="8" access="RW" resetVal="" desc="Write with '1' to set corresponding bit in interrupt request register." hidden="false" />
      <field name="PARITY_ERR" from="9" to="9" access="RW" resetVal="" desc="Write with '1' to set corresponding bit in interrupt request register." hidden="false" />
      <field name="BAUD_DETECT" from="10" to="10" access="RW" resetVal="" desc="Write with '1' to set corresponding bit in interrupt request register." hidden="false" />
      <field name="BREAK_DETECT" from="11" to="11" access="RW" resetVal="" desc="Write with '1' to set corresponding bit in interrupt request register." hidden="false" />
    </register>
    <register name="_INTR_RX_MASK" address="0x40090FC8" bitWidth="32" desc="Receiver interrupt mask register" hidden="false">
      <field name="TRIGGER" from="0" to="0" access="RW" resetVal="" desc="Mask bit for corresponding bit in interrupt request register." hidden="false" />
      <field name="NOT_EMPTY" from="2" to="2" access="RW" resetVal="" desc="Mask bit for corresponding bit in interrupt request register." hidden="false" />
      <field name="FULL" from="3" to="3" access="RW" resetVal="" desc="Mask bit for corresponding bit in interrupt request register." hidden="false" />
      <field name="OVERFLOW" from="5" to="5" access="RW" resetVal="" desc="Mask bit for corresponding bit in interrupt request register." hidden="false" />
      <field name="UNDERFLOW" from="6" to="6" access="RW" resetVal="" desc="Mask bit for corresponding bit in interrupt request register." hidden="false" />
      <field name="FRAME_ERR" from="8" to="8" access="RW" resetVal="" desc="Mask bit for corresponding bit in interrupt request register." hidden="false" />
      <field name="PARITY_ERR" from="9" to="9" access="RW" resetVal="" desc="Mask bit for corresponding bit in interrupt request register." hidden="false" />
      <field name="BAUD_DETECT" from="10" to="10" access="RW" resetVal="" desc="Mask bit for corresponding bit in interrupt request register." hidden="false" />
      <field name="BREAK_DETECT" from="11" to="11" access="RW" resetVal="" desc="Mask bit for corresponding bit in interrupt request register." hidden="false" />
    </register>
    <register name="_INTR_RX_MASKED" address="0x40090FCC" bitWidth="32" desc="Receiver interrupt masked register" hidden="false">
      <field name="TRIGGER" from="0" to="0" access="RW" resetVal="" desc="Logical and of corresponding request and mask bits." hidden="false" />
      <field name="NOT_EMPTY" from="2" to="2" access="RW" resetVal="" desc="Logical and of corresponding request and mask bits." hidden="false" />
      <field name="FULL" from="3" to="3" access="RW" resetVal="" desc="Logical and of corresponding request and mask bits." hidden="false" />
      <field name="OVERFLOW" from="5" to="5" access="RW" resetVal="" desc="Logical and of corresponding request and mask bits." hidden="false" />
      <field name="UNDERFLOW" from="6" to="6" access="RW" resetVal="" desc="Logical and of corresponding request and mask bits." hidden="false" />
      <field name="FRAME_ERR" from="8" to="8" access="RW" resetVal="" desc="Logical and of corresponding request and mask bits" hidden="false" />
      <field name="PARITY_ERR" from="9" to="9" access="RW" resetVal="" desc="Logical and of corresponding request and mask bits" hidden="false" />
      <field name="BAUD_DETECT" from="10" to="10" access="RW" resetVal="" desc="Logical and of corresponding request and mask bits" hidden="false" />
      <field name="BREAK_DETECT" from="11" to="11" access="RW" resetVal="" desc="Logical and of corresponding request and mask bits" hidden="false" />
    </register>
  </block>
  <block name="BLUE" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
  <block name="GREEN" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
  <block name="RED" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
  <block name="VDAC_1" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false">
    <block name="VDAC_1_UAB" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false">
      <block name="halfuab" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
      <register name="UAB_UAB_CTRL" address="0x40340000" bitWidth="32" desc="Global UAB control" hidden="false">
        <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="- 0: UAB IP disabled (put analog in power down, open all switches)&#xA;- 1: UAB IP enabled" hidden="false" />
      </register>
      <register name="UAB_INTR" address="0x40340020" bitWidth="32" desc="Interrupt request register" hidden="false">
        <field name="COMP0" from="0" to="0" access="RW" resetVal="" desc="Comparator 0 Interrupt: hardware sets this interrupt when comparator 0 triggers. Write with '1' to clear bit." hidden="false" />
        <field name="VDAC0_EMPTY" from="1" to="1" access="RW" resetVal="" desc="VDAC 0 Interrupt: hardware sets this interrupt when VDAC 0 next value field is empty. Write with '1' to clear bit." hidden="false" />
        <field name="DC0_RES" from="2" to="2" access="RW" resetVal="" desc="Decimator 0 Result Interrupt: hardware sets this interrupt when Decimator 0 writes a new result value in DC0_RES register. Write with '1' to clear bit." hidden="false" />
        <field name="COMP1" from="16" to="16" access="RW" resetVal="" desc="Comparator 1 Interrupt: hardware sets this interrupt when comparator 1 triggers. Write with '1' to clear bit." hidden="false" />
        <field name="VDAC1_EMPTY" from="17" to="17" access="RW" resetVal="" desc="VDAC 1 Interrupt: hardware sets this interrupt when VDAC 1 next value field is empty. Write with '1' to clear bit." hidden="false" />
        <field name="DC1_RES" from="18" to="18" access="RW" resetVal="" desc="Decimator 1 Result Interrupt: hardware sets this interrupt when Decimator 1 writes a new result value in DC1_RES register. Write with '1' to clear bit." hidden="false" />
      </register>
      <register name="UAB_INTR_SET" address="0x40340024" bitWidth="32" desc="Interrupt request set register" hidden="false">
        <field name="COMP0_SET" from="0" to="0" access="RW" resetVal="" desc="Write with '1' to set corresponding bit in interrupt request register." hidden="false" />
        <field name="VDAC0_EMPTY_SET" from="1" to="1" access="RW" resetVal="" desc="Write with '1' to set corresponding bit in interrupt request register." hidden="false" />
        <field name="DC0_RES_SET" from="2" to="2" access="RW" resetVal="" desc="Write with '1' to set corresponding bit in interrupt request register." hidden="false" />
        <field name="COMP1_SET" from="16" to="16" access="RW" resetVal="" desc="Write with '1' to set corresponding bit in interrupt request register." hidden="false" />
        <field name="VDAC1_EMPTY_SET" from="17" to="17" access="RW" resetVal="" desc="Write with '1' to set corresponding bit in interrupt request register." hidden="false" />
        <field name="DC1_RES_SET" from="18" to="18" access="RW" resetVal="" desc="Write with '1' to set corresponding bit in interrupt request register." hidden="false" />
      </register>
      <register name="UAB_INTR_MASK" address="0x40340028" bitWidth="32" desc="Interrupt request mask" hidden="false">
        <field name="COMP0_MASK" from="0" to="0" access="RW" resetVal="" desc="Mask bit for corresponding bit in interrupt request register." hidden="false" />
        <field name="VDAC0_EMPTY_MASK" from="1" to="1" access="RW" resetVal="" desc="Mask bit for corresponding bit in interrupt request register." hidden="false" />
        <field name="DC0_RES_MASK" from="2" to="2" access="RW" resetVal="" desc="Mask bit for corresponding bit in interrupt request register." hidden="false" />
        <field name="COMP1_MASK" from="16" to="16" access="RW" resetVal="" desc="Mask bit for corresponding bit in interrupt request register." hidden="false" />
        <field name="VDAC1_EMPTY_MASK" from="17" to="17" access="RW" resetVal="" desc="Mask bit for corresponding bit in interrupt request register." hidden="false" />
        <field name="DC1_RES_MASK" from="18" to="18" access="RW" resetVal="" desc="Mask bit for corresponding bit in interrupt request register." hidden="false" />
      </register>
      <register name="UAB_INTR_MASKED" address="0x4034002C" bitWidth="32" desc="Interrupt request masked" hidden="false">
        <field name="COMP0_MASKED" from="0" to="0" access="R" resetVal="" desc="Logical and of corresponding request and mask bits." hidden="false" />
        <field name="VDAC0_EMPTY_MASKED" from="1" to="1" access="R" resetVal="" desc="Logical and of corresponding request and mask bits." hidden="false" />
        <field name="DC0_RES_MASKED" from="2" to="2" access="R" resetVal="" desc="Logical and of corresponding request and mask bits." hidden="false" />
        <field name="COMP1_MASKED" from="16" to="16" access="R" resetVal="" desc="Logical and of corresponding request and mask bits." hidden="false" />
        <field name="VDAC1_EMPTY_MASKED" from="17" to="17" access="R" resetVal="" desc="Logical and of corresponding request and mask bits." hidden="false" />
        <field name="DC1_RES_MASKED" from="18" to="18" access="R" resetVal="" desc="Logical and of corresponding request and mask bits." hidden="false" />
      </register>
      <register name="UAB_OA0_CTRL" address="0x40340200" bitWidth="32" desc="Opamp, comparator, buffer  controls" hidden="false">
        <field name="OA0_PWR" from="2" to="0" access="RW" resetVal="" desc="Opamp0 power level" hidden="false" />
        <field name="CMP0_PWR" from="10" to="8" access="RW" resetVal="" desc="Comparator0 power level" hidden="false" />
        <field name="CMP0_EDGE" from="13" to="12" access="RW" resetVal="" desc="Comparator0 edge detect for interrupt and trigger" hidden="false">
          <value name="DISABLE" value="0" desc="Disabled, no interrupts will be detected" />
          <value name="RISING" value="1" desc="Rising edge" />
          <value name="FALLING" value="10" desc="Falling edge" />
          <value name="BOTH" value="11" desc="Both rising and falling edges" />
        </field>
        <field name="CMP0_DSI_LEVEL" from="14" to="14" access="RW" resetVal="" desc="Comparator0 trigger out level : 0=pulse, 1=level" hidden="false" />
        <field name="CTRL0_SPARE" from="15" to="15" access="RW" resetVal="" desc="Spare bit" hidden="false" />
        <field name="REF0_PWR" from="18" to="16" access="RW" resetVal="" desc="Reference0 buffer power level" hidden="false" />
        <field name="REF0_PTS" from="19" to="19" access="RW" resetVal="" desc="1- Pull the Reference0 buffer output to VDDA" hidden="false" />
        <field name="AGND0_PWR" from="22" to="20" access="RW" resetVal="" desc="Agnd0 buffer power level" hidden="false" />
        <field name="AGND0_PTS" from="23" to="23" access="RW" resetVal="" desc="1 - Pull Agnd0 buffer output to VDDA" hidden="false" />
        <field name="SW_GG" from="24" to="24" access="RW" resetVal="" desc="Connect outputs of Agnd0 and Agnd1 buffer, one buffer must be off.&#xA;This is to drive both UAB halves with the same buffer, so both halves get the same offset noise." hidden="false" />
        <field name="SPARE0_EN" from="25" to="25" access="RW" resetVal="" desc="1 - Enable spare reference" hidden="false" />
        <field name="H0_PWR" from="31" to="30" access="RW" resetVal="" desc="UAB Half, power profile" hidden="false">
          <value name="NORMAL" value="0" desc="Normal, for normal analog clock speeds" />
          <value name="ULTRA_LOW" value="1" desc="Ultra low power, only allowed for lower analog clock speeds" />
          <value name="ULTRA_HIGH" value="10" desc="Ultra high performance, for higher analog clock speeds (also ultra high power)" />
          <value name="Reserved" value="11" desc="Reserved, do not use" />
        </field>
      </register>
      <register name="UAB_CAP_CTRL0" address="0x40340204" bitWidth="32" desc="Capacitance controls" hidden="false">
        <field name="CB0_GND" from="5" to="5" access="RW" resetVal="" desc="Ground unused caps of CB0 array&#xA;0: leave unused caps floating&#xA;1: ground unused caps (typical when attentuation Cap is used, e.g. for VDAC use-case)" hidden="false" />
        <field name="CC0_GND" from="6" to="6" access="RW" resetVal="" desc="Ground unused caps of CC0 array&#xA;0: leave unused caps floating&#xA;1: ground unused caps (typical when attentuation Cap is used)" hidden="false" />
        <field name="FRC0_SIGN_BIT" from="28" to="28" access="RW" resetVal="" desc="Forces the sign bit to be 1 in DAC mode.  This is used to achieve &#xA;0 - AGND0 range for unsigned numbers using DAC mode 2" hidden="false" />
        <field name="DAC0_MODE_EN" from="29" to="29" access="RW" resetVal="" desc="0: SIGN0_VAL can be programmed to be a modbit source&#xA;1: SIGN0_VAL is a dedicated sign bit (FW modbit source tied to 0)" hidden="false" />
        <field name="DAC0_MODE" from="31" to="30" access="RW" resetVal="" desc="DAC mode, this determines the AB Cap Value decoding" hidden="false">
          <value name="UNSIGNED12" value="0" desc="Off or Unsigned 12-bit VDAC, i.e. no AB Cap value decoding.&#xA;SIGN1_VAL can be used as Firmware controlled modbit (e.g. to invert the Voltage for a Sign + Magnitude VDAC)" />
          <value name="VIRT_SIGNED12" value="1" desc="Virtual signed 12-bits' VDAC. AB Cap value decoding: &#xA;add 0x800 to the 12-bit AB Cap Value (=invert MSB), to convert the lowest signed number 0x800 to the lowest unsigned number 0x000. This is the same as the SAR handles 12-bit 'virtual' signed numbers." />
          <value name="SIGNED13" value="10" desc="Signed 13-bit twos complement. AB Cap value decoding: &#xA;for negative values (SIGN0_VAL=1) the AB Cap values are inverted, the 64th B cap unit is enabled and the Voltage should be inverted.&#xA;- Voltage inversion only works if the right clocking waveforms, switch settings and reference voltages are used.&#xA;- Enabling the 64th B cap unit adds 1 so that only a AB Cap value inversion is needed to create a true twos complement." />
          <value name="RESERVED" value="11" desc="" />
        </field>
      </register>
      <register name="UAB_CAP_ABCF0_VAL" address="0x40340208" bitWidth="32" desc="Capacitance values for CA0, CB0, CC0 and CF0" hidden="false">
        <field name="CB0_VAL" from="5" to="0" access="RW" resetVal="" desc="Cap B0 Value, in DAC_MODE 1 and 2 this value is decoded" hidden="false" />
        <field name="CA0_VAL" from="11" to="6" access="RW" resetVal="" desc="Cap A0 Value, in DAC_MODE 1 and 2 this value is decoded" hidden="false" />
        <field name="SIGN0_VAL" from="12" to="12" access="RW" resetVal="" desc="Sign bit Value, when used in DAC_MODE, otherwise Firmware modbit.&#xA;In DAC_MODE the modbit should be used to invert the voltage on the AB Caps for the negative DAC values." hidden="false" />
        <field name="CB0_64" from="13" to="13" access="RW" resetVal="" desc="Enable 64th Cap of CB0 array.  In DAC mode the FW setting is overridden by the hardware based on DAC_MODE setting.&#xA;1 - Enables the 64th cap.  This will also set CB0_val[5:0] to be 6'h3F" hidden="false" />
        <field name="CC0_VAL" from="21" to="16" access="RW" resetVal="" desc="Cap C0 Value" hidden="false" />
        <field name="CF0_VAL" from="28" to="24" access="RW" resetVal="" desc="Cap F0 Value [2..64 is the range in steps of 2]" hidden="false" />
      </register>
      <register name="UAB_CAP_AB0_VAL_NXT" address="0x4034020C" bitWidth="32" desc="Next capacitance values for CA0 and CB0" hidden="false">
        <field name="CB0_VAL" from="5" to="0" access="RW" resetVal="" desc="Cap B0 Value" hidden="false" />
        <field name="CA0_VAL" from="11" to="6" access="RW" resetVal="" desc="Cap A0 Value" hidden="false" />
        <field name="SIGN0_VAL" from="12" to="12" access="RW" resetVal="" desc="Sign bit Value" hidden="false" />
      </register>
      <register name="UAB_CAP_CF0_VAL_NXT" address="0x40340210" bitWidth="32" desc="Next capacitance values for CC0 and CF0" hidden="false">
        <field name="CC0_VAL" from="21" to="16" access="RW" resetVal="" desc="Cap C0 Value" hidden="false" />
        <field name="CF0_VAL" from="28" to="24" access="RW" resetVal="" desc="Cap F0 Value" hidden="false" />
        <field name="CC0_VAL_UPDATE" from="30" to="30" access="RW" resetVal="" desc="1 - Update the CC0 cap value with CAP_CC0_VAL_NXT.CC0_VAL" hidden="false" />
        <field name="CF0_VAL_UPDATE" from="31" to="31" access="RW" resetVal="" desc="1 - Update the CF0 cap value with CAP_CF0_VAL_NXT.CF0_VAL" hidden="false" />
      </register>
      <register name="UAB_STARTUP_DELAY0" address="0x40340220" bitWidth="32" desc="Startup delay" hidden="false">
        <field name="STARTUP_DELAY" from="15" to="0" access="RW" resetVal="" desc="Startup delay to synchronize the UAB-SAR interface. The usage and meaning of this field depends on the value of the ALIGN_MODE bit (below).   A value of 0 disables this function." hidden="false" />
        <field name="ALIGN_MODE" from="16" to="16" access="RW" resetVal="" desc="0 - STARTUP_DELAY is number of clk_hf clocks to delay the UAB clock after a SAR Trigger for UAB-SAR alignment in scheduled mode&#xA;1 - STARTUP_DELAY is number of clk_hf clocks to delay UAB trigger to SAR for UAB-SAR alignment in unscheduled mode" hidden="false" />
      </register>
      <register name="UAB_SUBSAMPLE_CTRL0" address="0x40340224" bitWidth="32" desc="Subsample control" hidden="false">
        <field name="SUBSAMPLE" from="7" to="0" access="RW" resetVal="" desc="Subsampling: suppress Valid output during the first SUBSAMPLE analog clock periods. Only allow Valid output in the last of the SUBSAMPLE+1 analog clock periods.&#xA;A value of 0 will not suppress Valid output." hidden="false" />
        <field name="SUBSAMPLE_INIT" from="15" to="8" access="RW" resetVal="" desc="Initial value of the subsampling down counter. Before this UAB half is running the firmware can write to this field the initial value of the subsample down counter. It is recommend that the following is true for the initial value  SUBSAMPLE_INIT&lt;=SUBSAMPLE, however this is not a requirement. Writing a bigger value can be used to postpone the very first Valid output." hidden="false" />
      </register>
      <register name="UAB_SW_STATIC0" address="0x40340230" bitWidth="32" desc="Static switches for half 0 of the UAB" hidden="false">
        <field name="SW_G00" from="0" to="0" access="RW" resetVal="" desc="VIN00 to OA0.vplus (AG0)" hidden="false" />
        <field name="SW_G01" from="1" to="1" access="RW" resetVal="" desc="VIN01 to OA0.vplus (AG0)" hidden="false" />
        <field name="SW_G02" from="2" to="2" access="RW" resetVal="" desc="VIN02 to OA0.vplus (AG0)" hidden="false" />
        <field name="SW_G03" from="3" to="3" access="RW" resetVal="" desc="VIN03 to OA0.vplus (AG0)" hidden="false" />
        <field name="SW_R0G" from="4" to="4" access="RW" resetVal="" desc="REF0 to OA0.vplus (AG0)" hidden="false" />
        <field name="SW_G0G" from="5" to="5" access="RW" resetVal="" desc="AGND0 to OA0.vplus (AG0)" hidden="false" />
        <field name="SW_R0T" from="8" to="8" access="RW" resetVal="" desc="REF0 to cmp0.vminus (Threshold)" hidden="false" />
        <field name="SW_G0T" from="9" to="9" access="RW" resetVal="" desc="AGND0 to cmp0.vminus (Threshold)" hidden="false" />
        <field name="SW_Q0T" from="10" to="10" access="RW" resetVal="" desc="OUT1 to cmp0.vminus (Threshold)" hidden="false" />
        <field name="EARLY_P0S" from="12" to="12" access="RW" resetVal="" desc="OUT0 to Sum0 switch timing: 0=Regular, 1=Early" hidden="false" />
        <field name="EARLY_P0O" from="13" to="13" access="RW" resetVal="" desc="OUT0 to VOUT0 switch timing: 0=Regular, 1=Early" hidden="false" />
        <field name="RMB0_BITS" from="19" to="16" access="RW" resetVal="" desc="Risk mitigation bits (To be defined if they are used)" hidden="false" />
        <field name="STRB_RST0_SEL" from="28" to="24" access="RW" resetVal="" desc="Select source either for VDAC strobe or analog-reset to discharge all Caps (Delsig Modulator use-case)&#xA;0 = Decimator0 half 0 analog-reset output&#xA;1 = Decimator0 half 1 analog-reset output&#xA;2 = Decimator1 half 0 analog-reset output&#xA;3 = Decimator1 half 1 analog-reset output&#xA;4 = Decimator2 half 0 analog-reset output&#xA;5 = Decimator2 half 1 analog-reset output&#xA;6 = Decimator3 half 0 analog-reset output&#xA;7 = Decimator3 half 1 analog-reset output&#xA;8-31 = generic trigger input 0-23&#xA;For PASS4B  only values 0-1 and 8-13 are legal." hidden="false" />
        <field name="STRB_RST0_EN" from="29" to="29" access="RW" resetVal="" desc="Enable VDAC strobe or UAB analog-reset:&#xA;0: Use selected source as VDAC strobe for next CA0 and CB0 values&#xA;1: Use selected source as Analog-reset (discharge all Caps)" hidden="false" />
      </register>
      <register name="UAB_SW_MODBIT_SRC0" address="0x40340234" bitWidth="32" desc="Select source of Modbit for A,B and C branches of half 0" hidden="false">
        <field name="MODBIT0_SRC0_SEL" from="4" to="0" access="RW" resetVal="" desc="Select source of modbit for A &amp; B branches&#xA;0=UAB0 half 0 comparator output&#xA;1=UAB0 half 1 comparator output&#xA;2=UAB1 half 0 comparator output&#xA;3=UAB1 half 1 comparator output&#xA;4=UAB2 half 0 comparator output&#xA;5=UAB2 half 1 comparator output&#xA;6=UAB3 half 0 comparator output&#xA;7=UAB3 half 1 comparator output&#xA;8-30 = generic trigger inputs 0-22&#xA;31=SIGN0_VAL, also used as Firmware modbit. &#xA;For PASS4B  only values 0-1 and 8-13 and 31 are legal." hidden="false" />
        <field name="MODBIT1_SRC0_SEL" from="12" to="8" access="RW" resetVal="" desc="Select source of modbit for C branch&#xA;0=UAB0 half 0 comparator output&#xA;1=UAB0 half 1 comparator output&#xA;2=UAB1 half 0 comparator output&#xA;3=UAB1 half 1 comparator output&#xA;4=UAB2 half 0 comparator output&#xA;5=UAB2 half 1 comparator output&#xA;6=UAB3 half 0 comparator output&#xA;7=UAB3 half 1 comparator output&#xA;8-30 = generic trigger inputs 0-22&#xA;31=SIGN0_VAL, also used as Firmware modbit. &#xA;For PASS4B  only values 0-1 and 8-13 and 31 are legal." hidden="false" />
      </register>
      <register name="UAB_SW_CA0_IN0" address="0x40340240" bitWidth="32" desc="Cap A0 input switches set 0" hidden="false">
        <field name="SW_A00_CMP" from="3" to="0" access="RW" resetVal="" desc="VIN00 to Cap A0 input, allows for modbit control" hidden="false" />
        <field name="SW_A01_CMP" from="7" to="4" access="RW" resetVal="" desc="VIN01 to Cap A0 input, allows for modbit control" hidden="false" />
        <field name="SW_A02_CMP" from="11" to="8" access="RW" resetVal="" desc="VIN02 to Cap A0 input, allows for modbit control" hidden="false" />
        <field name="SW_A03_CMP" from="15" to="12" access="RW" resetVal="" desc="VIN03 to Cap A0 input, allows for modbit control" hidden="false" />
        <field name="SW_A0P" from="19" to="16" access="RW" resetVal="" desc="OUT0 to Cap A0 input" hidden="false" />
        <field name="SW_A0Q" from="23" to="20" access="RW" resetVal="" desc="OUT1 to Cap A0 input" hidden="false" />
      </register>
      <register name="UAB_SW_CA0_IN1" address="0x40340244" bitWidth="32" desc="Cap A0 input switches set 1" hidden="false">
        <field name="SW_AA" from="3" to="0" access="RW" resetVal="" desc="Cap A0 input to Cap A1 input&#xA;(Note: In the UAB design this is the called AM switch)" hidden="false" />
        <field name="SW_A0R_CMP" from="7" to="4" access="RW" resetVal="" desc="REF0 to Cap A0 input, allows for modbit control" hidden="false" />
        <field name="SW_A0G_CMP" from="11" to="8" access="RW" resetVal="" desc="AGND0 to Cap A0 input, allows for modbit control" hidden="false" />
        <field name="SW_A0V_CMP" from="15" to="12" access="RW" resetVal="" desc="VSS to Cap A0 input, allows for modbit control" hidden="false" />
      </register>
      <register name="UAB_SW_CA0_TOP" address="0x40340248" bitWidth="32" desc="Cap A0 top plate switches" hidden="false">
        <field name="SW_R0A_CMP" from="3" to="0" access="RW" resetVal="" desc="Cap A0 top plate to REF0, allows for modbit control" hidden="false" />
        <field name="SW_G0A_CMP" from="7" to="4" access="RW" resetVal="" desc="Cap A0 top plate to AGND0, allows for modbit control" hidden="false" />
        <field name="SW_V0A_CMP" from="11" to="8" access="RW" resetVal="" desc="Cap A0 top plate to VSS, allows for modbit control" hidden="false" />
        <field name="SW_S0A" from="19" to="16" access="RW" resetVal="" desc="Cap A0 top plate to SUM0" hidden="false" />
      </register>
      <register name="UAB_SW_CB0_IN0" address="0x40340250" bitWidth="32" desc="Cap B0 input switches set 0" hidden="false">
        <field name="SW_B00_CMP" from="3" to="0" access="RW" resetVal="" desc="VIN00 to Cap B0 input, allows for modbit control" hidden="false" />
        <field name="SW_B01_CMP" from="7" to="4" access="RW" resetVal="" desc="VIN01 to Cap B0 input, allows for modbit control" hidden="false" />
        <field name="SW_B02_CMP" from="11" to="8" access="RW" resetVal="" desc="VIN02 to Cap B0 input, allows for modbit control" hidden="false" />
        <field name="SW_B03_CMP" from="15" to="12" access="RW" resetVal="" desc="VIN03 to Cap B0 input, allows for modbit control" hidden="false" />
        <field name="SW_B0P" from="19" to="16" access="RW" resetVal="" desc="OUT0 to Cap B0 input" hidden="false" />
        <field name="SW_B0Q" from="23" to="20" access="RW" resetVal="" desc="OUT1 to Cap B0 input" hidden="false" />
      </register>
      <register name="UAB_SW_CB0_IN1" address="0x40340254" bitWidth="32" desc="Cap B0 input switches set 1" hidden="false">
        <field name="SW_BB" from="3" to="0" access="RW" resetVal="" desc="Cap B0 input to Cap B1 input&#xA;(Note: In the UAB design this is called the BM switch)" hidden="false" />
        <field name="SW_B0R_CMP" from="7" to="4" access="RW" resetVal="" desc="REF0 to Cap B0 input, allows for modbit control" hidden="false" />
        <field name="SW_B0G_CMP" from="11" to="8" access="RW" resetVal="" desc="AGND0 to Cap B0 input, allows for modbit control" hidden="false" />
        <field name="SW_B0V_CMP" from="15" to="12" access="RW" resetVal="" desc="VSS to Cap B0 input, allows for modbit control" hidden="false" />
      </register>
      <register name="UAB_SW_CB0_TOP" address="0x40340258" bitWidth="32" desc="Cap A0 top plate switches" hidden="false">
        <field name="SW_R0B_CMP" from="3" to="0" access="RW" resetVal="" desc="Cap B0 top plate to REF0, allows for modbit control" hidden="false" />
        <field name="SW_G0B_CMP" from="7" to="4" access="RW" resetVal="" desc="Cap B0 top plate to AGND0, allows for modbit control" hidden="false" />
        <field name="SW_V0B_CMP" from="11" to="8" access="RW" resetVal="" desc="Cap B0 top plate to VSS, allows for modbit control" hidden="false" />
        <field name="SW_T0B" from="15" to="12" access="RW" resetVal="" desc="Cap B0 top plate Trim/Attenuation bypass" hidden="false" />
        <field name="SW_S0B" from="19" to="16" access="RW" resetVal="" desc="Cap B0 top plate to SUM0" hidden="false" />
      </register>
      <register name="UAB_SW_CC0_IN0" address="0x40340260" bitWidth="32" desc="Cap C0 input switches set 0" hidden="false">
        <field name="SW_C00_CMP" from="3" to="0" access="RW" resetVal="" desc="VIN00 to Cap C0 input, allows for modbit control" hidden="false" />
        <field name="SW_C01_CMP" from="7" to="4" access="RW" resetVal="" desc="VIN01 to Cap C0 input, allows for modbit control" hidden="false" />
        <field name="SW_C02_CMP" from="11" to="8" access="RW" resetVal="" desc="VIN02 to Cap C0 input, allows for modbit control" hidden="false" />
        <field name="SW_C03_CMP" from="15" to="12" access="RW" resetVal="" desc="VIN03 to Cap C0 input, allows for modbit control" hidden="false" />
        <field name="SW_C0P" from="19" to="16" access="RW" resetVal="" desc="OUT0 to Cap C0 input" hidden="false" />
        <field name="SW_C0Q" from="23" to="20" access="RW" resetVal="" desc="OUT1 to Cap C0 input" hidden="false" />
      </register>
      <register name="UAB_SW_CC0_IN1" address="0x40340264" bitWidth="32" desc="Cap C0 input switches set 1" hidden="false">
        <field name="SW_CC" from="3" to="0" access="RW" resetVal="" desc="Cap C0 input to Cap C1 input&#xA;(Note: In the UAB design this is called the CM switch)" hidden="false" />
        <field name="SW_C0R_CMP" from="7" to="4" access="RW" resetVal="" desc="REF0 to Cap C0 input, allows for modbit control" hidden="false" />
        <field name="SW_C0G_CMP" from="11" to="8" access="RW" resetVal="" desc="AGND0 to Cap C0 input, allows for modbit control" hidden="false" />
        <field name="SW_C0V_CMP" from="15" to="12" access="RW" resetVal="" desc="VSS to Cap C0 input, allows for modbit control" hidden="false" />
      </register>
      <register name="UAB_SW_CC0_TOP" address="0x40340268" bitWidth="32" desc="Cap A0 top plate switches" hidden="false">
        <field name="SW_R0C_CMP" from="3" to="0" access="RW" resetVal="" desc="Cap C0 top plate to REF0, allows for modbit control" hidden="false" />
        <field name="SW_G0C_CMP" from="7" to="4" access="RW" resetVal="" desc="Cap C0 top plate to AGND0, allows for modbit control" hidden="false" />
        <field name="SW_V0C_CMP" from="11" to="8" access="RW" resetVal="" desc="Cap C0 top plate to VSS, allows for modbit control" hidden="false" />
        <field name="SW_T0C" from="15" to="12" access="RW" resetVal="" desc="Cap C0 top plate Trim/Attenuation bypass" hidden="false" />
        <field name="SW_S0C" from="19" to="16" access="RW" resetVal="" desc="Cap C0 top plate to SUM0" hidden="false" />
        <field name="SW_S10" from="23" to="20" access="RW" resetVal="" desc="Cap C0 top plate to SUM1" hidden="false" />
      </register>
      <register name="UAB_SW_CF0_BOT" address="0x4034026C" bitWidth="32" desc="Cap F0 bottom plate and output switches" hidden="false">
        <field name="SW_G0F" from="3" to="0" access="RW" resetVal="" desc="Cap F0 bottom plate to AGND0" hidden="false" />
        <field name="SW_P0F" from="7" to="4" access="RW" resetVal="" desc="Cap F0 bottom plate to OUT0" hidden="false" />
        <field name="SW_P0S" from="11" to="8" access="RW" resetVal="" desc="Cap F bypass, OUT0 to SUM0" hidden="false" />
        <field name="SW_P0O" from="15" to="12" access="RW" resetVal="" desc="OUT0 to VOUT0" hidden="false" />
      </register>
      <register name="UAB_SW_OTHER0" address="0x40340270" bitWidth="32" desc="Other clocked controls" hidden="false">
        <field name="CMP0_FF" from="3" to="0" access="RW" resetVal="" desc="Clock for Flip-Flop after Comparator 0" hidden="false" />
        <field name="VALID0" from="7" to="4" access="RW" resetVal="" desc="Valid0, output flag to indicated that VOUT0 is valid. The Valid output can be suppressed due to sub-sampling. Note that when sub-sampling is used this clocking waveform is used to decrement the counter (decrement is aligned with the positive edge of this clocking waveform)." hidden="false" />
        <field name="TRIG0_OUT" from="11" to="8" access="RW" resetVal="" desc="Trigger output (for other UABs or SAR)" hidden="false" />
        <field name="STROBE_SW0" from="27" to="24" access="RW" resetVal="" desc="Strobe for dsi_sw_ctrl (modbit) update, dsi_sw_ctrl updates in sync with posedge of this wave. To disable set to 0. To enable update anytime use 15." hidden="false" />
        <field name="STROBE_RST0" from="31" to="28" access="RW" resetVal="" desc="Use the positive edge of the selected clocking waveform to synchronize: &#xA; STRB_RST0_EN=0: Capacitor Value update (Capacitor Strobe)&#xA; STRB_RST0_EN=1: UAB analog-reset update&#xA;Set to 0 to disable both functions. Result undefined for value 15." hidden="false" />
      </register>
      <register name="UAB_SW_BOOST_CTRL0" address="0x40340274" bitWidth="32" desc="Bootstrap clock control" hidden="false">
        <field name="CA0_BOOST" from="3" to="0" access="RW" resetVal="" desc="Clock for boot strap master in A branch" hidden="false" />
        <field name="CB0_BOOST" from="7" to="4" access="RW" resetVal="" desc="Clock for boot strap master in B branch" hidden="false" />
        <field name="CC0_BOOST" from="11" to="8" access="RW" resetVal="" desc="Clock for boot strap master in C branch" hidden="false" />
        <field name="CF0_BOOST" from="15" to="12" access="RW" resetVal="" desc="Clock for boot strap master in F branch" hidden="false" />
        <field name="SUM0_BOOST" from="19" to="16" access="RW" resetVal="" desc="Clock for boot strap master in Summing node branch" hidden="false" />
        <field name="PUMP0_WAVE" from="23" to="20" access="RW" resetVal="" desc="Clock for pump in half0" hidden="false" />
      </register>
      <register name="UAB_SRAM0_CTRL" address="0x40340278" bitWidth="32" desc="SRAM programmed size" hidden="false">
        <field name="LAST_STEP" from="3" to="0" access="RW" resetVal="" desc="Last step of wave programmed in the SRAM" hidden="false" />
        <field name="TRIG_SEL0" from="28" to="24" access="RW" resetVal="" desc="input Trigger select&#xA;0=UAB0 half 0 trigger output&#xA;1=UAB0 half 1 trigger output&#xA;2=UAB1 half 0 trigger output&#xA;3=UAB1 half 1 trigger output&#xA;4=UAB2 half 0 trigger output&#xA;5=UAB2 half 1 trigger output&#xA;6=UAB3 half 0 trigger output&#xA;7=UAB3 half 1 trigger output&#xA;8-30 = generic trigger inputs 0-22&#xA;31=SAR trigger output&#xA;For PASS4B  only values 0-1 and 8-13 and 31 are legal." hidden="false" />
        <field name="TRIGGER_EN" from="29" to="29" access="RW" resetVal="" desc="Enable input trigger:&#xA;0: Ignore triggers, start running immediately after setting RUN bit&#xA;1: After RUN bit is set wait for a positive edge on the selected trigger input" hidden="false" />
        <field name="RUN" from="31" to="31" access="RW" resetVal="" desc="Set to start executing the waveform (may need to wait for a trigger). Clear to stop this UAB half. When RUN=0 all dynamic switches are forced open." hidden="false" />
      </register>
      <register name="UAB_STAT0" address="0x4034027C" bitWidth="32" desc="Status Current SRAM counter and comparator" hidden="false">
        <field name="CURR_STEP" from="3" to="0" access="R" resetVal="" desc="Current step executed from the SRAM" hidden="false" />
        <field name="COMP" from="4" to="4" access="R" resetVal="" desc="Current comparator status" hidden="false" />
        <field name="CURR_SUBSAMPLE" from="31" to="24" access="R" resetVal="" desc="Current value of the subsampling down counter. The Valid is suppressed when SUBSAMPLE_CUR!=0." hidden="false" />
      </register>
      <register name="UAB_SRAM00" address="0x40340280" bitWidth="32" desc="Waveform SRAM for half 0 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM01" address="0x40340284" bitWidth="32" desc="Waveform SRAM for half 0 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM02" address="0x40340288" bitWidth="32" desc="Waveform SRAM for half 0 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM03" address="0x4034028C" bitWidth="32" desc="Waveform SRAM for half 0 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM04" address="0x40340290" bitWidth="32" desc="Waveform SRAM for half 0 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM05" address="0x40340294" bitWidth="32" desc="Waveform SRAM for half 0 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM06" address="0x40340298" bitWidth="32" desc="Waveform SRAM for half 0 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM07" address="0x4034029C" bitWidth="32" desc="Waveform SRAM for half 0 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM08" address="0x403402A0" bitWidth="32" desc="Waveform SRAM for half 0 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM09" address="0x403402A4" bitWidth="32" desc="Waveform SRAM for half 0 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM010" address="0x403402A8" bitWidth="32" desc="Waveform SRAM for half 0 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM011" address="0x403402AC" bitWidth="32" desc="Waveform SRAM for half 0 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM012" address="0x403402B0" bitWidth="32" desc="Waveform SRAM for half 0 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM013" address="0x403402B4" bitWidth="32" desc="Waveform SRAM for half 0 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM014" address="0x403402B8" bitWidth="32" desc="Waveform SRAM for half 0 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM015" address="0x403402BC" bitWidth="32" desc="Waveform SRAM for half 0 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_OA1_CTRL" address="0x40340300" bitWidth="32" desc="Opamp, comparator, buffer  controls" hidden="false">
        <field name="OA1_PWR" from="2" to="0" access="RW" resetVal="" desc="Opamp1 power level" hidden="false" />
        <field name="CMP1_PWR" from="10" to="8" access="RW" resetVal="" desc="Comparator1 power level" hidden="false" />
        <field name="CMP1_EDGE" from="13" to="12" access="RW" resetVal="" desc="Comparator1 edge detect for interrupt and trigger" hidden="false">
          <value name="DISABLE" value="0" desc="Disabled, no interrupts will be detected" />
          <value name="RISING" value="1" desc="Rising edge" />
          <value name="FALLING" value="10" desc="Falling edge" />
          <value name="BOTH" value="11" desc="Both rising and falling edges" />
        </field>
        <field name="CMP1_DSI_LEVEL" from="14" to="14" access="RW" resetVal="" desc="Comparator trigger out level : 0=pulse, 1=level" hidden="false" />
        <field name="CTRL1_SPARE" from="15" to="15" access="RW" resetVal="" desc="Spare bit" hidden="false" />
        <field name="REF1_PWR" from="18" to="16" access="RW" resetVal="" desc="Reference1 buffer power" hidden="false" />
        <field name="REF1_PTS" from="19" to="19" access="RW" resetVal="" desc="1- Pull the Reference1 buffer output to VDDA" hidden="false" />
        <field name="AGND1_PWR" from="22" to="20" access="RW" resetVal="" desc="Agnd1 buffer power" hidden="false" />
        <field name="AGND1_PTS" from="23" to="23" access="RW" resetVal="" desc="1- Pull the Agnd1 buffer output to VDDA" hidden="false" />
        <field name="SW_RR" from="24" to="24" access="RW" resetVal="" desc="Connect outputs of Reference0 and Reference1 buffer, one buffer must be off.&#xA;This is to drive both UAB halves with the same buffer, so both halves get the same offset noise." hidden="false" />
        <field name="SPARE1_EN" from="25" to="25" access="RW" resetVal="" desc="1 - Enable the spare reference" hidden="false" />
        <field name="H1_PWR" from="31" to="30" access="RW" resetVal="" desc="UAB Half, power profile" hidden="false">
          <value name="NORMAL" value="0" desc="Normal, for normal analog clock speeds" />
          <value name="ULTRA_LOW" value="1" desc="Ultra low power, only allowed for lower analog clock speeds" />
          <value name="ULTRA_HIGH" value="10" desc="Ultra high performance, for higher analog clock speeds (also ultra high power)" />
          <value name="Reserved" value="11" desc="Reserved, do not use" />
        </field>
      </register>
      <register name="UAB_CAP_CTRL1" address="0x40340304" bitWidth="32" desc="Capacitance controls" hidden="false">
        <field name="CB1_GND" from="5" to="5" access="RW" resetVal="" desc="Ground unused caps of CB1 array&#xA;0: leave unused caps floating&#xA;1: ground unused caps (typical when attentuation Cap is used, e.g. for VDAC use-case)" hidden="false" />
        <field name="CC1_GND" from="6" to="6" access="RW" resetVal="" desc="Ground unused caps of CC1 array&#xA;0: leave unused caps floating&#xA;1: ground unused caps (typical when attentuation Cap is used)" hidden="false" />
        <field name="FRC1_SIGN_BIT" from="28" to="28" access="RW" resetVal="" desc="Forces the sign bit to be 1 in DAC mode.  This is used to achieve &#xA;0 - AGND1 range for unsigned numbers using DAC mode 2" hidden="false" />
        <field name="DAC1_MODE_EN" from="29" to="29" access="RW" resetVal="" desc="1: SIGN1_VAL is dedicated sign bit (FW modbit source tied to 0)                                                           0: SIGN1_VAL can be programmed to be a modbit source" hidden="false" />
        <field name="DAC1_MODE" from="31" to="30" access="RW" resetVal="" desc="DAC mode, this determines the AB Cap Value decoding" hidden="false">
          <value name="UNSIGNED12" value="0" desc="Off or Unsigned 12-bit VDAC, i.e. no AB Cap value decoding.&#xA;SIGN1_VAL can be used as Firmware controlled modbit (e.g. to invert the Voltage for a Sign + Magnitude VDAC)" />
          <value name="VIRT_SIGNED12" value="1" desc="Virtual signed 12-bits' VDAC. AB Cap value decoding: &#xA;add 0x800 to the 12-bit AB Cap Value (=invert MSB), to convert the lowest signed number 0x800 to the lowest unsigned number 0x000. This is the same as the SAR handles 12-bit 'virtual' signed numbers." />
          <value name="SIGNED13" value="10" desc="Signed 13-bit twos complement. AB Cap value decoding: &#xA;for negative values (SIGN1_VAL=1) the AB Cap values are inverted, the 64th B cap unit is enabled and the Voltage should be inverted.&#xA;- Voltage inversion only works if the right clocking waveforms, switch settings and reference voltages are used.&#xA;- Enabling the 64th B cap unit adds 1 so that only a AB Cap value inversion is needed to create a true twos complement.  ." />
          <value name="RESERVED" value="11" desc="" />
        </field>
      </register>
      <register name="UAB_CAP_ABCF1_VAL" address="0x40340308" bitWidth="32" desc="Capacitance values for CA1, CB1, CC1 and CF1" hidden="false">
        <field name="CB1_VAL" from="5" to="0" access="RW" resetVal="" desc="Cap B1 Value, in DAC_MODE 1 and 2 this value is decoded" hidden="false" />
        <field name="CA1_VAL" from="11" to="6" access="RW" resetVal="" desc="Cap A1 Value, in DAC_MODE 1 and 2 this value is decoded" hidden="false" />
        <field name="SIGN1_VAL" from="12" to="12" access="RW" resetVal="" desc="Sign bit Value, when used in DAC_MODE, otherwise Firmware modbit.&#xA;In DAC_MODE the modbit should be used to invert the voltage on the AB Caps for the negative DAC values." hidden="false" />
        <field name="CB1_64" from="13" to="13" access="RW" resetVal="" desc="Enable 64th Cap of CB1 array. In DAC mode the FW setting is overridden by the hardware based on DAC_MODE setting.                                                           1 - Enables the 64th cap. This will also set CB1_val[5:0] to be 6'h3F" hidden="false" />
        <field name="CC1_VAL" from="21" to="16" access="RW" resetVal="" desc="Cap C1 Value" hidden="false" />
        <field name="CF1_VAL" from="28" to="24" access="RW" resetVal="" desc="Cap F1 Value" hidden="false" />
      </register>
      <register name="UAB_CAP_AB1_VAL_NXT" address="0x4034030C" bitWidth="32" desc="Next capacitance values for CA1 and CB1" hidden="false">
        <field name="CB1_VAL" from="5" to="0" access="RW" resetVal="" desc="Cap B1 Value" hidden="false" />
        <field name="CA1_VAL" from="11" to="6" access="RW" resetVal="" desc="Cap A1 Value" hidden="false" />
        <field name="SIGN1_VAL" from="12" to="12" access="RW" resetVal="" desc="Sign bit Value" hidden="false" />
      </register>
      <register name="UAB_CAP_CF1_VAL_NXT" address="0x40340310" bitWidth="32" desc="Next capacitance values for CC1 and CF1" hidden="false">
        <field name="CC1_VAL" from="21" to="16" access="RW" resetVal="" desc="Cap C1 Value" hidden="false" />
        <field name="CF1_VAL" from="28" to="24" access="RW" resetVal="" desc="Cap F1 Value" hidden="false" />
        <field name="CC1_VAL_UPDATE" from="30" to="30" access="RW" resetVal="" desc="1 - Update the CC1 cap value with CAP_CC1_VAL_NXT.CC1_VAL" hidden="false" />
        <field name="CF1_VAL_UPDATE" from="31" to="31" access="RW" resetVal="" desc="1 - Update the CF1 cap value with CAP_CF1_VAL_NXT.CF1_VAL" hidden="false" />
      </register>
      <register name="UAB_STARTUP_DELAY1" address="0x40340320" bitWidth="32" desc="Startup delay" hidden="false">
        <field name="STARTUP_DELAY" from="15" to="0" access="RW" resetVal="" desc="Startup delay to synchronize the UAB-SAR interface. The usage and meaning of this field depends on the value of the ALIGN_MODE bit (below).   A value of 0 disables this function." hidden="false" />
        <field name="ALIGN_MODE" from="16" to="16" access="RW" resetVal="" desc="0 - STARTUP_DELAY is number of clk_hf clocks to delay the UAB clock after a SAR Trigger for UAB-SAR alignment in scheduled mode&#xA;1 - STARTUP_DELAY is number of clk_hf clocks to delay UAB trigger to SAR for UAB-SAR alignment in unscheduled mode" hidden="false" />
      </register>
      <register name="UAB_SUBSAMPLE_CTRL1" address="0x40340324" bitWidth="32" desc="Subsample control" hidden="false">
        <field name="SUBSAMPLE" from="7" to="0" access="RW" resetVal="" desc="Subsampling: suppress Valid output during the first SUBSAMPLE analog clock periods. Only allow Valid output in the last of the SUBSAMPLE+1 analog clock periods.&#xA;A value of 0 will not suppress Valid output." hidden="false" />
        <field name="SUBSAMPLE_INIT" from="15" to="8" access="RW" resetVal="" desc="Initial value of the subsampling down counter. Before this UAB half is running the firmware can write to this field the initial value of the subsample down counter. It is recommend that the following is true for the initial value  SUBSAMPLE_INIT&lt;=SUBSAMPLE, however this is not a requirement. Writing a bigger value can be used to postpone the very first Valid output." hidden="false" />
      </register>
      <register name="UAB_SW_STATIC1" address="0x40340330" bitWidth="32" desc="Static switches for half 1 of the UAB" hidden="false">
        <field name="SW_G10" from="0" to="0" access="RW" resetVal="" desc="VIN10 to OA1.vplus (AG1)" hidden="false" />
        <field name="SW_G11" from="1" to="1" access="RW" resetVal="" desc="VIN11 to OA1.vplus (AG1)" hidden="false" />
        <field name="SW_G12" from="2" to="2" access="RW" resetVal="" desc="VIN12 to OA1.vplus (AG1)" hidden="false" />
        <field name="SW_G13" from="3" to="3" access="RW" resetVal="" desc="VIN13 to OA1.vplus (AG1)" hidden="false" />
        <field name="SW_R1G" from="4" to="4" access="RW" resetVal="" desc="REF1 to OA1.vplus (AG1)" hidden="false" />
        <field name="SW_G1G" from="5" to="5" access="RW" resetVal="" desc="AGND1 to OA1.vplus (AG1)" hidden="false" />
        <field name="SW_R1T" from="8" to="8" access="RW" resetVal="" desc="REF1 to cmp1.vminus (Threshold)" hidden="false" />
        <field name="SW_G1T" from="9" to="9" access="RW" resetVal="" desc="AGND1 to cmp1.vminus (Threshold)" hidden="false" />
        <field name="SW_P1T" from="10" to="10" access="RW" resetVal="" desc="OUT0 to cmp1.vminus (Threshold)" hidden="false" />
        <field name="EARLY_Q1S" from="12" to="12" access="RW" resetVal="" desc="OUT1 to Sum1 switch timing: 0=Regular, 1=Early" hidden="false" />
        <field name="EARLY_Q1O" from="13" to="13" access="RW" resetVal="" desc="OUT1 to VOUT1 switch timing: 0=Regular, 1=Early" hidden="false" />
        <field name="RMB1_BITS" from="19" to="16" access="RW" resetVal="" desc="Risk mitigation bits (To be defined if they are used)" hidden="false" />
        <field name="STRB_RST1_SEL" from="28" to="24" access="RW" resetVal="" desc="Select source either for VDAC strobe or analog-reset to discharge all Caps (Delsig Modulator use-case)&#xA;0 = Decimator0 half 0 analog-reset output&#xA;1 = Decimator0 half 1 analog-reset output&#xA;2 = Decimator1 half 0 analog-reset output&#xA;3 = Decimator1 half 1 analog-reset output&#xA;4 = Decimator2 half 0 analog-reset output&#xA;5 = Decimator2 half 1 analog-reset output&#xA;6 = Decimator3 half 0 analog-reset output&#xA;7 = Decimator3 half 1 analog-reset output&#xA;8-31 = generic trigger input 0-23&#xA;For PASS4B  only values 0-1 and 8-13 are legal." hidden="false" />
        <field name="STRB_RST1_EN" from="29" to="29" access="RW" resetVal="" desc="Enable VDAC strobe or UAB analog-reset:&#xA;0: Use selected source as VDAC strobe for next CA1 and CB1 values&#xA;1: Use selected source as Analog-reset (discharge all Caps)" hidden="false" />
      </register>
      <register name="UAB_SW_MODBIT_SRC1" address="0x40340334" bitWidth="32" desc="Select source of Modbit for A,B and C branches of half 1" hidden="false">
        <field name="MODBIT0_SRC1_SEL" from="4" to="0" access="RW" resetVal="" desc="Select source of modbit for A &amp; B branches&#xA;0=UAB0 half 0 comparator output&#xA;1=UAB0 half 1 comparator output&#xA;2=UAB1 half 0 comparator output&#xA;3=UAB1 half 1 comparator output&#xA;4=UAB2 half 0 comparator output&#xA;5=UAB2 half 1 comparator output&#xA;6=UAB3 half 0 comparator output&#xA;7=UAB3 half 1 comparator output&#xA;8-30 = generic trigger inputs 0-22&#xA;31=SIGN1_VAL, also used as Firmware modbit.&#xA;For PASS4B  only values 0-1 and 8-13 and 31 are legal." hidden="false" />
        <field name="MODBIT1_SRC1_SEL" from="12" to="8" access="RW" resetVal="" desc="Select source of modbit for C branch&#xA;0=UAB0 half 0 comparator output&#xA;1=UAB0 half 1 comparator output&#xA;2=UAB1 half 0 comparator output&#xA;3=UAB1 half 1 comparator output&#xA;4=UAB2 half 0 comparator output&#xA;5=UAB2 half 1 comparator output&#xA;6=UAB3 half 0 comparator output&#xA;7=UAB3 half 1 comparator output&#xA;8-30 = generic trigger inputs 0-22&#xA;31=SIGN1_VAL, also used as Firmware modbit.&#xA;For PASS4B  only values 0-1 and 8-11 and 31 are legal." hidden="false" />
      </register>
      <register name="UAB_SW_CA1_IN0" address="0x40340340" bitWidth="32" desc="Cap A1 input switches set 0" hidden="false">
        <field name="SW_A10_CMP" from="3" to="0" access="RW" resetVal="" desc="VIN10 to Cap A1 input, allows for modbit control" hidden="false" />
        <field name="SW_A11_CMP" from="7" to="4" access="RW" resetVal="" desc="VIN11 to Cap A1 input, allows for modbit control" hidden="false" />
        <field name="SW_A12_CMP" from="11" to="8" access="RW" resetVal="" desc="VIN12 to Cap A1 input, allows for modbit control" hidden="false" />
        <field name="SW_A13_CMP" from="15" to="12" access="RW" resetVal="" desc="VIN13 to Cap A1 input, allows for modbit control" hidden="false" />
        <field name="SW_A1P" from="19" to="16" access="RW" resetVal="" desc="OUT1 to Cap A1 input" hidden="false" />
        <field name="SW_A1Q" from="23" to="20" access="RW" resetVal="" desc="OUT0 to Cap A1 input" hidden="false" />
      </register>
      <register name="UAB_SW_CA1_IN1" address="0x40340344" bitWidth="32" desc="Cap A1 input switches set 1" hidden="false">
        <field name="SW_A1R_CMP" from="7" to="4" access="RW" resetVal="" desc="REF1 to Cap A1 input, allows for modbit control" hidden="false" />
        <field name="SW_A1G_CMP" from="11" to="8" access="RW" resetVal="" desc="AGND1 to Cap A1 input, allows for modbit control" hidden="false" />
        <field name="SW_A1V_CMP" from="15" to="12" access="RW" resetVal="" desc="VSS to Cap A1 input, allows for modbit control" hidden="false" />
      </register>
      <register name="UAB_SW_CA1_TOP" address="0x40340348" bitWidth="32" desc="Cap A1 top plate switches" hidden="false">
        <field name="SW_R1A_CMP" from="3" to="0" access="RW" resetVal="" desc="Cap A1 top plate to REF1, allows for modbit control" hidden="false" />
        <field name="SW_G1A_CMP" from="7" to="4" access="RW" resetVal="" desc="Cap A1 top plate to AGND1, allows for modbit control" hidden="false" />
        <field name="SW_V1A_CMP" from="11" to="8" access="RW" resetVal="" desc="Cap A1 top plate to VSS, allows for modbit control" hidden="false" />
        <field name="SW_S1A" from="19" to="16" access="RW" resetVal="" desc="Cap A1 top plate to SUM1" hidden="false" />
      </register>
      <register name="UAB_SW_CB1_IN0" address="0x40340350" bitWidth="32" desc="Cap B1 input switches set 0" hidden="false">
        <field name="SW_B10_CMP" from="3" to="0" access="RW" resetVal="" desc="VIN10 to Cap B1 input, allows for modbit control" hidden="false" />
        <field name="SW_B11_CMP" from="7" to="4" access="RW" resetVal="" desc="VIN11 to Cap B1 input, allows for modbit control" hidden="false" />
        <field name="SW_B12_CMP" from="11" to="8" access="RW" resetVal="" desc="VIN12 to Cap B1 input, allows for modbit control" hidden="false" />
        <field name="SW_B13_CMP" from="15" to="12" access="RW" resetVal="" desc="VIN13 to Cap B1 input, allows for modbit control" hidden="false" />
        <field name="SW_B1P" from="19" to="16" access="RW" resetVal="" desc="OUT1 to Cap B1 input" hidden="false" />
        <field name="SW_B1Q" from="23" to="20" access="RW" resetVal="" desc="OUT0 to Cap B1 input" hidden="false" />
      </register>
      <register name="UAB_SW_CB1_IN1" address="0x40340354" bitWidth="32" desc="Cap B1 input switches set 1" hidden="false">
        <field name="SW_B1R_CMP" from="7" to="4" access="RW" resetVal="" desc="REF1 to Cap B1 input, allows for modbit control" hidden="false" />
        <field name="SW_B1G_CMP" from="11" to="8" access="RW" resetVal="" desc="AGND1 to Cap B1 input, allows for modbit control" hidden="false" />
        <field name="SW_B1V_CMP" from="15" to="12" access="RW" resetVal="" desc="VSS to Cap B1 input, allows for modbit control" hidden="false" />
      </register>
      <register name="UAB_SW_CB1_TOP" address="0x40340358" bitWidth="32" desc="Cap A1 top plate switches" hidden="false">
        <field name="SW_R1B_CMP" from="3" to="0" access="RW" resetVal="" desc="Cap B1 top plate to REF1, allows for modbit control" hidden="false" />
        <field name="SW_G1B_CMP" from="7" to="4" access="RW" resetVal="" desc="Cap B1 top plate to AGND1, allows for modbit control" hidden="false" />
        <field name="SW_V1B_CMP" from="11" to="8" access="RW" resetVal="" desc="Cap B1 top plate to VSS, allows for modbit control" hidden="false" />
        <field name="SW_T1B" from="15" to="12" access="RW" resetVal="" desc="Cap B1 top plate Trim/Attenuation bypass" hidden="false" />
        <field name="SW_S1B" from="19" to="16" access="RW" resetVal="" desc="Cap B1 top plate to SUM1" hidden="false" />
      </register>
      <register name="UAB_SW_CC1_IN0" address="0x40340360" bitWidth="32" desc="Cap C1 input switches set 0" hidden="false">
        <field name="SW_C10_CMP" from="3" to="0" access="RW" resetVal="" desc="VIN10 to Cap C1 input, allows for modbit control" hidden="false" />
        <field name="SW_C11_CMP" from="7" to="4" access="RW" resetVal="" desc="VIN11 to Cap C1 input, allows for modbit control" hidden="false" />
        <field name="SW_C12_CMP" from="11" to="8" access="RW" resetVal="" desc="VIN12 to Cap C1 input, allows for modbit control" hidden="false" />
        <field name="SW_C13_CMP" from="15" to="12" access="RW" resetVal="" desc="VIN13 to Cap C1 input, allows for modbit control" hidden="false" />
        <field name="SW_C1P" from="19" to="16" access="RW" resetVal="" desc="OUT1 to Cap C1 input" hidden="false" />
        <field name="SW_C1Q" from="23" to="20" access="RW" resetVal="" desc="OUT0 to Cap C1 input" hidden="false" />
      </register>
      <register name="UAB_SW_CC1_IN1" address="0x40340364" bitWidth="32" desc="Cap C1 input switches set 1" hidden="false">
        <field name="SW_C1R_CMP" from="7" to="4" access="RW" resetVal="" desc="REF1 to Cap C1 input, allows for modbit control" hidden="false" />
        <field name="SW_C1G_CMP" from="11" to="8" access="RW" resetVal="" desc="AGND1 to Cap C1 input, allows for modbit control" hidden="false" />
        <field name="SW_C1V_CMP" from="15" to="12" access="RW" resetVal="" desc="VSS to Cap C1 input, allows for modbit control" hidden="false" />
      </register>
      <register name="UAB_SW_CC1_TOP" address="0x40340368" bitWidth="32" desc="Cap A1 top plate switches" hidden="false">
        <field name="SW_R1C_CMP" from="3" to="0" access="RW" resetVal="" desc="Cap C1 top plate to REF1, allows for modbit control" hidden="false" />
        <field name="SW_G1C_CMP" from="7" to="4" access="RW" resetVal="" desc="Cap C1 top plate to AGND1, allows for modbit control" hidden="false" />
        <field name="SW_V1C_CMP" from="11" to="8" access="RW" resetVal="" desc="Cap C1 top plate to VSS, allows for modbit control" hidden="false" />
        <field name="SW_T1C" from="15" to="12" access="RW" resetVal="" desc="Cap C1 top plate Trim/Attenuation bypass" hidden="false" />
        <field name="SW_S1C" from="19" to="16" access="RW" resetVal="" desc="Cap C1 top plate to SUM1" hidden="false" />
        <field name="SW_S01" from="23" to="20" access="RW" resetVal="" desc="Cap C1 top plate to SUM0" hidden="false" />
      </register>
      <register name="UAB_SW_CF1_BOT" address="0x4034036C" bitWidth="32" desc="Cap F1 bottom plate and output switches" hidden="false">
        <field name="SW_G1F" from="3" to="0" access="RW" resetVal="" desc="Cap F1 bottom plate to AGND1" hidden="false" />
        <field name="SW_Q1F" from="7" to="4" access="RW" resetVal="" desc="Cap F1 bottom plate to OUT1" hidden="false" />
        <field name="SW_Q1S" from="11" to="8" access="RW" resetVal="" desc="Cap F bypass, OUT1 to SUM1" hidden="false" />
        <field name="SW_Q1O" from="15" to="12" access="RW" resetVal="" desc="OUT1 to VOUT1" hidden="false" />
      </register>
      <register name="UAB_SW_OTHER1" address="0x40340370" bitWidth="32" desc="Other clocked controls" hidden="false">
        <field name="CMP1_FF" from="3" to="0" access="RW" resetVal="" desc="Clock for Flip-Flop after Comparator 1" hidden="false" />
        <field name="VALID1" from="7" to="4" access="RW" resetVal="" desc="Valid1, output flag to indicated that VOUT1 is valid. The Valid output can be suppressed due to sub-sampling. Note that when sub-sampling is used this clocking waveform is used to decrement the counter (decrement is aligned with the positive edge of this clocking waveform)." hidden="false" />
        <field name="TRIG1_OUT" from="11" to="8" access="RW" resetVal="" desc="Trigger output (for other UABs or SAR)" hidden="false" />
        <field name="STROBE_SW1" from="27" to="24" access="RW" resetVal="" desc="Strobe for dsi_sw_ctrl (modbit) update, dsi_sw_ctrl updates in sync with posedge of this wave. To disable set to 0. To enable update anytime use 15." hidden="false" />
        <field name="STROBE_RST1" from="31" to="28" access="RW" resetVal="" desc="Use the positive edge of the selected clocking waveform to synchronize: &#xA; STRB_RST0_EN=0: Capacitor Value update (Capacitor Strobe)&#xA; STRB_RST0_EN=1: UAB analog-reset update&#xA;Set to 0 to disable both functions. Result undefined for value 15." hidden="false" />
      </register>
      <register name="UAB_SW_BOOST_CTRL1" address="0x40340374" bitWidth="32" desc="Bootstrap clock control" hidden="false">
        <field name="CA1_BOOST" from="3" to="0" access="RW" resetVal="" desc="Clock for boot strap master in A branch" hidden="false" />
        <field name="CB1_BOOST" from="7" to="4" access="RW" resetVal="" desc="Clock for boot strap master in B branch" hidden="false" />
        <field name="CC1_BOOST" from="11" to="8" access="RW" resetVal="" desc="Clock for boot strap master in C branch" hidden="false" />
        <field name="CF1_BOOST" from="15" to="12" access="RW" resetVal="" desc="Clock for boot strap master in F branch" hidden="false" />
        <field name="SUM1_BOOST" from="19" to="16" access="RW" resetVal="" desc="Clock for boot strap master in Summing node branch" hidden="false" />
        <field name="PUMP1_WAVE" from="23" to="20" access="RW" resetVal="" desc="Clock for pump in half1" hidden="false" />
      </register>
      <register name="UAB_SRAM1_CTRL" address="0x40340378" bitWidth="32" desc="SRAM programmed size" hidden="false">
        <field name="LAST_STEP" from="3" to="0" access="RW" resetVal="" desc="Last step of wave programmed in the SRAM" hidden="false" />
        <field name="TRIG_SEL1" from="28" to="24" access="RW" resetVal="" desc="Trigger select&#xA;0=UAB0 half 0 trigger output&#xA;1=UAB0 half 1 trigger output&#xA;2=UAB1 half 0 trigger output&#xA;3=UAB1 half 1 trigger output&#xA;4=UAB2 half 0 trigger output&#xA;5=UAB2 half 1 trigger output&#xA;6=UAB3 half 0 trigger output&#xA;7=UAB3 half 1 trigger output&#xA;8-30 = generic trigger inputs 0-22&#xA;31=SAR trigger output&#xA;For PASS4B  only values 0-1 and 8-13 and 31 are legal." hidden="false" />
        <field name="TRIGGER_EN" from="29" to="29" access="RW" resetVal="" desc="Enable input trigger:&#xA;0: Ignore triggers, start running immediately after setting RUN bit&#xA;1: After RUN bit is set wait for a positive edge on the selected trigger input" hidden="false" />
        <field name="RUN" from="31" to="31" access="RW" resetVal="" desc="Set to start executing the waveform (may need to wait for a trigger). Clear to stop this UAB half. When RUN=0 all dynamic switches are forced open." hidden="false" />
      </register>
      <register name="UAB_STAT1" address="0x4034037C" bitWidth="32" desc="Status Current SRAM counter and comparator" hidden="false">
        <field name="CURR_STEP" from="3" to="0" access="R" resetVal="" desc="Current step executed from the SRAM" hidden="false" />
        <field name="COMP" from="4" to="4" access="R" resetVal="" desc="Current comparator status" hidden="false" />
        <field name="CURR_SUBSAMPLE" from="31" to="24" access="R" resetVal="" desc="Current value of the subsampling down counter. The Valid is suppressed when SUBSAMPLE_CUR!=0." hidden="false" />
      </register>
      <register name="UAB_SRAM10" address="0x40340380" bitWidth="32" desc="Waveform SRAM for half 1 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM11" address="0x40340384" bitWidth="32" desc="Waveform SRAM for half 1 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM12" address="0x40340388" bitWidth="32" desc="Waveform SRAM for half 1 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM13" address="0x4034038C" bitWidth="32" desc="Waveform SRAM for half 1 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM14" address="0x40340390" bitWidth="32" desc="Waveform SRAM for half 1 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM15" address="0x40340394" bitWidth="32" desc="Waveform SRAM for half 1 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM16" address="0x40340398" bitWidth="32" desc="Waveform SRAM for half 1 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM17" address="0x4034039C" bitWidth="32" desc="Waveform SRAM for half 1 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM18" address="0x403403A0" bitWidth="32" desc="Waveform SRAM for half 1 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM19" address="0x403403A4" bitWidth="32" desc="Waveform SRAM for half 1 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM110" address="0x403403A8" bitWidth="32" desc="Waveform SRAM for half 1 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM111" address="0x403403AC" bitWidth="32" desc="Waveform SRAM for half 1 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM112" address="0x403403B0" bitWidth="32" desc="Waveform SRAM for half 1 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM113" address="0x403403B4" bitWidth="32" desc="Waveform SRAM for half 1 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM114" address="0x403403B8" bitWidth="32" desc="Waveform SRAM for half 1 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM115" address="0x403403BC" bitWidth="32" desc="Waveform SRAM for half 1 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_DECM_CTRL" address="0x40340400" bitWidth="32" desc="Global decimator control" hidden="false">
        <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="- 0: Decimator disabled (independent of UAB)&#xA;- 1: Decimator enabled (independent of UAB)" hidden="false" />
      </register>
      <register name="UAB_DC0_CTRL" address="0x40340404" bitWidth="32" desc="decimator0 control" hidden="false">
        <field name="DC0_START" from="0" to="0" access="RW" resetVal="" desc="Start decimator, in incremental mode, this bit is cleared by HW when done. If DSI trigger enable is set then only start after a DSI trigger." hidden="false" />
        <field name="DC0_MODE" from="1" to="1" access="RW" resetVal="" desc="Operation mode&#xA;0: Incremental (one-shot) operation&#xA;1: Continuous operation" hidden="false" />
        <field name="DC0_SEL" from="5" to="4" access="RW" resetVal="" desc="Source select" hidden="false">
          <value name="UAB_H0" value="0" desc="Comparator output from Half0 of this UAB" />
          <value name="UAB_H1" value="1" desc="Comparator output from Half1 of this UAB" />
          <value name="DSI0" value="10" desc="" />
          <value name="DSI1" value="11" desc="" />
        </field>
        <field name="DC0_TYPE" from="7" to="6" access="RW" resetVal="" desc="decimator type (filter order)" hidden="false">
          <value name="SINC1" value="0" desc="first order" />
          <value name="SINC2" value="1" desc="second order" />
          <value name="SINC3" value="10" desc="third order, this uses half of decimator1, therefore cannot be combined with dc1_mode SINC2" />
          <value name="reserved" value="11" desc="reserved value, do not use" />
        </field>
        <field name="DC0_SHIFT" from="12" to="8" access="RW" resetVal="" desc="shift the result right by specified amount, legal range 0..16" hidden="false" />
        <field name="DC0_RATIO" from="24" to="16" access="RW" resetVal="" desc="decimation ratio = DC0_RATIO+1, range 1..512" hidden="false" />
      </register>
      <register name="UAB_DC0_TRIG" address="0x40340408" bitWidth="32" desc="decimator0 trigger control" hidden="false">
        <field name="DC0_TRIG_SEL" from="28" to="24" access="RW" resetVal="" desc="Trigger select&#xA;0=UAB0 half 0 trigger output&#xA;1=UAB0 half 1 trigger output&#xA;2=UAB1 half 0 trigger output&#xA;3=UAB1 half 1 trigger output&#xA;4=UAB2 half 0 trigger output&#xA;5=UAB2 half 1 trigger output&#xA;6=UAB3 half 0 trigger output&#xA;7=UAB3 half 1 trigger output&#xA;8-30 = generic trigger inputs 0-22&#xA;31=SAR trigger output&#xA;For PASS4B  only values 0-1 and 8-11 and 31 are legal." hidden="false" />
        <field name="DC0_DSI_TRIG_EN" from="29" to="29" access="RW" resetVal="" desc="Decimator DSI trigger input Enable&#xA;0: Ignore decimator DSI trigger input&#xA;1: Wait for positive edge on selected DSI trigger input" hidden="false" />
      </register>
      <register name="UAB_DC0_OVR" address="0x4034040C" bitWidth="32" desc="decimator 0 overflow control" hidden="false">
        <field name="DC0_OVR_CORR_LOC" from="4" to="0" access="RW" resetVal="" desc="Bit location for overflow correction. This should be set to FILTER_ORDER*log2(DC0_RATIO)" hidden="false" />
      </register>
      <register name="UAB_DC0_A0" address="0x40340410" bitWidth="32" desc="decimator0 accumulator 0" hidden="false">
        <field name="A0" from="31" to="0" access="R" resetVal="" desc="24-bit sign extended accumulator0 status" hidden="false" />
      </register>
      <register name="UAB_DC0_A1" address="0x40340414" bitWidth="32" desc="decimator0 accumulator 1" hidden="false">
        <field name="A1" from="31" to="0" access="R" resetVal="" desc="24-bit sign extended accumulator1 status" hidden="false" />
      </register>
      <register name="UAB_DC0_DEC_CNT" address="0x40340418" bitWidth="32" desc="decimator0 decimation counter" hidden="false">
        <field name="INT_CNT" from="8" to="0" access="R" resetVal="" desc="integration/decimation down counter" hidden="false" />
        <field name="DIFF_CNT" from="17" to="16" access="R" resetVal="" desc="differentiation down counter" hidden="false" />
      </register>
      <register name="UAB_DC0_TMP" address="0x4034041C" bitWidth="32" desc="decimator0 temporary value for differentiator" hidden="false">
        <field name="TMP" from="31" to="0" access="R" resetVal="" desc="24-bit sign extended differentiator temporary value status" hidden="false" />
      </register>
      <register name="UAB_DC0_D0" address="0x40340420" bitWidth="32" desc="decimator0 differentiator 0" hidden="false">
        <field name="D0" from="31" to="0" access="R" resetVal="" desc="24-bit sign extended differentiator 0 status" hidden="false" />
      </register>
      <register name="UAB_DC0_D1" address="0x40340424" bitWidth="32" desc="decimator0 differentiator 1" hidden="false">
        <field name="D1" from="31" to="0" access="R" resetVal="" desc="24-bit sign extended differentiator 1 status" hidden="false" />
      </register>
      <register name="UAB_DC0_RES" address="0x40340428" bitWidth="32" desc="decimator0 result" hidden="false">
        <field name="RES" from="31" to="0" access="R" resetVal="" desc="24-bit sign extended result" hidden="false" />
      </register>
      <register name="UAB_DC1_CTRL" address="0x40340434" bitWidth="32" desc="decimator1 control" hidden="false">
        <field name="DC1_START" from="0" to="0" access="RW" resetVal="" desc="Start decimator, in incremental mode, this bit is cleared by HW when done. If DSI trigger enable is set then only start after a DSI trigger." hidden="false" />
        <field name="DC1_MODE" from="1" to="1" access="RW" resetVal="" desc="Operation mode&#xA;0: Incremental (one-shot) operation&#xA;1: Continuous operation" hidden="false" />
        <field name="DC1_SEL" from="5" to="4" access="RW" resetVal="" desc="Source select" hidden="false">
          <value name="UAB_H0" value="0" desc="Comparator output from Half0 of this UAB" />
          <value name="UAB_H1" value="1" desc="Comparator output from Half1 of this UAB" />
          <value name="DSI0" value="10" desc="" />
          <value name="DSI1" value="11" desc="" />
        </field>
        <field name="DC1_TYPE" from="6" to="6" access="RW" resetVal="" desc="decimator type (filter order)" hidden="false">
          <value name="SINC1" value="0" desc="first order" />
          <value name="SINC2" value="1" desc="second order" />
        </field>
        <field name="DC01_CHAIN" from="7" to="7" access="RW" resetVal="" desc="Chain decimator0 and decimator1" hidden="false" />
        <field name="DC1_SHIFT" from="12" to="8" access="RW" resetVal="" desc="shift the result right by specified amount, legal range 0..16" hidden="false" />
        <field name="DC1_RATIO" from="24" to="16" access="RW" resetVal="" desc="decimation ratio = DC1_RATIO+1, range 1..512" hidden="false" />
      </register>
      <register name="UAB_DC1_TRIG" address="0x40340438" bitWidth="32" desc="decimator1 trigger control" hidden="false">
        <field name="DC1_TRIG_SEL" from="28" to="24" access="RW" resetVal="" desc="Trigger select&#xA;0=UAB0 half 0 trigger output&#xA;1=UAB0 half 1 trigger output&#xA;2=UAB1 half 0 trigger output&#xA;3=UAB1 half 1 trigger output&#xA;4=UAB2 half 0 trigger output&#xA;5=UAB2 half 1 trigger output&#xA;6=UAB3 half 0 trigger output&#xA;7=UAB3 half 1 trigger output&#xA;8-30 = generic trigger inputs 0-22&#xA;31=SAR trigger output&#xA;For PASS4B  only values 0-1 and 8-11 and 31 are legal." hidden="false" />
        <field name="DC1_DSI_TRIG_EN" from="29" to="29" access="RW" resetVal="" desc="Decimator DSI trigger input Enable&#xA;0: Ignore decimator DSI trigger input&#xA;1: Wait for positive edge on selected DSI trigger input" hidden="false" />
      </register>
      <register name="UAB_DC1_OVR" address="0x4034043C" bitWidth="32" desc="decimator 1 overflow control" hidden="false">
        <field name="DC1_OVR_CORR_LOC" from="4" to="0" access="RW" resetVal="" desc="Bit location for overflow correction. This should be set to FILTER_ORDER*log2(DC1_RATIO)" hidden="false" />
      </register>
      <register name="UAB_DC1_A0" address="0x40340440" bitWidth="32" desc="decimator1 accumulator 0" hidden="false">
        <field name="A0" from="31" to="0" access="R" resetVal="" desc="27-bit sign extended accumulator0 status" hidden="false" />
      </register>
      <register name="UAB_DC1_A1" address="0x40340444" bitWidth="32" desc="decimator1 accumulator 1" hidden="false">
        <field name="A1" from="31" to="0" access="R" resetVal="" desc="27-bit sign extended accumulator1 status" hidden="false" />
      </register>
      <register name="UAB_DC1_DEC_CNT" address="0x40340448" bitWidth="32" desc="decimator1 decimation counter" hidden="false">
        <field name="INT_CNT" from="8" to="0" access="R" resetVal="" desc="integration/decimation down counter" hidden="false" />
        <field name="DIFF_CNT" from="17" to="16" access="R" resetVal="" desc="differentiation down counter" hidden="false" />
      </register>
      <register name="UAB_DC1_TMP" address="0x4034044C" bitWidth="32" desc="decimator1 temporary value for differentiator" hidden="false">
        <field name="TMP" from="31" to="0" access="R" resetVal="" desc="27-bit sign extended differentiator temporary value status" hidden="false" />
      </register>
      <register name="UAB_DC1_D0" address="0x40340450" bitWidth="32" desc="decimator1 differentiator 0" hidden="false">
        <field name="D0" from="31" to="0" access="R" resetVal="" desc="27-bit sign extended differentiator 0 status" hidden="false" />
      </register>
      <register name="UAB_DC1_D1" address="0x40340454" bitWidth="32" desc="decimator1 differentiator 1" hidden="false">
        <field name="D1" from="31" to="0" access="R" resetVal="" desc="27-bit sign extended differentiator 1 status" hidden="false" />
      </register>
      <register name="UAB_DC1_RES" address="0x40340458" bitWidth="32" desc="decimator1 result" hidden="false">
        <field name="RES" from="31" to="0" access="R" resetVal="" desc="27-bit sign extended result" hidden="false" />
      </register>
      <register name="UAB_CAP_TRIM0" address="0x40340F00" bitWidth="32" desc="Trim for attenuation cap half0" hidden="false">
        <field name="CBTC0_VAL" from="4" to="0" access="RW" resetVal="" desc="Cap B Trim 0 Value&#xA;Trim attenuation cap in branch B for DAC correctness" hidden="false" />
        <field name="CCTC0_VAL" from="10" to="8" access="RW" resetVal="" desc="Cap C Trim 0 Value&#xA;Do not measure value, instead use same value as for CBTC0_VAL" hidden="false" />
      </register>
      <register name="UAB_CAP_TRIM1" address="0x40340F04" bitWidth="32" desc="Trim for attenuation cap half1" hidden="false">
        <field name="CBTC1_VAL" from="4" to="0" access="RW" resetVal="" desc="Cap B Trim 1 Value&#xA;Trim attenuation cap in branch B for DAC correctness" hidden="false" />
        <field name="CCTC1_VAL" from="10" to="8" access="RW" resetVal="" desc="Cap C Trim 1 Value&#xA;Do not measure value, instead use same value as for CBTC1_VAL" hidden="false" />
      </register>
      <register name="UAB_OA_TRIM0" address="0x40340F08" bitWidth="32" desc="Trim for opamp and buffers half0" hidden="false">
        <field name="OA0_OFFSET" from="3" to="0" access="RW" resetVal="" desc="Opamp offset trim" hidden="false" />
        <field name="REF0_OFFSET" from="12" to="8" access="RW" resetVal="" desc="Reference buffer offset trim" hidden="false" />
        <field name="AGND0_OFFSET" from="20" to="16" access="RW" resetVal="" desc="Agnd buffer offset trim" hidden="false" />
      </register>
      <register name="UAB_OA_TRIM1" address="0x40340F0C" bitWidth="32" desc="Trim for opamp and buffers half1" hidden="false">
        <field name="OA1_OFFSET" from="3" to="0" access="RW" resetVal="" desc="Opamp offset trim" hidden="false" />
        <field name="REF1_OFFSET" from="12" to="8" access="RW" resetVal="" desc="Reference buffer offset trim" hidden="false" />
        <field name="AGND1_OFFSET" from="20" to="16" access="RW" resetVal="" desc="Agnd buffer offset trim" hidden="false" />
      </register>
    </block>
    <block name="VDAC_1_OUTBUFFER" BASE="0x0" SIZE="0x0" desc="OpAmp" visible="true" hidden="false">
      <block name="cy_analog_noconnect_1" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
      <block name="cy_analog_virtualmux_1" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
      <block name="cy_analog_virtualmux_2" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
      <block name="cy_psoc4_abuf" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
      <register name="CTB_CTRL" address="0x40310000" bitWidth="32" desc="Global CTB IP and power control" hidden="false">
        <field name="DEEPSLEEP_ON" from="30" to="30" access="RW" resetVal="" desc="Selects component behavior in DeepSleep power mode" hidden="false">
          <value name="DISABLE" value="0" desc="CTB IP disabled off during DeepSleep power mode" />
          <value name="ENABLE" value="1" desc="CTB IP remains enabled during DeepSleep power mode (if ENABLED=1)" />
        </field>
        <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Selects component behavior in DeepSleep power mode" hidden="false">
          <value name="DISABLE" value="0" desc="CTB IP disabled (put analog in power down, open all switches)" />
          <value name="ENABLE" value="1" desc="CTB IP enabledCTB IP enabled" />
        </field>
      </register>
      <register name="OA_RES_CTRL" address="0x40310008" bitWidth="32" desc="Opamp and resistor control" hidden="false">
        <field name="OA_PWR_MODE" from="1" to="0" access="RW" resetVal="" desc="Selects power for opamp" hidden="false">
          <value name="OFF" value="00" desc="Off" />
          <value name="LOW" value="01" desc="Low power" />
          <value name="MED" value="10" desc="Medium power" />
          <value name="HIGH" value="11" desc="High power" />
        </field>
        <field name="OA0_DRIVE_STR_SEL" from="2" to="2" access="RW" resetVal="" desc="Opamp output strenght select" hidden="false">
          <value name="1x" value="0" desc="Internal only" />
          <value name="10x" value="1" desc="Output to pin" />
        </field>
        <field name="OA_PUMP_EN" from="11" to="11" access="RW" resetVal="" desc="Selects pump" hidden="false">
          <value name="DISABLE" value="0" desc="Pump disabled" />
          <value name="ENABLE" value="1" desc="Pump enabled" />
        </field>
      </register>
      <register name="OA_COMP_TRIM" address="0x40310F14" bitWidth="32" desc="Opamp Compenation Capacitor Trim" hidden="false">
        <field name="OA_COMP_TRIM" from="1" to="0" access="RW" resetVal="" desc="Opamp Compenation Capacitor Trim" hidden="false">
          <value name="HIGH_SPEED" value="01" desc="High Speed" />
          <value name="BALANCED" value="10" desc="Balanced" />
          <value name="HIGH_STABILITY" value="11" desc="High Stability" />
        </field>
      </register>
    </block>
    <block name="cy_constant_2" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="cy_constant_3" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="or_1" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="ZeroTerminal_1" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="cy_analog_noconnect_3" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="vRef_1" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="VirtualMux_1" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="cy_analog_virtualmux_3" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="cy_analog_virtualmux_4" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="cy_analog_noconnect_4" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="cy_analog_noconnect_5" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="cy_analog_virtualmux_5" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="internalClock" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="cy_analog_noconnect_1" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="cy_analog_noconnect_2" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
  </block>
  <block name="ANA_OUT2" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
  <block name="ANA_OUT1" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
  <block name="VDAC_2" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false">
    <block name="VDAC_2_UAB" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false">
      <block name="halfuab" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
      <register name="UAB_UAB_CTRL" address="0x40340000" bitWidth="32" desc="Global UAB control" hidden="false">
        <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="- 0: UAB IP disabled (put analog in power down, open all switches)&#xA;- 1: UAB IP enabled" hidden="false" />
      </register>
      <register name="UAB_INTR" address="0x40340020" bitWidth="32" desc="Interrupt request register" hidden="false">
        <field name="COMP0" from="0" to="0" access="RW" resetVal="" desc="Comparator 0 Interrupt: hardware sets this interrupt when comparator 0 triggers. Write with '1' to clear bit." hidden="false" />
        <field name="VDAC0_EMPTY" from="1" to="1" access="RW" resetVal="" desc="VDAC 0 Interrupt: hardware sets this interrupt when VDAC 0 next value field is empty. Write with '1' to clear bit." hidden="false" />
        <field name="DC0_RES" from="2" to="2" access="RW" resetVal="" desc="Decimator 0 Result Interrupt: hardware sets this interrupt when Decimator 0 writes a new result value in DC0_RES register. Write with '1' to clear bit." hidden="false" />
        <field name="COMP1" from="16" to="16" access="RW" resetVal="" desc="Comparator 1 Interrupt: hardware sets this interrupt when comparator 1 triggers. Write with '1' to clear bit." hidden="false" />
        <field name="VDAC1_EMPTY" from="17" to="17" access="RW" resetVal="" desc="VDAC 1 Interrupt: hardware sets this interrupt when VDAC 1 next value field is empty. Write with '1' to clear bit." hidden="false" />
        <field name="DC1_RES" from="18" to="18" access="RW" resetVal="" desc="Decimator 1 Result Interrupt: hardware sets this interrupt when Decimator 1 writes a new result value in DC1_RES register. Write with '1' to clear bit." hidden="false" />
      </register>
      <register name="UAB_INTR_SET" address="0x40340024" bitWidth="32" desc="Interrupt request set register" hidden="false">
        <field name="COMP0_SET" from="0" to="0" access="RW" resetVal="" desc="Write with '1' to set corresponding bit in interrupt request register." hidden="false" />
        <field name="VDAC0_EMPTY_SET" from="1" to="1" access="RW" resetVal="" desc="Write with '1' to set corresponding bit in interrupt request register." hidden="false" />
        <field name="DC0_RES_SET" from="2" to="2" access="RW" resetVal="" desc="Write with '1' to set corresponding bit in interrupt request register." hidden="false" />
        <field name="COMP1_SET" from="16" to="16" access="RW" resetVal="" desc="Write with '1' to set corresponding bit in interrupt request register." hidden="false" />
        <field name="VDAC1_EMPTY_SET" from="17" to="17" access="RW" resetVal="" desc="Write with '1' to set corresponding bit in interrupt request register." hidden="false" />
        <field name="DC1_RES_SET" from="18" to="18" access="RW" resetVal="" desc="Write with '1' to set corresponding bit in interrupt request register." hidden="false" />
      </register>
      <register name="UAB_INTR_MASK" address="0x40340028" bitWidth="32" desc="Interrupt request mask" hidden="false">
        <field name="COMP0_MASK" from="0" to="0" access="RW" resetVal="" desc="Mask bit for corresponding bit in interrupt request register." hidden="false" />
        <field name="VDAC0_EMPTY_MASK" from="1" to="1" access="RW" resetVal="" desc="Mask bit for corresponding bit in interrupt request register." hidden="false" />
        <field name="DC0_RES_MASK" from="2" to="2" access="RW" resetVal="" desc="Mask bit for corresponding bit in interrupt request register." hidden="false" />
        <field name="COMP1_MASK" from="16" to="16" access="RW" resetVal="" desc="Mask bit for corresponding bit in interrupt request register." hidden="false" />
        <field name="VDAC1_EMPTY_MASK" from="17" to="17" access="RW" resetVal="" desc="Mask bit for corresponding bit in interrupt request register." hidden="false" />
        <field name="DC1_RES_MASK" from="18" to="18" access="RW" resetVal="" desc="Mask bit for corresponding bit in interrupt request register." hidden="false" />
      </register>
      <register name="UAB_INTR_MASKED" address="0x4034002C" bitWidth="32" desc="Interrupt request masked" hidden="false">
        <field name="COMP0_MASKED" from="0" to="0" access="R" resetVal="" desc="Logical and of corresponding request and mask bits." hidden="false" />
        <field name="VDAC0_EMPTY_MASKED" from="1" to="1" access="R" resetVal="" desc="Logical and of corresponding request and mask bits." hidden="false" />
        <field name="DC0_RES_MASKED" from="2" to="2" access="R" resetVal="" desc="Logical and of corresponding request and mask bits." hidden="false" />
        <field name="COMP1_MASKED" from="16" to="16" access="R" resetVal="" desc="Logical and of corresponding request and mask bits." hidden="false" />
        <field name="VDAC1_EMPTY_MASKED" from="17" to="17" access="R" resetVal="" desc="Logical and of corresponding request and mask bits." hidden="false" />
        <field name="DC1_RES_MASKED" from="18" to="18" access="R" resetVal="" desc="Logical and of corresponding request and mask bits." hidden="false" />
      </register>
      <register name="UAB_OA0_CTRL" address="0x40340200" bitWidth="32" desc="Opamp, comparator, buffer  controls" hidden="false">
        <field name="OA0_PWR" from="2" to="0" access="RW" resetVal="" desc="Opamp0 power level" hidden="false" />
        <field name="CMP0_PWR" from="10" to="8" access="RW" resetVal="" desc="Comparator0 power level" hidden="false" />
        <field name="CMP0_EDGE" from="13" to="12" access="RW" resetVal="" desc="Comparator0 edge detect for interrupt and trigger" hidden="false">
          <value name="DISABLE" value="0" desc="Disabled, no interrupts will be detected" />
          <value name="RISING" value="1" desc="Rising edge" />
          <value name="FALLING" value="10" desc="Falling edge" />
          <value name="BOTH" value="11" desc="Both rising and falling edges" />
        </field>
        <field name="CMP0_DSI_LEVEL" from="14" to="14" access="RW" resetVal="" desc="Comparator0 trigger out level : 0=pulse, 1=level" hidden="false" />
        <field name="CTRL0_SPARE" from="15" to="15" access="RW" resetVal="" desc="Spare bit" hidden="false" />
        <field name="REF0_PWR" from="18" to="16" access="RW" resetVal="" desc="Reference0 buffer power level" hidden="false" />
        <field name="REF0_PTS" from="19" to="19" access="RW" resetVal="" desc="1- Pull the Reference0 buffer output to VDDA" hidden="false" />
        <field name="AGND0_PWR" from="22" to="20" access="RW" resetVal="" desc="Agnd0 buffer power level" hidden="false" />
        <field name="AGND0_PTS" from="23" to="23" access="RW" resetVal="" desc="1 - Pull Agnd0 buffer output to VDDA" hidden="false" />
        <field name="SW_GG" from="24" to="24" access="RW" resetVal="" desc="Connect outputs of Agnd0 and Agnd1 buffer, one buffer must be off.&#xA;This is to drive both UAB halves with the same buffer, so both halves get the same offset noise." hidden="false" />
        <field name="SPARE0_EN" from="25" to="25" access="RW" resetVal="" desc="1 - Enable spare reference" hidden="false" />
        <field name="H0_PWR" from="31" to="30" access="RW" resetVal="" desc="UAB Half, power profile" hidden="false">
          <value name="NORMAL" value="0" desc="Normal, for normal analog clock speeds" />
          <value name="ULTRA_LOW" value="1" desc="Ultra low power, only allowed for lower analog clock speeds" />
          <value name="ULTRA_HIGH" value="10" desc="Ultra high performance, for higher analog clock speeds (also ultra high power)" />
          <value name="Reserved" value="11" desc="Reserved, do not use" />
        </field>
      </register>
      <register name="UAB_CAP_CTRL0" address="0x40340204" bitWidth="32" desc="Capacitance controls" hidden="false">
        <field name="CB0_GND" from="5" to="5" access="RW" resetVal="" desc="Ground unused caps of CB0 array&#xA;0: leave unused caps floating&#xA;1: ground unused caps (typical when attentuation Cap is used, e.g. for VDAC use-case)" hidden="false" />
        <field name="CC0_GND" from="6" to="6" access="RW" resetVal="" desc="Ground unused caps of CC0 array&#xA;0: leave unused caps floating&#xA;1: ground unused caps (typical when attentuation Cap is used)" hidden="false" />
        <field name="FRC0_SIGN_BIT" from="28" to="28" access="RW" resetVal="" desc="Forces the sign bit to be 1 in DAC mode.  This is used to achieve &#xA;0 - AGND0 range for unsigned numbers using DAC mode 2" hidden="false" />
        <field name="DAC0_MODE_EN" from="29" to="29" access="RW" resetVal="" desc="0: SIGN0_VAL can be programmed to be a modbit source&#xA;1: SIGN0_VAL is a dedicated sign bit (FW modbit source tied to 0)" hidden="false" />
        <field name="DAC0_MODE" from="31" to="30" access="RW" resetVal="" desc="DAC mode, this determines the AB Cap Value decoding" hidden="false">
          <value name="UNSIGNED12" value="0" desc="Off or Unsigned 12-bit VDAC, i.e. no AB Cap value decoding.&#xA;SIGN1_VAL can be used as Firmware controlled modbit (e.g. to invert the Voltage for a Sign + Magnitude VDAC)" />
          <value name="VIRT_SIGNED12" value="1" desc="Virtual signed 12-bits' VDAC. AB Cap value decoding: &#xA;add 0x800 to the 12-bit AB Cap Value (=invert MSB), to convert the lowest signed number 0x800 to the lowest unsigned number 0x000. This is the same as the SAR handles 12-bit 'virtual' signed numbers." />
          <value name="SIGNED13" value="10" desc="Signed 13-bit twos complement. AB Cap value decoding: &#xA;for negative values (SIGN0_VAL=1) the AB Cap values are inverted, the 64th B cap unit is enabled and the Voltage should be inverted.&#xA;- Voltage inversion only works if the right clocking waveforms, switch settings and reference voltages are used.&#xA;- Enabling the 64th B cap unit adds 1 so that only a AB Cap value inversion is needed to create a true twos complement." />
          <value name="RESERVED" value="11" desc="" />
        </field>
      </register>
      <register name="UAB_CAP_ABCF0_VAL" address="0x40340208" bitWidth="32" desc="Capacitance values for CA0, CB0, CC0 and CF0" hidden="false">
        <field name="CB0_VAL" from="5" to="0" access="RW" resetVal="" desc="Cap B0 Value, in DAC_MODE 1 and 2 this value is decoded" hidden="false" />
        <field name="CA0_VAL" from="11" to="6" access="RW" resetVal="" desc="Cap A0 Value, in DAC_MODE 1 and 2 this value is decoded" hidden="false" />
        <field name="SIGN0_VAL" from="12" to="12" access="RW" resetVal="" desc="Sign bit Value, when used in DAC_MODE, otherwise Firmware modbit.&#xA;In DAC_MODE the modbit should be used to invert the voltage on the AB Caps for the negative DAC values." hidden="false" />
        <field name="CB0_64" from="13" to="13" access="RW" resetVal="" desc="Enable 64th Cap of CB0 array.  In DAC mode the FW setting is overridden by the hardware based on DAC_MODE setting.&#xA;1 - Enables the 64th cap.  This will also set CB0_val[5:0] to be 6'h3F" hidden="false" />
        <field name="CC0_VAL" from="21" to="16" access="RW" resetVal="" desc="Cap C0 Value" hidden="false" />
        <field name="CF0_VAL" from="28" to="24" access="RW" resetVal="" desc="Cap F0 Value [2..64 is the range in steps of 2]" hidden="false" />
      </register>
      <register name="UAB_CAP_AB0_VAL_NXT" address="0x4034020C" bitWidth="32" desc="Next capacitance values for CA0 and CB0" hidden="false">
        <field name="CB0_VAL" from="5" to="0" access="RW" resetVal="" desc="Cap B0 Value" hidden="false" />
        <field name="CA0_VAL" from="11" to="6" access="RW" resetVal="" desc="Cap A0 Value" hidden="false" />
        <field name="SIGN0_VAL" from="12" to="12" access="RW" resetVal="" desc="Sign bit Value" hidden="false" />
      </register>
      <register name="UAB_CAP_CF0_VAL_NXT" address="0x40340210" bitWidth="32" desc="Next capacitance values for CC0 and CF0" hidden="false">
        <field name="CC0_VAL" from="21" to="16" access="RW" resetVal="" desc="Cap C0 Value" hidden="false" />
        <field name="CF0_VAL" from="28" to="24" access="RW" resetVal="" desc="Cap F0 Value" hidden="false" />
        <field name="CC0_VAL_UPDATE" from="30" to="30" access="RW" resetVal="" desc="1 - Update the CC0 cap value with CAP_CC0_VAL_NXT.CC0_VAL" hidden="false" />
        <field name="CF0_VAL_UPDATE" from="31" to="31" access="RW" resetVal="" desc="1 - Update the CF0 cap value with CAP_CF0_VAL_NXT.CF0_VAL" hidden="false" />
      </register>
      <register name="UAB_STARTUP_DELAY0" address="0x40340220" bitWidth="32" desc="Startup delay" hidden="false">
        <field name="STARTUP_DELAY" from="15" to="0" access="RW" resetVal="" desc="Startup delay to synchronize the UAB-SAR interface. The usage and meaning of this field depends on the value of the ALIGN_MODE bit (below).   A value of 0 disables this function." hidden="false" />
        <field name="ALIGN_MODE" from="16" to="16" access="RW" resetVal="" desc="0 - STARTUP_DELAY is number of clk_hf clocks to delay the UAB clock after a SAR Trigger for UAB-SAR alignment in scheduled mode&#xA;1 - STARTUP_DELAY is number of clk_hf clocks to delay UAB trigger to SAR for UAB-SAR alignment in unscheduled mode" hidden="false" />
      </register>
      <register name="UAB_SUBSAMPLE_CTRL0" address="0x40340224" bitWidth="32" desc="Subsample control" hidden="false">
        <field name="SUBSAMPLE" from="7" to="0" access="RW" resetVal="" desc="Subsampling: suppress Valid output during the first SUBSAMPLE analog clock periods. Only allow Valid output in the last of the SUBSAMPLE+1 analog clock periods.&#xA;A value of 0 will not suppress Valid output." hidden="false" />
        <field name="SUBSAMPLE_INIT" from="15" to="8" access="RW" resetVal="" desc="Initial value of the subsampling down counter. Before this UAB half is running the firmware can write to this field the initial value of the subsample down counter. It is recommend that the following is true for the initial value  SUBSAMPLE_INIT&lt;=SUBSAMPLE, however this is not a requirement. Writing a bigger value can be used to postpone the very first Valid output." hidden="false" />
      </register>
      <register name="UAB_SW_STATIC0" address="0x40340230" bitWidth="32" desc="Static switches for half 0 of the UAB" hidden="false">
        <field name="SW_G00" from="0" to="0" access="RW" resetVal="" desc="VIN00 to OA0.vplus (AG0)" hidden="false" />
        <field name="SW_G01" from="1" to="1" access="RW" resetVal="" desc="VIN01 to OA0.vplus (AG0)" hidden="false" />
        <field name="SW_G02" from="2" to="2" access="RW" resetVal="" desc="VIN02 to OA0.vplus (AG0)" hidden="false" />
        <field name="SW_G03" from="3" to="3" access="RW" resetVal="" desc="VIN03 to OA0.vplus (AG0)" hidden="false" />
        <field name="SW_R0G" from="4" to="4" access="RW" resetVal="" desc="REF0 to OA0.vplus (AG0)" hidden="false" />
        <field name="SW_G0G" from="5" to="5" access="RW" resetVal="" desc="AGND0 to OA0.vplus (AG0)" hidden="false" />
        <field name="SW_R0T" from="8" to="8" access="RW" resetVal="" desc="REF0 to cmp0.vminus (Threshold)" hidden="false" />
        <field name="SW_G0T" from="9" to="9" access="RW" resetVal="" desc="AGND0 to cmp0.vminus (Threshold)" hidden="false" />
        <field name="SW_Q0T" from="10" to="10" access="RW" resetVal="" desc="OUT1 to cmp0.vminus (Threshold)" hidden="false" />
        <field name="EARLY_P0S" from="12" to="12" access="RW" resetVal="" desc="OUT0 to Sum0 switch timing: 0=Regular, 1=Early" hidden="false" />
        <field name="EARLY_P0O" from="13" to="13" access="RW" resetVal="" desc="OUT0 to VOUT0 switch timing: 0=Regular, 1=Early" hidden="false" />
        <field name="RMB0_BITS" from="19" to="16" access="RW" resetVal="" desc="Risk mitigation bits (To be defined if they are used)" hidden="false" />
        <field name="STRB_RST0_SEL" from="28" to="24" access="RW" resetVal="" desc="Select source either for VDAC strobe or analog-reset to discharge all Caps (Delsig Modulator use-case)&#xA;0 = Decimator0 half 0 analog-reset output&#xA;1 = Decimator0 half 1 analog-reset output&#xA;2 = Decimator1 half 0 analog-reset output&#xA;3 = Decimator1 half 1 analog-reset output&#xA;4 = Decimator2 half 0 analog-reset output&#xA;5 = Decimator2 half 1 analog-reset output&#xA;6 = Decimator3 half 0 analog-reset output&#xA;7 = Decimator3 half 1 analog-reset output&#xA;8-31 = generic trigger input 0-23&#xA;For PASS4B  only values 0-1 and 8-13 are legal." hidden="false" />
        <field name="STRB_RST0_EN" from="29" to="29" access="RW" resetVal="" desc="Enable VDAC strobe or UAB analog-reset:&#xA;0: Use selected source as VDAC strobe for next CA0 and CB0 values&#xA;1: Use selected source as Analog-reset (discharge all Caps)" hidden="false" />
      </register>
      <register name="UAB_SW_MODBIT_SRC0" address="0x40340234" bitWidth="32" desc="Select source of Modbit for A,B and C branches of half 0" hidden="false">
        <field name="MODBIT0_SRC0_SEL" from="4" to="0" access="RW" resetVal="" desc="Select source of modbit for A &amp; B branches&#xA;0=UAB0 half 0 comparator output&#xA;1=UAB0 half 1 comparator output&#xA;2=UAB1 half 0 comparator output&#xA;3=UAB1 half 1 comparator output&#xA;4=UAB2 half 0 comparator output&#xA;5=UAB2 half 1 comparator output&#xA;6=UAB3 half 0 comparator output&#xA;7=UAB3 half 1 comparator output&#xA;8-30 = generic trigger inputs 0-22&#xA;31=SIGN0_VAL, also used as Firmware modbit. &#xA;For PASS4B  only values 0-1 and 8-13 and 31 are legal." hidden="false" />
        <field name="MODBIT1_SRC0_SEL" from="12" to="8" access="RW" resetVal="" desc="Select source of modbit for C branch&#xA;0=UAB0 half 0 comparator output&#xA;1=UAB0 half 1 comparator output&#xA;2=UAB1 half 0 comparator output&#xA;3=UAB1 half 1 comparator output&#xA;4=UAB2 half 0 comparator output&#xA;5=UAB2 half 1 comparator output&#xA;6=UAB3 half 0 comparator output&#xA;7=UAB3 half 1 comparator output&#xA;8-30 = generic trigger inputs 0-22&#xA;31=SIGN0_VAL, also used as Firmware modbit. &#xA;For PASS4B  only values 0-1 and 8-13 and 31 are legal." hidden="false" />
      </register>
      <register name="UAB_SW_CA0_IN0" address="0x40340240" bitWidth="32" desc="Cap A0 input switches set 0" hidden="false">
        <field name="SW_A00_CMP" from="3" to="0" access="RW" resetVal="" desc="VIN00 to Cap A0 input, allows for modbit control" hidden="false" />
        <field name="SW_A01_CMP" from="7" to="4" access="RW" resetVal="" desc="VIN01 to Cap A0 input, allows for modbit control" hidden="false" />
        <field name="SW_A02_CMP" from="11" to="8" access="RW" resetVal="" desc="VIN02 to Cap A0 input, allows for modbit control" hidden="false" />
        <field name="SW_A03_CMP" from="15" to="12" access="RW" resetVal="" desc="VIN03 to Cap A0 input, allows for modbit control" hidden="false" />
        <field name="SW_A0P" from="19" to="16" access="RW" resetVal="" desc="OUT0 to Cap A0 input" hidden="false" />
        <field name="SW_A0Q" from="23" to="20" access="RW" resetVal="" desc="OUT1 to Cap A0 input" hidden="false" />
      </register>
      <register name="UAB_SW_CA0_IN1" address="0x40340244" bitWidth="32" desc="Cap A0 input switches set 1" hidden="false">
        <field name="SW_AA" from="3" to="0" access="RW" resetVal="" desc="Cap A0 input to Cap A1 input&#xA;(Note: In the UAB design this is the called AM switch)" hidden="false" />
        <field name="SW_A0R_CMP" from="7" to="4" access="RW" resetVal="" desc="REF0 to Cap A0 input, allows for modbit control" hidden="false" />
        <field name="SW_A0G_CMP" from="11" to="8" access="RW" resetVal="" desc="AGND0 to Cap A0 input, allows for modbit control" hidden="false" />
        <field name="SW_A0V_CMP" from="15" to="12" access="RW" resetVal="" desc="VSS to Cap A0 input, allows for modbit control" hidden="false" />
      </register>
      <register name="UAB_SW_CA0_TOP" address="0x40340248" bitWidth="32" desc="Cap A0 top plate switches" hidden="false">
        <field name="SW_R0A_CMP" from="3" to="0" access="RW" resetVal="" desc="Cap A0 top plate to REF0, allows for modbit control" hidden="false" />
        <field name="SW_G0A_CMP" from="7" to="4" access="RW" resetVal="" desc="Cap A0 top plate to AGND0, allows for modbit control" hidden="false" />
        <field name="SW_V0A_CMP" from="11" to="8" access="RW" resetVal="" desc="Cap A0 top plate to VSS, allows for modbit control" hidden="false" />
        <field name="SW_S0A" from="19" to="16" access="RW" resetVal="" desc="Cap A0 top plate to SUM0" hidden="false" />
      </register>
      <register name="UAB_SW_CB0_IN0" address="0x40340250" bitWidth="32" desc="Cap B0 input switches set 0" hidden="false">
        <field name="SW_B00_CMP" from="3" to="0" access="RW" resetVal="" desc="VIN00 to Cap B0 input, allows for modbit control" hidden="false" />
        <field name="SW_B01_CMP" from="7" to="4" access="RW" resetVal="" desc="VIN01 to Cap B0 input, allows for modbit control" hidden="false" />
        <field name="SW_B02_CMP" from="11" to="8" access="RW" resetVal="" desc="VIN02 to Cap B0 input, allows for modbit control" hidden="false" />
        <field name="SW_B03_CMP" from="15" to="12" access="RW" resetVal="" desc="VIN03 to Cap B0 input, allows for modbit control" hidden="false" />
        <field name="SW_B0P" from="19" to="16" access="RW" resetVal="" desc="OUT0 to Cap B0 input" hidden="false" />
        <field name="SW_B0Q" from="23" to="20" access="RW" resetVal="" desc="OUT1 to Cap B0 input" hidden="false" />
      </register>
      <register name="UAB_SW_CB0_IN1" address="0x40340254" bitWidth="32" desc="Cap B0 input switches set 1" hidden="false">
        <field name="SW_BB" from="3" to="0" access="RW" resetVal="" desc="Cap B0 input to Cap B1 input&#xA;(Note: In the UAB design this is called the BM switch)" hidden="false" />
        <field name="SW_B0R_CMP" from="7" to="4" access="RW" resetVal="" desc="REF0 to Cap B0 input, allows for modbit control" hidden="false" />
        <field name="SW_B0G_CMP" from="11" to="8" access="RW" resetVal="" desc="AGND0 to Cap B0 input, allows for modbit control" hidden="false" />
        <field name="SW_B0V_CMP" from="15" to="12" access="RW" resetVal="" desc="VSS to Cap B0 input, allows for modbit control" hidden="false" />
      </register>
      <register name="UAB_SW_CB0_TOP" address="0x40340258" bitWidth="32" desc="Cap A0 top plate switches" hidden="false">
        <field name="SW_R0B_CMP" from="3" to="0" access="RW" resetVal="" desc="Cap B0 top plate to REF0, allows for modbit control" hidden="false" />
        <field name="SW_G0B_CMP" from="7" to="4" access="RW" resetVal="" desc="Cap B0 top plate to AGND0, allows for modbit control" hidden="false" />
        <field name="SW_V0B_CMP" from="11" to="8" access="RW" resetVal="" desc="Cap B0 top plate to VSS, allows for modbit control" hidden="false" />
        <field name="SW_T0B" from="15" to="12" access="RW" resetVal="" desc="Cap B0 top plate Trim/Attenuation bypass" hidden="false" />
        <field name="SW_S0B" from="19" to="16" access="RW" resetVal="" desc="Cap B0 top plate to SUM0" hidden="false" />
      </register>
      <register name="UAB_SW_CC0_IN0" address="0x40340260" bitWidth="32" desc="Cap C0 input switches set 0" hidden="false">
        <field name="SW_C00_CMP" from="3" to="0" access="RW" resetVal="" desc="VIN00 to Cap C0 input, allows for modbit control" hidden="false" />
        <field name="SW_C01_CMP" from="7" to="4" access="RW" resetVal="" desc="VIN01 to Cap C0 input, allows for modbit control" hidden="false" />
        <field name="SW_C02_CMP" from="11" to="8" access="RW" resetVal="" desc="VIN02 to Cap C0 input, allows for modbit control" hidden="false" />
        <field name="SW_C03_CMP" from="15" to="12" access="RW" resetVal="" desc="VIN03 to Cap C0 input, allows for modbit control" hidden="false" />
        <field name="SW_C0P" from="19" to="16" access="RW" resetVal="" desc="OUT0 to Cap C0 input" hidden="false" />
        <field name="SW_C0Q" from="23" to="20" access="RW" resetVal="" desc="OUT1 to Cap C0 input" hidden="false" />
      </register>
      <register name="UAB_SW_CC0_IN1" address="0x40340264" bitWidth="32" desc="Cap C0 input switches set 1" hidden="false">
        <field name="SW_CC" from="3" to="0" access="RW" resetVal="" desc="Cap C0 input to Cap C1 input&#xA;(Note: In the UAB design this is called the CM switch)" hidden="false" />
        <field name="SW_C0R_CMP" from="7" to="4" access="RW" resetVal="" desc="REF0 to Cap C0 input, allows for modbit control" hidden="false" />
        <field name="SW_C0G_CMP" from="11" to="8" access="RW" resetVal="" desc="AGND0 to Cap C0 input, allows for modbit control" hidden="false" />
        <field name="SW_C0V_CMP" from="15" to="12" access="RW" resetVal="" desc="VSS to Cap C0 input, allows for modbit control" hidden="false" />
      </register>
      <register name="UAB_SW_CC0_TOP" address="0x40340268" bitWidth="32" desc="Cap A0 top plate switches" hidden="false">
        <field name="SW_R0C_CMP" from="3" to="0" access="RW" resetVal="" desc="Cap C0 top plate to REF0, allows for modbit control" hidden="false" />
        <field name="SW_G0C_CMP" from="7" to="4" access="RW" resetVal="" desc="Cap C0 top plate to AGND0, allows for modbit control" hidden="false" />
        <field name="SW_V0C_CMP" from="11" to="8" access="RW" resetVal="" desc="Cap C0 top plate to VSS, allows for modbit control" hidden="false" />
        <field name="SW_T0C" from="15" to="12" access="RW" resetVal="" desc="Cap C0 top plate Trim/Attenuation bypass" hidden="false" />
        <field name="SW_S0C" from="19" to="16" access="RW" resetVal="" desc="Cap C0 top plate to SUM0" hidden="false" />
        <field name="SW_S10" from="23" to="20" access="RW" resetVal="" desc="Cap C0 top plate to SUM1" hidden="false" />
      </register>
      <register name="UAB_SW_CF0_BOT" address="0x4034026C" bitWidth="32" desc="Cap F0 bottom plate and output switches" hidden="false">
        <field name="SW_G0F" from="3" to="0" access="RW" resetVal="" desc="Cap F0 bottom plate to AGND0" hidden="false" />
        <field name="SW_P0F" from="7" to="4" access="RW" resetVal="" desc="Cap F0 bottom plate to OUT0" hidden="false" />
        <field name="SW_P0S" from="11" to="8" access="RW" resetVal="" desc="Cap F bypass, OUT0 to SUM0" hidden="false" />
        <field name="SW_P0O" from="15" to="12" access="RW" resetVal="" desc="OUT0 to VOUT0" hidden="false" />
      </register>
      <register name="UAB_SW_OTHER0" address="0x40340270" bitWidth="32" desc="Other clocked controls" hidden="false">
        <field name="CMP0_FF" from="3" to="0" access="RW" resetVal="" desc="Clock for Flip-Flop after Comparator 0" hidden="false" />
        <field name="VALID0" from="7" to="4" access="RW" resetVal="" desc="Valid0, output flag to indicated that VOUT0 is valid. The Valid output can be suppressed due to sub-sampling. Note that when sub-sampling is used this clocking waveform is used to decrement the counter (decrement is aligned with the positive edge of this clocking waveform)." hidden="false" />
        <field name="TRIG0_OUT" from="11" to="8" access="RW" resetVal="" desc="Trigger output (for other UABs or SAR)" hidden="false" />
        <field name="STROBE_SW0" from="27" to="24" access="RW" resetVal="" desc="Strobe for dsi_sw_ctrl (modbit) update, dsi_sw_ctrl updates in sync with posedge of this wave. To disable set to 0. To enable update anytime use 15." hidden="false" />
        <field name="STROBE_RST0" from="31" to="28" access="RW" resetVal="" desc="Use the positive edge of the selected clocking waveform to synchronize: &#xA; STRB_RST0_EN=0: Capacitor Value update (Capacitor Strobe)&#xA; STRB_RST0_EN=1: UAB analog-reset update&#xA;Set to 0 to disable both functions. Result undefined for value 15." hidden="false" />
      </register>
      <register name="UAB_SW_BOOST_CTRL0" address="0x40340274" bitWidth="32" desc="Bootstrap clock control" hidden="false">
        <field name="CA0_BOOST" from="3" to="0" access="RW" resetVal="" desc="Clock for boot strap master in A branch" hidden="false" />
        <field name="CB0_BOOST" from="7" to="4" access="RW" resetVal="" desc="Clock for boot strap master in B branch" hidden="false" />
        <field name="CC0_BOOST" from="11" to="8" access="RW" resetVal="" desc="Clock for boot strap master in C branch" hidden="false" />
        <field name="CF0_BOOST" from="15" to="12" access="RW" resetVal="" desc="Clock for boot strap master in F branch" hidden="false" />
        <field name="SUM0_BOOST" from="19" to="16" access="RW" resetVal="" desc="Clock for boot strap master in Summing node branch" hidden="false" />
        <field name="PUMP0_WAVE" from="23" to="20" access="RW" resetVal="" desc="Clock for pump in half0" hidden="false" />
      </register>
      <register name="UAB_SRAM0_CTRL" address="0x40340278" bitWidth="32" desc="SRAM programmed size" hidden="false">
        <field name="LAST_STEP" from="3" to="0" access="RW" resetVal="" desc="Last step of wave programmed in the SRAM" hidden="false" />
        <field name="TRIG_SEL0" from="28" to="24" access="RW" resetVal="" desc="input Trigger select&#xA;0=UAB0 half 0 trigger output&#xA;1=UAB0 half 1 trigger output&#xA;2=UAB1 half 0 trigger output&#xA;3=UAB1 half 1 trigger output&#xA;4=UAB2 half 0 trigger output&#xA;5=UAB2 half 1 trigger output&#xA;6=UAB3 half 0 trigger output&#xA;7=UAB3 half 1 trigger output&#xA;8-30 = generic trigger inputs 0-22&#xA;31=SAR trigger output&#xA;For PASS4B  only values 0-1 and 8-13 and 31 are legal." hidden="false" />
        <field name="TRIGGER_EN" from="29" to="29" access="RW" resetVal="" desc="Enable input trigger:&#xA;0: Ignore triggers, start running immediately after setting RUN bit&#xA;1: After RUN bit is set wait for a positive edge on the selected trigger input" hidden="false" />
        <field name="RUN" from="31" to="31" access="RW" resetVal="" desc="Set to start executing the waveform (may need to wait for a trigger). Clear to stop this UAB half. When RUN=0 all dynamic switches are forced open." hidden="false" />
      </register>
      <register name="UAB_STAT0" address="0x4034027C" bitWidth="32" desc="Status Current SRAM counter and comparator" hidden="false">
        <field name="CURR_STEP" from="3" to="0" access="R" resetVal="" desc="Current step executed from the SRAM" hidden="false" />
        <field name="COMP" from="4" to="4" access="R" resetVal="" desc="Current comparator status" hidden="false" />
        <field name="CURR_SUBSAMPLE" from="31" to="24" access="R" resetVal="" desc="Current value of the subsampling down counter. The Valid is suppressed when SUBSAMPLE_CUR!=0." hidden="false" />
      </register>
      <register name="UAB_SRAM00" address="0x40340280" bitWidth="32" desc="Waveform SRAM for half 0 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM01" address="0x40340284" bitWidth="32" desc="Waveform SRAM for half 0 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM02" address="0x40340288" bitWidth="32" desc="Waveform SRAM for half 0 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM03" address="0x4034028C" bitWidth="32" desc="Waveform SRAM for half 0 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM04" address="0x40340290" bitWidth="32" desc="Waveform SRAM for half 0 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM05" address="0x40340294" bitWidth="32" desc="Waveform SRAM for half 0 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM06" address="0x40340298" bitWidth="32" desc="Waveform SRAM for half 0 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM07" address="0x4034029C" bitWidth="32" desc="Waveform SRAM for half 0 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM08" address="0x403402A0" bitWidth="32" desc="Waveform SRAM for half 0 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM09" address="0x403402A4" bitWidth="32" desc="Waveform SRAM for half 0 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM010" address="0x403402A8" bitWidth="32" desc="Waveform SRAM for half 0 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM011" address="0x403402AC" bitWidth="32" desc="Waveform SRAM for half 0 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM012" address="0x403402B0" bitWidth="32" desc="Waveform SRAM for half 0 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM013" address="0x403402B4" bitWidth="32" desc="Waveform SRAM for half 0 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM014" address="0x403402B8" bitWidth="32" desc="Waveform SRAM for half 0 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM015" address="0x403402BC" bitWidth="32" desc="Waveform SRAM for half 0 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_OA1_CTRL" address="0x40340300" bitWidth="32" desc="Opamp, comparator, buffer  controls" hidden="false">
        <field name="OA1_PWR" from="2" to="0" access="RW" resetVal="" desc="Opamp1 power level" hidden="false" />
        <field name="CMP1_PWR" from="10" to="8" access="RW" resetVal="" desc="Comparator1 power level" hidden="false" />
        <field name="CMP1_EDGE" from="13" to="12" access="RW" resetVal="" desc="Comparator1 edge detect for interrupt and trigger" hidden="false">
          <value name="DISABLE" value="0" desc="Disabled, no interrupts will be detected" />
          <value name="RISING" value="1" desc="Rising edge" />
          <value name="FALLING" value="10" desc="Falling edge" />
          <value name="BOTH" value="11" desc="Both rising and falling edges" />
        </field>
        <field name="CMP1_DSI_LEVEL" from="14" to="14" access="RW" resetVal="" desc="Comparator trigger out level : 0=pulse, 1=level" hidden="false" />
        <field name="CTRL1_SPARE" from="15" to="15" access="RW" resetVal="" desc="Spare bit" hidden="false" />
        <field name="REF1_PWR" from="18" to="16" access="RW" resetVal="" desc="Reference1 buffer power" hidden="false" />
        <field name="REF1_PTS" from="19" to="19" access="RW" resetVal="" desc="1- Pull the Reference1 buffer output to VDDA" hidden="false" />
        <field name="AGND1_PWR" from="22" to="20" access="RW" resetVal="" desc="Agnd1 buffer power" hidden="false" />
        <field name="AGND1_PTS" from="23" to="23" access="RW" resetVal="" desc="1- Pull the Agnd1 buffer output to VDDA" hidden="false" />
        <field name="SW_RR" from="24" to="24" access="RW" resetVal="" desc="Connect outputs of Reference0 and Reference1 buffer, one buffer must be off.&#xA;This is to drive both UAB halves with the same buffer, so both halves get the same offset noise." hidden="false" />
        <field name="SPARE1_EN" from="25" to="25" access="RW" resetVal="" desc="1 - Enable the spare reference" hidden="false" />
        <field name="H1_PWR" from="31" to="30" access="RW" resetVal="" desc="UAB Half, power profile" hidden="false">
          <value name="NORMAL" value="0" desc="Normal, for normal analog clock speeds" />
          <value name="ULTRA_LOW" value="1" desc="Ultra low power, only allowed for lower analog clock speeds" />
          <value name="ULTRA_HIGH" value="10" desc="Ultra high performance, for higher analog clock speeds (also ultra high power)" />
          <value name="Reserved" value="11" desc="Reserved, do not use" />
        </field>
      </register>
      <register name="UAB_CAP_CTRL1" address="0x40340304" bitWidth="32" desc="Capacitance controls" hidden="false">
        <field name="CB1_GND" from="5" to="5" access="RW" resetVal="" desc="Ground unused caps of CB1 array&#xA;0: leave unused caps floating&#xA;1: ground unused caps (typical when attentuation Cap is used, e.g. for VDAC use-case)" hidden="false" />
        <field name="CC1_GND" from="6" to="6" access="RW" resetVal="" desc="Ground unused caps of CC1 array&#xA;0: leave unused caps floating&#xA;1: ground unused caps (typical when attentuation Cap is used)" hidden="false" />
        <field name="FRC1_SIGN_BIT" from="28" to="28" access="RW" resetVal="" desc="Forces the sign bit to be 1 in DAC mode.  This is used to achieve &#xA;0 - AGND1 range for unsigned numbers using DAC mode 2" hidden="false" />
        <field name="DAC1_MODE_EN" from="29" to="29" access="RW" resetVal="" desc="1: SIGN1_VAL is dedicated sign bit (FW modbit source tied to 0)                                                           0: SIGN1_VAL can be programmed to be a modbit source" hidden="false" />
        <field name="DAC1_MODE" from="31" to="30" access="RW" resetVal="" desc="DAC mode, this determines the AB Cap Value decoding" hidden="false">
          <value name="UNSIGNED12" value="0" desc="Off or Unsigned 12-bit VDAC, i.e. no AB Cap value decoding.&#xA;SIGN1_VAL can be used as Firmware controlled modbit (e.g. to invert the Voltage for a Sign + Magnitude VDAC)" />
          <value name="VIRT_SIGNED12" value="1" desc="Virtual signed 12-bits' VDAC. AB Cap value decoding: &#xA;add 0x800 to the 12-bit AB Cap Value (=invert MSB), to convert the lowest signed number 0x800 to the lowest unsigned number 0x000. This is the same as the SAR handles 12-bit 'virtual' signed numbers." />
          <value name="SIGNED13" value="10" desc="Signed 13-bit twos complement. AB Cap value decoding: &#xA;for negative values (SIGN1_VAL=1) the AB Cap values are inverted, the 64th B cap unit is enabled and the Voltage should be inverted.&#xA;- Voltage inversion only works if the right clocking waveforms, switch settings and reference voltages are used.&#xA;- Enabling the 64th B cap unit adds 1 so that only a AB Cap value inversion is needed to create a true twos complement.  ." />
          <value name="RESERVED" value="11" desc="" />
        </field>
      </register>
      <register name="UAB_CAP_ABCF1_VAL" address="0x40340308" bitWidth="32" desc="Capacitance values for CA1, CB1, CC1 and CF1" hidden="false">
        <field name="CB1_VAL" from="5" to="0" access="RW" resetVal="" desc="Cap B1 Value, in DAC_MODE 1 and 2 this value is decoded" hidden="false" />
        <field name="CA1_VAL" from="11" to="6" access="RW" resetVal="" desc="Cap A1 Value, in DAC_MODE 1 and 2 this value is decoded" hidden="false" />
        <field name="SIGN1_VAL" from="12" to="12" access="RW" resetVal="" desc="Sign bit Value, when used in DAC_MODE, otherwise Firmware modbit.&#xA;In DAC_MODE the modbit should be used to invert the voltage on the AB Caps for the negative DAC values." hidden="false" />
        <field name="CB1_64" from="13" to="13" access="RW" resetVal="" desc="Enable 64th Cap of CB1 array. In DAC mode the FW setting is overridden by the hardware based on DAC_MODE setting.                                                           1 - Enables the 64th cap. This will also set CB1_val[5:0] to be 6'h3F" hidden="false" />
        <field name="CC1_VAL" from="21" to="16" access="RW" resetVal="" desc="Cap C1 Value" hidden="false" />
        <field name="CF1_VAL" from="28" to="24" access="RW" resetVal="" desc="Cap F1 Value" hidden="false" />
      </register>
      <register name="UAB_CAP_AB1_VAL_NXT" address="0x4034030C" bitWidth="32" desc="Next capacitance values for CA1 and CB1" hidden="false">
        <field name="CB1_VAL" from="5" to="0" access="RW" resetVal="" desc="Cap B1 Value" hidden="false" />
        <field name="CA1_VAL" from="11" to="6" access="RW" resetVal="" desc="Cap A1 Value" hidden="false" />
        <field name="SIGN1_VAL" from="12" to="12" access="RW" resetVal="" desc="Sign bit Value" hidden="false" />
      </register>
      <register name="UAB_CAP_CF1_VAL_NXT" address="0x40340310" bitWidth="32" desc="Next capacitance values for CC1 and CF1" hidden="false">
        <field name="CC1_VAL" from="21" to="16" access="RW" resetVal="" desc="Cap C1 Value" hidden="false" />
        <field name="CF1_VAL" from="28" to="24" access="RW" resetVal="" desc="Cap F1 Value" hidden="false" />
        <field name="CC1_VAL_UPDATE" from="30" to="30" access="RW" resetVal="" desc="1 - Update the CC1 cap value with CAP_CC1_VAL_NXT.CC1_VAL" hidden="false" />
        <field name="CF1_VAL_UPDATE" from="31" to="31" access="RW" resetVal="" desc="1 - Update the CF1 cap value with CAP_CF1_VAL_NXT.CF1_VAL" hidden="false" />
      </register>
      <register name="UAB_STARTUP_DELAY1" address="0x40340320" bitWidth="32" desc="Startup delay" hidden="false">
        <field name="STARTUP_DELAY" from="15" to="0" access="RW" resetVal="" desc="Startup delay to synchronize the UAB-SAR interface. The usage and meaning of this field depends on the value of the ALIGN_MODE bit (below).   A value of 0 disables this function." hidden="false" />
        <field name="ALIGN_MODE" from="16" to="16" access="RW" resetVal="" desc="0 - STARTUP_DELAY is number of clk_hf clocks to delay the UAB clock after a SAR Trigger for UAB-SAR alignment in scheduled mode&#xA;1 - STARTUP_DELAY is number of clk_hf clocks to delay UAB trigger to SAR for UAB-SAR alignment in unscheduled mode" hidden="false" />
      </register>
      <register name="UAB_SUBSAMPLE_CTRL1" address="0x40340324" bitWidth="32" desc="Subsample control" hidden="false">
        <field name="SUBSAMPLE" from="7" to="0" access="RW" resetVal="" desc="Subsampling: suppress Valid output during the first SUBSAMPLE analog clock periods. Only allow Valid output in the last of the SUBSAMPLE+1 analog clock periods.&#xA;A value of 0 will not suppress Valid output." hidden="false" />
        <field name="SUBSAMPLE_INIT" from="15" to="8" access="RW" resetVal="" desc="Initial value of the subsampling down counter. Before this UAB half is running the firmware can write to this field the initial value of the subsample down counter. It is recommend that the following is true for the initial value  SUBSAMPLE_INIT&lt;=SUBSAMPLE, however this is not a requirement. Writing a bigger value can be used to postpone the very first Valid output." hidden="false" />
      </register>
      <register name="UAB_SW_STATIC1" address="0x40340330" bitWidth="32" desc="Static switches for half 1 of the UAB" hidden="false">
        <field name="SW_G10" from="0" to="0" access="RW" resetVal="" desc="VIN10 to OA1.vplus (AG1)" hidden="false" />
        <field name="SW_G11" from="1" to="1" access="RW" resetVal="" desc="VIN11 to OA1.vplus (AG1)" hidden="false" />
        <field name="SW_G12" from="2" to="2" access="RW" resetVal="" desc="VIN12 to OA1.vplus (AG1)" hidden="false" />
        <field name="SW_G13" from="3" to="3" access="RW" resetVal="" desc="VIN13 to OA1.vplus (AG1)" hidden="false" />
        <field name="SW_R1G" from="4" to="4" access="RW" resetVal="" desc="REF1 to OA1.vplus (AG1)" hidden="false" />
        <field name="SW_G1G" from="5" to="5" access="RW" resetVal="" desc="AGND1 to OA1.vplus (AG1)" hidden="false" />
        <field name="SW_R1T" from="8" to="8" access="RW" resetVal="" desc="REF1 to cmp1.vminus (Threshold)" hidden="false" />
        <field name="SW_G1T" from="9" to="9" access="RW" resetVal="" desc="AGND1 to cmp1.vminus (Threshold)" hidden="false" />
        <field name="SW_P1T" from="10" to="10" access="RW" resetVal="" desc="OUT0 to cmp1.vminus (Threshold)" hidden="false" />
        <field name="EARLY_Q1S" from="12" to="12" access="RW" resetVal="" desc="OUT1 to Sum1 switch timing: 0=Regular, 1=Early" hidden="false" />
        <field name="EARLY_Q1O" from="13" to="13" access="RW" resetVal="" desc="OUT1 to VOUT1 switch timing: 0=Regular, 1=Early" hidden="false" />
        <field name="RMB1_BITS" from="19" to="16" access="RW" resetVal="" desc="Risk mitigation bits (To be defined if they are used)" hidden="false" />
        <field name="STRB_RST1_SEL" from="28" to="24" access="RW" resetVal="" desc="Select source either for VDAC strobe or analog-reset to discharge all Caps (Delsig Modulator use-case)&#xA;0 = Decimator0 half 0 analog-reset output&#xA;1 = Decimator0 half 1 analog-reset output&#xA;2 = Decimator1 half 0 analog-reset output&#xA;3 = Decimator1 half 1 analog-reset output&#xA;4 = Decimator2 half 0 analog-reset output&#xA;5 = Decimator2 half 1 analog-reset output&#xA;6 = Decimator3 half 0 analog-reset output&#xA;7 = Decimator3 half 1 analog-reset output&#xA;8-31 = generic trigger input 0-23&#xA;For PASS4B  only values 0-1 and 8-13 are legal." hidden="false" />
        <field name="STRB_RST1_EN" from="29" to="29" access="RW" resetVal="" desc="Enable VDAC strobe or UAB analog-reset:&#xA;0: Use selected source as VDAC strobe for next CA1 and CB1 values&#xA;1: Use selected source as Analog-reset (discharge all Caps)" hidden="false" />
      </register>
      <register name="UAB_SW_MODBIT_SRC1" address="0x40340334" bitWidth="32" desc="Select source of Modbit for A,B and C branches of half 1" hidden="false">
        <field name="MODBIT0_SRC1_SEL" from="4" to="0" access="RW" resetVal="" desc="Select source of modbit for A &amp; B branches&#xA;0=UAB0 half 0 comparator output&#xA;1=UAB0 half 1 comparator output&#xA;2=UAB1 half 0 comparator output&#xA;3=UAB1 half 1 comparator output&#xA;4=UAB2 half 0 comparator output&#xA;5=UAB2 half 1 comparator output&#xA;6=UAB3 half 0 comparator output&#xA;7=UAB3 half 1 comparator output&#xA;8-30 = generic trigger inputs 0-22&#xA;31=SIGN1_VAL, also used as Firmware modbit.&#xA;For PASS4B  only values 0-1 and 8-13 and 31 are legal." hidden="false" />
        <field name="MODBIT1_SRC1_SEL" from="12" to="8" access="RW" resetVal="" desc="Select source of modbit for C branch&#xA;0=UAB0 half 0 comparator output&#xA;1=UAB0 half 1 comparator output&#xA;2=UAB1 half 0 comparator output&#xA;3=UAB1 half 1 comparator output&#xA;4=UAB2 half 0 comparator output&#xA;5=UAB2 half 1 comparator output&#xA;6=UAB3 half 0 comparator output&#xA;7=UAB3 half 1 comparator output&#xA;8-30 = generic trigger inputs 0-22&#xA;31=SIGN1_VAL, also used as Firmware modbit.&#xA;For PASS4B  only values 0-1 and 8-11 and 31 are legal." hidden="false" />
      </register>
      <register name="UAB_SW_CA1_IN0" address="0x40340340" bitWidth="32" desc="Cap A1 input switches set 0" hidden="false">
        <field name="SW_A10_CMP" from="3" to="0" access="RW" resetVal="" desc="VIN10 to Cap A1 input, allows for modbit control" hidden="false" />
        <field name="SW_A11_CMP" from="7" to="4" access="RW" resetVal="" desc="VIN11 to Cap A1 input, allows for modbit control" hidden="false" />
        <field name="SW_A12_CMP" from="11" to="8" access="RW" resetVal="" desc="VIN12 to Cap A1 input, allows for modbit control" hidden="false" />
        <field name="SW_A13_CMP" from="15" to="12" access="RW" resetVal="" desc="VIN13 to Cap A1 input, allows for modbit control" hidden="false" />
        <field name="SW_A1P" from="19" to="16" access="RW" resetVal="" desc="OUT1 to Cap A1 input" hidden="false" />
        <field name="SW_A1Q" from="23" to="20" access="RW" resetVal="" desc="OUT0 to Cap A1 input" hidden="false" />
      </register>
      <register name="UAB_SW_CA1_IN1" address="0x40340344" bitWidth="32" desc="Cap A1 input switches set 1" hidden="false">
        <field name="SW_A1R_CMP" from="7" to="4" access="RW" resetVal="" desc="REF1 to Cap A1 input, allows for modbit control" hidden="false" />
        <field name="SW_A1G_CMP" from="11" to="8" access="RW" resetVal="" desc="AGND1 to Cap A1 input, allows for modbit control" hidden="false" />
        <field name="SW_A1V_CMP" from="15" to="12" access="RW" resetVal="" desc="VSS to Cap A1 input, allows for modbit control" hidden="false" />
      </register>
      <register name="UAB_SW_CA1_TOP" address="0x40340348" bitWidth="32" desc="Cap A1 top plate switches" hidden="false">
        <field name="SW_R1A_CMP" from="3" to="0" access="RW" resetVal="" desc="Cap A1 top plate to REF1, allows for modbit control" hidden="false" />
        <field name="SW_G1A_CMP" from="7" to="4" access="RW" resetVal="" desc="Cap A1 top plate to AGND1, allows for modbit control" hidden="false" />
        <field name="SW_V1A_CMP" from="11" to="8" access="RW" resetVal="" desc="Cap A1 top plate to VSS, allows for modbit control" hidden="false" />
        <field name="SW_S1A" from="19" to="16" access="RW" resetVal="" desc="Cap A1 top plate to SUM1" hidden="false" />
      </register>
      <register name="UAB_SW_CB1_IN0" address="0x40340350" bitWidth="32" desc="Cap B1 input switches set 0" hidden="false">
        <field name="SW_B10_CMP" from="3" to="0" access="RW" resetVal="" desc="VIN10 to Cap B1 input, allows for modbit control" hidden="false" />
        <field name="SW_B11_CMP" from="7" to="4" access="RW" resetVal="" desc="VIN11 to Cap B1 input, allows for modbit control" hidden="false" />
        <field name="SW_B12_CMP" from="11" to="8" access="RW" resetVal="" desc="VIN12 to Cap B1 input, allows for modbit control" hidden="false" />
        <field name="SW_B13_CMP" from="15" to="12" access="RW" resetVal="" desc="VIN13 to Cap B1 input, allows for modbit control" hidden="false" />
        <field name="SW_B1P" from="19" to="16" access="RW" resetVal="" desc="OUT1 to Cap B1 input" hidden="false" />
        <field name="SW_B1Q" from="23" to="20" access="RW" resetVal="" desc="OUT0 to Cap B1 input" hidden="false" />
      </register>
      <register name="UAB_SW_CB1_IN1" address="0x40340354" bitWidth="32" desc="Cap B1 input switches set 1" hidden="false">
        <field name="SW_B1R_CMP" from="7" to="4" access="RW" resetVal="" desc="REF1 to Cap B1 input, allows for modbit control" hidden="false" />
        <field name="SW_B1G_CMP" from="11" to="8" access="RW" resetVal="" desc="AGND1 to Cap B1 input, allows for modbit control" hidden="false" />
        <field name="SW_B1V_CMP" from="15" to="12" access="RW" resetVal="" desc="VSS to Cap B1 input, allows for modbit control" hidden="false" />
      </register>
      <register name="UAB_SW_CB1_TOP" address="0x40340358" bitWidth="32" desc="Cap A1 top plate switches" hidden="false">
        <field name="SW_R1B_CMP" from="3" to="0" access="RW" resetVal="" desc="Cap B1 top plate to REF1, allows for modbit control" hidden="false" />
        <field name="SW_G1B_CMP" from="7" to="4" access="RW" resetVal="" desc="Cap B1 top plate to AGND1, allows for modbit control" hidden="false" />
        <field name="SW_V1B_CMP" from="11" to="8" access="RW" resetVal="" desc="Cap B1 top plate to VSS, allows for modbit control" hidden="false" />
        <field name="SW_T1B" from="15" to="12" access="RW" resetVal="" desc="Cap B1 top plate Trim/Attenuation bypass" hidden="false" />
        <field name="SW_S1B" from="19" to="16" access="RW" resetVal="" desc="Cap B1 top plate to SUM1" hidden="false" />
      </register>
      <register name="UAB_SW_CC1_IN0" address="0x40340360" bitWidth="32" desc="Cap C1 input switches set 0" hidden="false">
        <field name="SW_C10_CMP" from="3" to="0" access="RW" resetVal="" desc="VIN10 to Cap C1 input, allows for modbit control" hidden="false" />
        <field name="SW_C11_CMP" from="7" to="4" access="RW" resetVal="" desc="VIN11 to Cap C1 input, allows for modbit control" hidden="false" />
        <field name="SW_C12_CMP" from="11" to="8" access="RW" resetVal="" desc="VIN12 to Cap C1 input, allows for modbit control" hidden="false" />
        <field name="SW_C13_CMP" from="15" to="12" access="RW" resetVal="" desc="VIN13 to Cap C1 input, allows for modbit control" hidden="false" />
        <field name="SW_C1P" from="19" to="16" access="RW" resetVal="" desc="OUT1 to Cap C1 input" hidden="false" />
        <field name="SW_C1Q" from="23" to="20" access="RW" resetVal="" desc="OUT0 to Cap C1 input" hidden="false" />
      </register>
      <register name="UAB_SW_CC1_IN1" address="0x40340364" bitWidth="32" desc="Cap C1 input switches set 1" hidden="false">
        <field name="SW_C1R_CMP" from="7" to="4" access="RW" resetVal="" desc="REF1 to Cap C1 input, allows for modbit control" hidden="false" />
        <field name="SW_C1G_CMP" from="11" to="8" access="RW" resetVal="" desc="AGND1 to Cap C1 input, allows for modbit control" hidden="false" />
        <field name="SW_C1V_CMP" from="15" to="12" access="RW" resetVal="" desc="VSS to Cap C1 input, allows for modbit control" hidden="false" />
      </register>
      <register name="UAB_SW_CC1_TOP" address="0x40340368" bitWidth="32" desc="Cap A1 top plate switches" hidden="false">
        <field name="SW_R1C_CMP" from="3" to="0" access="RW" resetVal="" desc="Cap C1 top plate to REF1, allows for modbit control" hidden="false" />
        <field name="SW_G1C_CMP" from="7" to="4" access="RW" resetVal="" desc="Cap C1 top plate to AGND1, allows for modbit control" hidden="false" />
        <field name="SW_V1C_CMP" from="11" to="8" access="RW" resetVal="" desc="Cap C1 top plate to VSS, allows for modbit control" hidden="false" />
        <field name="SW_T1C" from="15" to="12" access="RW" resetVal="" desc="Cap C1 top plate Trim/Attenuation bypass" hidden="false" />
        <field name="SW_S1C" from="19" to="16" access="RW" resetVal="" desc="Cap C1 top plate to SUM1" hidden="false" />
        <field name="SW_S01" from="23" to="20" access="RW" resetVal="" desc="Cap C1 top plate to SUM0" hidden="false" />
      </register>
      <register name="UAB_SW_CF1_BOT" address="0x4034036C" bitWidth="32" desc="Cap F1 bottom plate and output switches" hidden="false">
        <field name="SW_G1F" from="3" to="0" access="RW" resetVal="" desc="Cap F1 bottom plate to AGND1" hidden="false" />
        <field name="SW_Q1F" from="7" to="4" access="RW" resetVal="" desc="Cap F1 bottom plate to OUT1" hidden="false" />
        <field name="SW_Q1S" from="11" to="8" access="RW" resetVal="" desc="Cap F bypass, OUT1 to SUM1" hidden="false" />
        <field name="SW_Q1O" from="15" to="12" access="RW" resetVal="" desc="OUT1 to VOUT1" hidden="false" />
      </register>
      <register name="UAB_SW_OTHER1" address="0x40340370" bitWidth="32" desc="Other clocked controls" hidden="false">
        <field name="CMP1_FF" from="3" to="0" access="RW" resetVal="" desc="Clock for Flip-Flop after Comparator 1" hidden="false" />
        <field name="VALID1" from="7" to="4" access="RW" resetVal="" desc="Valid1, output flag to indicated that VOUT1 is valid. The Valid output can be suppressed due to sub-sampling. Note that when sub-sampling is used this clocking waveform is used to decrement the counter (decrement is aligned with the positive edge of this clocking waveform)." hidden="false" />
        <field name="TRIG1_OUT" from="11" to="8" access="RW" resetVal="" desc="Trigger output (for other UABs or SAR)" hidden="false" />
        <field name="STROBE_SW1" from="27" to="24" access="RW" resetVal="" desc="Strobe for dsi_sw_ctrl (modbit) update, dsi_sw_ctrl updates in sync with posedge of this wave. To disable set to 0. To enable update anytime use 15." hidden="false" />
        <field name="STROBE_RST1" from="31" to="28" access="RW" resetVal="" desc="Use the positive edge of the selected clocking waveform to synchronize: &#xA; STRB_RST0_EN=0: Capacitor Value update (Capacitor Strobe)&#xA; STRB_RST0_EN=1: UAB analog-reset update&#xA;Set to 0 to disable both functions. Result undefined for value 15." hidden="false" />
      </register>
      <register name="UAB_SW_BOOST_CTRL1" address="0x40340374" bitWidth="32" desc="Bootstrap clock control" hidden="false">
        <field name="CA1_BOOST" from="3" to="0" access="RW" resetVal="" desc="Clock for boot strap master in A branch" hidden="false" />
        <field name="CB1_BOOST" from="7" to="4" access="RW" resetVal="" desc="Clock for boot strap master in B branch" hidden="false" />
        <field name="CC1_BOOST" from="11" to="8" access="RW" resetVal="" desc="Clock for boot strap master in C branch" hidden="false" />
        <field name="CF1_BOOST" from="15" to="12" access="RW" resetVal="" desc="Clock for boot strap master in F branch" hidden="false" />
        <field name="SUM1_BOOST" from="19" to="16" access="RW" resetVal="" desc="Clock for boot strap master in Summing node branch" hidden="false" />
        <field name="PUMP1_WAVE" from="23" to="20" access="RW" resetVal="" desc="Clock for pump in half1" hidden="false" />
      </register>
      <register name="UAB_SRAM1_CTRL" address="0x40340378" bitWidth="32" desc="SRAM programmed size" hidden="false">
        <field name="LAST_STEP" from="3" to="0" access="RW" resetVal="" desc="Last step of wave programmed in the SRAM" hidden="false" />
        <field name="TRIG_SEL1" from="28" to="24" access="RW" resetVal="" desc="Trigger select&#xA;0=UAB0 half 0 trigger output&#xA;1=UAB0 half 1 trigger output&#xA;2=UAB1 half 0 trigger output&#xA;3=UAB1 half 1 trigger output&#xA;4=UAB2 half 0 trigger output&#xA;5=UAB2 half 1 trigger output&#xA;6=UAB3 half 0 trigger output&#xA;7=UAB3 half 1 trigger output&#xA;8-30 = generic trigger inputs 0-22&#xA;31=SAR trigger output&#xA;For PASS4B  only values 0-1 and 8-13 and 31 are legal." hidden="false" />
        <field name="TRIGGER_EN" from="29" to="29" access="RW" resetVal="" desc="Enable input trigger:&#xA;0: Ignore triggers, start running immediately after setting RUN bit&#xA;1: After RUN bit is set wait for a positive edge on the selected trigger input" hidden="false" />
        <field name="RUN" from="31" to="31" access="RW" resetVal="" desc="Set to start executing the waveform (may need to wait for a trigger). Clear to stop this UAB half. When RUN=0 all dynamic switches are forced open." hidden="false" />
      </register>
      <register name="UAB_STAT1" address="0x4034037C" bitWidth="32" desc="Status Current SRAM counter and comparator" hidden="false">
        <field name="CURR_STEP" from="3" to="0" access="R" resetVal="" desc="Current step executed from the SRAM" hidden="false" />
        <field name="COMP" from="4" to="4" access="R" resetVal="" desc="Current comparator status" hidden="false" />
        <field name="CURR_SUBSAMPLE" from="31" to="24" access="R" resetVal="" desc="Current value of the subsampling down counter. The Valid is suppressed when SUBSAMPLE_CUR!=0." hidden="false" />
      </register>
      <register name="UAB_SRAM10" address="0x40340380" bitWidth="32" desc="Waveform SRAM for half 1 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM11" address="0x40340384" bitWidth="32" desc="Waveform SRAM for half 1 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM12" address="0x40340388" bitWidth="32" desc="Waveform SRAM for half 1 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM13" address="0x4034038C" bitWidth="32" desc="Waveform SRAM for half 1 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM14" address="0x40340390" bitWidth="32" desc="Waveform SRAM for half 1 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM15" address="0x40340394" bitWidth="32" desc="Waveform SRAM for half 1 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM16" address="0x40340398" bitWidth="32" desc="Waveform SRAM for half 1 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM17" address="0x4034039C" bitWidth="32" desc="Waveform SRAM for half 1 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM18" address="0x403403A0" bitWidth="32" desc="Waveform SRAM for half 1 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM19" address="0x403403A4" bitWidth="32" desc="Waveform SRAM for half 1 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM110" address="0x403403A8" bitWidth="32" desc="Waveform SRAM for half 1 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM111" address="0x403403AC" bitWidth="32" desc="Waveform SRAM for half 1 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM112" address="0x403403B0" bitWidth="32" desc="Waveform SRAM for half 1 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM113" address="0x403403B4" bitWidth="32" desc="Waveform SRAM for half 1 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM114" address="0x403403B8" bitWidth="32" desc="Waveform SRAM for half 1 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_SRAM115" address="0x403403BC" bitWidth="32" desc="Waveform SRAM for half 1 of the UAB" hidden="false">
        <field name="WAVE_STEP" from="15" to="0" access="RW" resetVal="" desc="one step of the clocking waveform sequence" hidden="false" />
      </register>
      <register name="UAB_DECM_CTRL" address="0x40340400" bitWidth="32" desc="Global decimator control" hidden="false">
        <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="- 0: Decimator disabled (independent of UAB)&#xA;- 1: Decimator enabled (independent of UAB)" hidden="false" />
      </register>
      <register name="UAB_DC0_CTRL" address="0x40340404" bitWidth="32" desc="decimator0 control" hidden="false">
        <field name="DC0_START" from="0" to="0" access="RW" resetVal="" desc="Start decimator, in incremental mode, this bit is cleared by HW when done. If DSI trigger enable is set then only start after a DSI trigger." hidden="false" />
        <field name="DC0_MODE" from="1" to="1" access="RW" resetVal="" desc="Operation mode&#xA;0: Incremental (one-shot) operation&#xA;1: Continuous operation" hidden="false" />
        <field name="DC0_SEL" from="5" to="4" access="RW" resetVal="" desc="Source select" hidden="false">
          <value name="UAB_H0" value="0" desc="Comparator output from Half0 of this UAB" />
          <value name="UAB_H1" value="1" desc="Comparator output from Half1 of this UAB" />
          <value name="DSI0" value="10" desc="" />
          <value name="DSI1" value="11" desc="" />
        </field>
        <field name="DC0_TYPE" from="7" to="6" access="RW" resetVal="" desc="decimator type (filter order)" hidden="false">
          <value name="SINC1" value="0" desc="first order" />
          <value name="SINC2" value="1" desc="second order" />
          <value name="SINC3" value="10" desc="third order, this uses half of decimator1, therefore cannot be combined with dc1_mode SINC2" />
          <value name="reserved" value="11" desc="reserved value, do not use" />
        </field>
        <field name="DC0_SHIFT" from="12" to="8" access="RW" resetVal="" desc="shift the result right by specified amount, legal range 0..16" hidden="false" />
        <field name="DC0_RATIO" from="24" to="16" access="RW" resetVal="" desc="decimation ratio = DC0_RATIO+1, range 1..512" hidden="false" />
      </register>
      <register name="UAB_DC0_TRIG" address="0x40340408" bitWidth="32" desc="decimator0 trigger control" hidden="false">
        <field name="DC0_TRIG_SEL" from="28" to="24" access="RW" resetVal="" desc="Trigger select&#xA;0=UAB0 half 0 trigger output&#xA;1=UAB0 half 1 trigger output&#xA;2=UAB1 half 0 trigger output&#xA;3=UAB1 half 1 trigger output&#xA;4=UAB2 half 0 trigger output&#xA;5=UAB2 half 1 trigger output&#xA;6=UAB3 half 0 trigger output&#xA;7=UAB3 half 1 trigger output&#xA;8-30 = generic trigger inputs 0-22&#xA;31=SAR trigger output&#xA;For PASS4B  only values 0-1 and 8-11 and 31 are legal." hidden="false" />
        <field name="DC0_DSI_TRIG_EN" from="29" to="29" access="RW" resetVal="" desc="Decimator DSI trigger input Enable&#xA;0: Ignore decimator DSI trigger input&#xA;1: Wait for positive edge on selected DSI trigger input" hidden="false" />
      </register>
      <register name="UAB_DC0_OVR" address="0x4034040C" bitWidth="32" desc="decimator 0 overflow control" hidden="false">
        <field name="DC0_OVR_CORR_LOC" from="4" to="0" access="RW" resetVal="" desc="Bit location for overflow correction. This should be set to FILTER_ORDER*log2(DC0_RATIO)" hidden="false" />
      </register>
      <register name="UAB_DC0_A0" address="0x40340410" bitWidth="32" desc="decimator0 accumulator 0" hidden="false">
        <field name="A0" from="31" to="0" access="R" resetVal="" desc="24-bit sign extended accumulator0 status" hidden="false" />
      </register>
      <register name="UAB_DC0_A1" address="0x40340414" bitWidth="32" desc="decimator0 accumulator 1" hidden="false">
        <field name="A1" from="31" to="0" access="R" resetVal="" desc="24-bit sign extended accumulator1 status" hidden="false" />
      </register>
      <register name="UAB_DC0_DEC_CNT" address="0x40340418" bitWidth="32" desc="decimator0 decimation counter" hidden="false">
        <field name="INT_CNT" from="8" to="0" access="R" resetVal="" desc="integration/decimation down counter" hidden="false" />
        <field name="DIFF_CNT" from="17" to="16" access="R" resetVal="" desc="differentiation down counter" hidden="false" />
      </register>
      <register name="UAB_DC0_TMP" address="0x4034041C" bitWidth="32" desc="decimator0 temporary value for differentiator" hidden="false">
        <field name="TMP" from="31" to="0" access="R" resetVal="" desc="24-bit sign extended differentiator temporary value status" hidden="false" />
      </register>
      <register name="UAB_DC0_D0" address="0x40340420" bitWidth="32" desc="decimator0 differentiator 0" hidden="false">
        <field name="D0" from="31" to="0" access="R" resetVal="" desc="24-bit sign extended differentiator 0 status" hidden="false" />
      </register>
      <register name="UAB_DC0_D1" address="0x40340424" bitWidth="32" desc="decimator0 differentiator 1" hidden="false">
        <field name="D1" from="31" to="0" access="R" resetVal="" desc="24-bit sign extended differentiator 1 status" hidden="false" />
      </register>
      <register name="UAB_DC0_RES" address="0x40340428" bitWidth="32" desc="decimator0 result" hidden="false">
        <field name="RES" from="31" to="0" access="R" resetVal="" desc="24-bit sign extended result" hidden="false" />
      </register>
      <register name="UAB_DC1_CTRL" address="0x40340434" bitWidth="32" desc="decimator1 control" hidden="false">
        <field name="DC1_START" from="0" to="0" access="RW" resetVal="" desc="Start decimator, in incremental mode, this bit is cleared by HW when done. If DSI trigger enable is set then only start after a DSI trigger." hidden="false" />
        <field name="DC1_MODE" from="1" to="1" access="RW" resetVal="" desc="Operation mode&#xA;0: Incremental (one-shot) operation&#xA;1: Continuous operation" hidden="false" />
        <field name="DC1_SEL" from="5" to="4" access="RW" resetVal="" desc="Source select" hidden="false">
          <value name="UAB_H0" value="0" desc="Comparator output from Half0 of this UAB" />
          <value name="UAB_H1" value="1" desc="Comparator output from Half1 of this UAB" />
          <value name="DSI0" value="10" desc="" />
          <value name="DSI1" value="11" desc="" />
        </field>
        <field name="DC1_TYPE" from="6" to="6" access="RW" resetVal="" desc="decimator type (filter order)" hidden="false">
          <value name="SINC1" value="0" desc="first order" />
          <value name="SINC2" value="1" desc="second order" />
        </field>
        <field name="DC01_CHAIN" from="7" to="7" access="RW" resetVal="" desc="Chain decimator0 and decimator1" hidden="false" />
        <field name="DC1_SHIFT" from="12" to="8" access="RW" resetVal="" desc="shift the result right by specified amount, legal range 0..16" hidden="false" />
        <field name="DC1_RATIO" from="24" to="16" access="RW" resetVal="" desc="decimation ratio = DC1_RATIO+1, range 1..512" hidden="false" />
      </register>
      <register name="UAB_DC1_TRIG" address="0x40340438" bitWidth="32" desc="decimator1 trigger control" hidden="false">
        <field name="DC1_TRIG_SEL" from="28" to="24" access="RW" resetVal="" desc="Trigger select&#xA;0=UAB0 half 0 trigger output&#xA;1=UAB0 half 1 trigger output&#xA;2=UAB1 half 0 trigger output&#xA;3=UAB1 half 1 trigger output&#xA;4=UAB2 half 0 trigger output&#xA;5=UAB2 half 1 trigger output&#xA;6=UAB3 half 0 trigger output&#xA;7=UAB3 half 1 trigger output&#xA;8-30 = generic trigger inputs 0-22&#xA;31=SAR trigger output&#xA;For PASS4B  only values 0-1 and 8-11 and 31 are legal." hidden="false" />
        <field name="DC1_DSI_TRIG_EN" from="29" to="29" access="RW" resetVal="" desc="Decimator DSI trigger input Enable&#xA;0: Ignore decimator DSI trigger input&#xA;1: Wait for positive edge on selected DSI trigger input" hidden="false" />
      </register>
      <register name="UAB_DC1_OVR" address="0x4034043C" bitWidth="32" desc="decimator 1 overflow control" hidden="false">
        <field name="DC1_OVR_CORR_LOC" from="4" to="0" access="RW" resetVal="" desc="Bit location for overflow correction. This should be set to FILTER_ORDER*log2(DC1_RATIO)" hidden="false" />
      </register>
      <register name="UAB_DC1_A0" address="0x40340440" bitWidth="32" desc="decimator1 accumulator 0" hidden="false">
        <field name="A0" from="31" to="0" access="R" resetVal="" desc="27-bit sign extended accumulator0 status" hidden="false" />
      </register>
      <register name="UAB_DC1_A1" address="0x40340444" bitWidth="32" desc="decimator1 accumulator 1" hidden="false">
        <field name="A1" from="31" to="0" access="R" resetVal="" desc="27-bit sign extended accumulator1 status" hidden="false" />
      </register>
      <register name="UAB_DC1_DEC_CNT" address="0x40340448" bitWidth="32" desc="decimator1 decimation counter" hidden="false">
        <field name="INT_CNT" from="8" to="0" access="R" resetVal="" desc="integration/decimation down counter" hidden="false" />
        <field name="DIFF_CNT" from="17" to="16" access="R" resetVal="" desc="differentiation down counter" hidden="false" />
      </register>
      <register name="UAB_DC1_TMP" address="0x4034044C" bitWidth="32" desc="decimator1 temporary value for differentiator" hidden="false">
        <field name="TMP" from="31" to="0" access="R" resetVal="" desc="27-bit sign extended differentiator temporary value status" hidden="false" />
      </register>
      <register name="UAB_DC1_D0" address="0x40340450" bitWidth="32" desc="decimator1 differentiator 0" hidden="false">
        <field name="D0" from="31" to="0" access="R" resetVal="" desc="27-bit sign extended differentiator 0 status" hidden="false" />
      </register>
      <register name="UAB_DC1_D1" address="0x40340454" bitWidth="32" desc="decimator1 differentiator 1" hidden="false">
        <field name="D1" from="31" to="0" access="R" resetVal="" desc="27-bit sign extended differentiator 1 status" hidden="false" />
      </register>
      <register name="UAB_DC1_RES" address="0x40340458" bitWidth="32" desc="decimator1 result" hidden="false">
        <field name="RES" from="31" to="0" access="R" resetVal="" desc="27-bit sign extended result" hidden="false" />
      </register>
      <register name="UAB_CAP_TRIM0" address="0x40340F00" bitWidth="32" desc="Trim for attenuation cap half0" hidden="false">
        <field name="CBTC0_VAL" from="4" to="0" access="RW" resetVal="" desc="Cap B Trim 0 Value&#xA;Trim attenuation cap in branch B for DAC correctness" hidden="false" />
        <field name="CCTC0_VAL" from="10" to="8" access="RW" resetVal="" desc="Cap C Trim 0 Value&#xA;Do not measure value, instead use same value as for CBTC0_VAL" hidden="false" />
      </register>
      <register name="UAB_CAP_TRIM1" address="0x40340F04" bitWidth="32" desc="Trim for attenuation cap half1" hidden="false">
        <field name="CBTC1_VAL" from="4" to="0" access="RW" resetVal="" desc="Cap B Trim 1 Value&#xA;Trim attenuation cap in branch B for DAC correctness" hidden="false" />
        <field name="CCTC1_VAL" from="10" to="8" access="RW" resetVal="" desc="Cap C Trim 1 Value&#xA;Do not measure value, instead use same value as for CBTC1_VAL" hidden="false" />
      </register>
      <register name="UAB_OA_TRIM0" address="0x40340F08" bitWidth="32" desc="Trim for opamp and buffers half0" hidden="false">
        <field name="OA0_OFFSET" from="3" to="0" access="RW" resetVal="" desc="Opamp offset trim" hidden="false" />
        <field name="REF0_OFFSET" from="12" to="8" access="RW" resetVal="" desc="Reference buffer offset trim" hidden="false" />
        <field name="AGND0_OFFSET" from="20" to="16" access="RW" resetVal="" desc="Agnd buffer offset trim" hidden="false" />
      </register>
      <register name="UAB_OA_TRIM1" address="0x40340F0C" bitWidth="32" desc="Trim for opamp and buffers half1" hidden="false">
        <field name="OA1_OFFSET" from="3" to="0" access="RW" resetVal="" desc="Opamp offset trim" hidden="false" />
        <field name="REF1_OFFSET" from="12" to="8" access="RW" resetVal="" desc="Reference buffer offset trim" hidden="false" />
        <field name="AGND1_OFFSET" from="20" to="16" access="RW" resetVal="" desc="Agnd buffer offset trim" hidden="false" />
      </register>
    </block>
    <block name="VDAC_2_OUTBUFFER" BASE="0x0" SIZE="0x0" desc="OpAmp" visible="true" hidden="false">
      <block name="cy_analog_noconnect_1" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
      <block name="cy_analog_virtualmux_1" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
      <block name="cy_analog_virtualmux_2" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
      <block name="cy_psoc4_abuf" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
      <register name="CTB_CTRL" address="0x40310000" bitWidth="32" desc="Global CTB IP and power control" hidden="false">
        <field name="DEEPSLEEP_ON" from="30" to="30" access="RW" resetVal="" desc="Selects component behavior in DeepSleep power mode" hidden="false">
          <value name="DISABLE" value="0" desc="CTB IP disabled off during DeepSleep power mode" />
          <value name="ENABLE" value="1" desc="CTB IP remains enabled during DeepSleep power mode (if ENABLED=1)" />
        </field>
        <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Selects component behavior in DeepSleep power mode" hidden="false">
          <value name="DISABLE" value="0" desc="CTB IP disabled (put analog in power down, open all switches)" />
          <value name="ENABLE" value="1" desc="CTB IP enabledCTB IP enabled" />
        </field>
      </register>
      <register name="OA_RES_CTRL" address="0x40310004" bitWidth="32" desc="Opamp and resistor control" hidden="false">
        <field name="OA_PWR_MODE" from="1" to="0" access="RW" resetVal="" desc="Selects power for opamp" hidden="false">
          <value name="OFF" value="00" desc="Off" />
          <value name="LOW" value="01" desc="Low power" />
          <value name="MED" value="10" desc="Medium power" />
          <value name="HIGH" value="11" desc="High power" />
        </field>
        <field name="OA0_DRIVE_STR_SEL" from="2" to="2" access="RW" resetVal="" desc="Opamp output strenght select" hidden="false">
          <value name="1x" value="0" desc="Internal only" />
          <value name="10x" value="1" desc="Output to pin" />
        </field>
        <field name="OA_PUMP_EN" from="11" to="11" access="RW" resetVal="" desc="Selects pump" hidden="false">
          <value name="DISABLE" value="0" desc="Pump disabled" />
          <value name="ENABLE" value="1" desc="Pump enabled" />
        </field>
      </register>
      <register name="OA_COMP_TRIM" address="0x40310F08" bitWidth="32" desc="Opamp Compenation Capacitor Trim" hidden="false">
        <field name="OA_COMP_TRIM" from="1" to="0" access="RW" resetVal="" desc="Opamp Compenation Capacitor Trim" hidden="false">
          <value name="HIGH_SPEED" value="01" desc="High Speed" />
          <value name="BALANCED" value="10" desc="Balanced" />
          <value name="HIGH_STABILITY" value="11" desc="High Stability" />
        </field>
      </register>
    </block>
    <block name="cy_constant_2" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="cy_constant_3" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="or_1" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="ZeroTerminal_1" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="cy_analog_noconnect_3" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="vRef_1" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="VirtualMux_1" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="cy_analog_virtualmux_3" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="cy_analog_virtualmux_4" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="cy_analog_noconnect_4" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="cy_analog_noconnect_5" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="cy_analog_virtualmux_5" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="internalClock" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="cy_analog_noconnect_1" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="cy_analog_noconnect_2" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
  </block>
</blockRegMap>