ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC_1.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ADC_1_IsChannelSigned,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	ADC_1_IsChannelSigned, %function
  24              	ADC_1_IsChannelSigned:
  25              	.LFB12:
  26              		.file 1 "Generated_Source\\PSoC4\\ADC_1.c"
   1:Generated_Source\PSoC4/ADC_1.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/ADC_1.c **** * \file     ADC_1.c
   3:Generated_Source\PSoC4/ADC_1.c **** * \version  2.0
   4:Generated_Source\PSoC4/ADC_1.c **** *
   5:Generated_Source\PSoC4/ADC_1.c **** * \brief
   6:Generated_Source\PSoC4/ADC_1.c **** * Provides the source code to the API for the ADC_1 Component.
   7:Generated_Source\PSoC4/ADC_1.c **** *
   8:Generated_Source\PSoC4/ADC_1.c **** ********************************************************************************
   9:Generated_Source\PSoC4/ADC_1.c **** * \copyright
  10:Generated_Source\PSoC4/ADC_1.c **** * (c) 2015-2016, Cypress Semiconductor Corporation. All rights reserved.
  11:Generated_Source\PSoC4/ADC_1.c **** * This software, including source code, documentation and related
  12:Generated_Source\PSoC4/ADC_1.c **** * materials ("Software"), is owned by Cypress Semiconductor
  13:Generated_Source\PSoC4/ADC_1.c **** * Corporation ("Cypress") and is protected by and subject to worldwide
  14:Generated_Source\PSoC4/ADC_1.c **** * patent protection (United States and foreign), United States copyright
  15:Generated_Source\PSoC4/ADC_1.c **** * laws and international treaty provisions. Therefore, you may use this
  16:Generated_Source\PSoC4/ADC_1.c **** * Software only as provided in the license agreement accompanying the
  17:Generated_Source\PSoC4/ADC_1.c **** * software package from which you obtained this Software ("EULA").
  18:Generated_Source\PSoC4/ADC_1.c **** * If no EULA applies, Cypress hereby grants you a personal, nonexclusive,
  19:Generated_Source\PSoC4/ADC_1.c **** * non-transferable license to copy, modify, and compile the
  20:Generated_Source\PSoC4/ADC_1.c **** * Software source code solely for use in connection with Cypress's
  21:Generated_Source\PSoC4/ADC_1.c **** * integrated circuit products. Any reproduction, modification, translation,
  22:Generated_Source\PSoC4/ADC_1.c **** * compilation, or representation of this Software except as specified
  23:Generated_Source\PSoC4/ADC_1.c **** * above is prohibited without the express written permission of Cypress.
  24:Generated_Source\PSoC4/ADC_1.c **** * Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO
  25:Generated_Source\PSoC4/ADC_1.c **** * WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING,
  26:Generated_Source\PSoC4/ADC_1.c **** * BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED
  27:Generated_Source\PSoC4/ADC_1.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
  28:Generated_Source\PSoC4/ADC_1.c **** * PARTICULAR PURPOSE. Cypress reserves the right to make
  29:Generated_Source\PSoC4/ADC_1.c **** * changes to the Software without notice. Cypress does not assume any
  30:Generated_Source\PSoC4/ADC_1.c **** * liability arising out of the application or use of the Software or any
  31:Generated_Source\PSoC4/ADC_1.c **** * product or circuit described in the Software. Cypress does not
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 2


  32:Generated_Source\PSoC4/ADC_1.c **** * authorize its products for use in any products where a malfunction or
  33:Generated_Source\PSoC4/ADC_1.c **** * failure of the Cypress product may reasonably be expected to result in
  34:Generated_Source\PSoC4/ADC_1.c **** * significant property damage, injury or death ("High Risk Product"). By
  35:Generated_Source\PSoC4/ADC_1.c **** * including Cypress's product in a High Risk Product, the manufacturer
  36:Generated_Source\PSoC4/ADC_1.c **** * of such system or application assumes all risk of such use and in doing
  37:Generated_Source\PSoC4/ADC_1.c **** * so agrees to indemnify Cypress against all liability.
  38:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/ADC_1.c **** #include "ADC_1.h"
  40:Generated_Source\PSoC4/ADC_1.c **** 
  41:Generated_Source\PSoC4/ADC_1.c **** static int32 ADC_1_IsChannelSigned(uint32 chan);
  42:Generated_Source\PSoC4/ADC_1.c **** #if(ADC_1_ANY_CONFIG_USES_FILTER	!= 0u)
  43:Generated_Source\PSoC4/ADC_1.c **** static void ADC_1_SetupComparatorTrim(void);
  44:Generated_Source\PSoC4/ADC_1.c **** static void ADC_1_UndoComparatorTrimSetup(void);
  45:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_RaiseOpampTrimToCrossing(uint32 startTrim);
  46:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_LowerOpampTrimToCrossing(uint32 startTrim);
  47:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_RaiseAgndTrimToCrossing(uint32 startTrim);
  48:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_LowerAgndTrimToCrossing(uint32 startTrim);
  49:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_SetOpampAndAgndTrim(uint32 opampTrim, uint32 agndTrim);
  50:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_SetOpampTrim(uint32 opampTrim);
  51:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_SetAgndTrim(uint32 agndTrim);
  52:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_IncOpampTrim(uint32 trim);
  53:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_DecOpampTrim(uint32 trim);
  54:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_IncAgndTrim(uint32 trim);
  55:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_DecAgndTrim(uint32 trim);
  56:Generated_Source\PSoC4/ADC_1.c **** #define OFFSET_SAMPLES (30)
  57:Generated_Source\PSoC4/ADC_1.c **** #endif
  58:Generated_Source\PSoC4/ADC_1.c **** 
  59:Generated_Source\PSoC4/ADC_1.c **** uint8 ADC_1_initVar = 0u; 
  60:Generated_Source\PSoC4/ADC_1.c **** 
  61:Generated_Source\PSoC4/ADC_1.c **** uint8 ADC_1_selected = 0u; /* 0 if no configuration selected. 1 otherwise. */
  62:Generated_Source\PSoC4/ADC_1.c **** volatile int16 ADC_1_offset[ADC_1_TOTAL_CHANNELS_NUM]; 
  63:Generated_Source\PSoC4/ADC_1.c **** volatile int32 ADC_1_countsPer10Volt[ADC_1_TOTAL_CHANNELS_NUM]; 
  64:Generated_Source\PSoC4/ADC_1.c **** 
  65:Generated_Source\PSoC4/ADC_1.c **** static uint32 ADC_1_currentConfig = 0u; /* Currently active configuration */
  66:Generated_Source\PSoC4/ADC_1.c **** 
  67:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
  68:Generated_Source\PSoC4/ADC_1.c **** * Local data allocation
  69:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
  70:Generated_Source\PSoC4/ADC_1.c **** /* Channels configuration generated by customiser */
  71:Generated_Source\PSoC4/ADC_1.c **** static const uint32 CYCODE ADC_1_channelsConfig[] = { 0x00000000UL, 0x00001000UL,  };
  72:Generated_Source\PSoC4/ADC_1.c **** 
  73:Generated_Source\PSoC4/ADC_1.c **** /* Filter init */
  74:Generated_Source\PSoC4/ADC_1.c **** #if(ADC_1_ANY_CONFIG_USES_FILTER	!= 0u)
  75:Generated_Source\PSoC4/ADC_1.c ****     #if (0u != ADC_1_CFG0_FILTER_PRESENT)
  76:Generated_Source\PSoC4/ADC_1.c ****         #define ADC_1_CFG0_UABH_A_FILTER_INITPAIRSSIZE ((ADC_1_CFG0_FILTERTYPE_USED == ADC_1_FILTER
  77:Generated_Source\PSoC4/ADC_1.c ****                                                              ? 18u \
  78:Generated_Source\PSoC4/ADC_1.c ****                                                              : 18u)
  79:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_reg_pair ADC_1_CFG0_UABH_A_FILTER_initPairs[ADC_1_CFG0_UABH_A_FILTER_INI
  80:Generated_Source\PSoC4/ADC_1.c ****         {
  81:Generated_Source\PSoC4/ADC_1.c ****         	/*OA_CTRL default always first element in initPairs*/
  82:Generated_Source\PSoC4/ADC_1.c ****             /* Topology-invariant registers */
  83:Generated_Source\PSoC4/ADC_1.c ****              {ADC_1_UABH_A_OA_CTRL_PTR        , ((uint32)ADC_1_UABH_A_DEFAULT_OA_CTRL)}
  84:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_STATIC_PTR      , ((uint32)ADC_1_UABH_A_DEFAULT_SW_STATIC)}
  85:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_MODBIT_SRC_PTR      , ((uint32)ADC_1_UABH_A_INVAR_SW_MODBIT_SRC)}
  86:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SRAM_CTRL_PTR      , ((uint32)ADC_1_UABH_A_INVAR_SRAM_CTRL)} 
  87:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_STARTUP_DELAY_PTR  , ((uint32)ADC_1_CFG0_UABH_A_STARTUP_DELAY)}
  88:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_BOOST_CTRL_PTR  , ((uint32)ADC_1_UABH_A_DEFAULT_SW_BOOST_CTRL)}
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 3


  89:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_OTHER_PTR  , ((uint32)ADC_1_UABH_A_DEFAULT_SW_OTHER)}
  90:Generated_Source\PSoC4/ADC_1.c ****             
  91:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_CFG0_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q)
  92:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
  93:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CA_IN0)}
  94:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CA_TOP)}
  95:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CC_IN0)}
  96:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CC_IN1)}
  97:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CF_BOT)}
  98:Generated_Source\PSoC4/ADC_1.c **** 
  99:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 100:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG0_UABH_A_LOWQDYN_CAP_CTRL)}
 101:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_1_CFG0_UABH_A_LOWQDYN_SW_CB_IN0)}
 102:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_1_CFG0_UABH_A_LOWQDYN_SW_CB_IN1)}
 103:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG0_UABH_A_LOWQDYN_SW_CB_TOP)}
 104:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG0_UABH_A_LOWQDYN_SW_CC_TOP)}
 105:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG0_UABH_A_LOWQDYN_CAP_ABCF_VAL
 106:Generated_Source\PSoC4/ADC_1.c ****             #elif (ADC_1_CFG0_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_HIGH_Q)
 107:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 108:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CA_IN0)}
 109:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CA_TOP)}
 110:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CB_IN0)}
 111:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CB_IN1)}
 112:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_IN0)}
 113:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_IN1)}
 114:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_TOP)}
 115:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CF_BOT)}
 116:Generated_Source\PSoC4/ADC_1.c **** 
 117:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 118:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG0_UABH_A_HIGHQDYN_CAP_CTRL)}
 119:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG0_UABH_A_HIGHQDYN_SW_CB_TOP)}
 120:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG0_UABH_A_HIGHQDYN_CAP_ABCF_VA
 121:Generated_Source\PSoC4/ADC_1.c ****             #endif /* (ADC_1_CFG0_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q) */
 122:Generated_Source\PSoC4/ADC_1.c ****         };
 123:Generated_Source\PSoC4/ADC_1.c **** 
 124:Generated_Source\PSoC4/ADC_1.c ****         #define ADC_1_CFG0_UABH_B_FILTER_INITPAIRSSIZE ((ADC_1_CFG0_FILTERTYPE_USED == ADC_1_FILTER
 125:Generated_Source\PSoC4/ADC_1.c ****                                                              ? 19u \
 126:Generated_Source\PSoC4/ADC_1.c ****                                                              : 19u)
 127:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_reg_pair ADC_1_CFG0_UABH_B_FILTER_initPairs[ADC_1_CFG0_UABH_B_FILTER_INI
 128:Generated_Source\PSoC4/ADC_1.c ****         {
 129:Generated_Source\PSoC4/ADC_1.c ****             /*OA_CTRL default always first element in initPairs*/
 130:Generated_Source\PSoC4/ADC_1.c ****             /* Topology-invariant registers */
 131:Generated_Source\PSoC4/ADC_1.c ****              {ADC_1_UABH_B_OA_CTRL_PTR        , ((uint32)ADC_1_UABH_B_DEFAULT_OA_CTRL)}
 132:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_STATIC_PTR      , ((uint32)ADC_1_UABH_B_DEFAULT_SW_STATIC)}
 133:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_MODBIT_SRC_PTR  , ((uint32)ADC_1_UABH_B_INVAR_SW_MODBIT_SRC)}
 134:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SRAM_CTRL_PTR      , ((uint32)ADC_1_UABH_B_INVAR_SRAM_CTRL)} 
 135:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_STARTUP_DELAY_PTR  , ((uint32)ADC_1_CFG0_UABH_B_STARTUP_DELAY)}
 136:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_BOOST_CTRL_PTR  , ((uint32)ADC_1_UABH_B_DEFAULT_SW_BOOST_CTRL)}
 137:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_OTHER_PTR  , ((uint32)ADC_1_UABH_B_DEFAULT_SW_OTHER)}
 138:Generated_Source\PSoC4/ADC_1.c ****             
 139:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_CFG0_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q)
 140:Generated_Source\PSoC4/ADC_1.c ****                     	/* Filter-invariant registers */
 141:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_IN0)}
 142:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_IN1)}
 143:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_TOP)}
 144:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_IN0)}
 145:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_IN1)}
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 4


 146:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_TOP)}
 147:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CC_IN0)}
 148:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CC_IN1)}
 149:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CF_BOT)}
 150:Generated_Source\PSoC4/ADC_1.c ****                 
 151:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 152:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG0_UABH_B_LOWQDYN_CAP_CTRL)}
 153:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG0_UABH_B_LOWQDYN_SW_CC_TOP)}
 154:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG0_UABH_B_LOWQDYN_CAP_ABCF_VAL
 155:Generated_Source\PSoC4/ADC_1.c ****             #elif (ADC_1_CFG0_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_HIGH_Q)
 156:Generated_Source\PSoC4/ADC_1.c ****             	/* Filter-invariant registers */
 157:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_IN0)}
 158:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_IN1)}
 159:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_TOP)}
 160:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CB_IN0)}
 161:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CB_IN1)}
 162:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CC_IN0)}
 163:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CC_IN1)}
 164:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CF_BOT)}
 165:Generated_Source\PSoC4/ADC_1.c ****                 
 166:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 167:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG0_UABH_B_HIGHQDYN_CAP_CTRL)}
 168:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG0_UABH_B_HIGHQDYN_SW_CB_TOP)}
 169:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG0_UABH_B_HIGHQDYN_SW_CC_TOP)}
 170:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG0_UABH_B_HIGHQDYN_CAP_ABCF_VA
 171:Generated_Source\PSoC4/ADC_1.c ****             #endif /* #if (ADC_1_CFG0_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q) */
 172:Generated_Source\PSoC4/ADC_1.c ****         };
 173:Generated_Source\PSoC4/ADC_1.c **** 
 174:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_config ADC_1_CFG0_UABH_A_FILTER_config = {
 175:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_waveConfig,
 176:Generated_Source\PSoC4/ADC_1.c ****             (CyUAB_reg_pair*) ADC_1_CFG0_UABH_A_FILTER_initPairs,
 177:Generated_Source\PSoC4/ADC_1.c ****             CyUAB_SHARED_SW_CFG(ADC_1_UABH_A_PARAM_REF_TIED,ADC_1_UABH_A_PARAM_AGND_TIED,
 178:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_A_PARAM_SW_CC,ADC_1_UABH_A_PARAM_SW_BB,ADC_1_UABH_A_PARAM_SW_AA),
 179:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_NUM_STEPS,
 180:Generated_Source\PSoC4/ADC_1.c ****             (uint8)(ADC_1_UABH_A_ELEMENT_COUNT(ADC_1_CFG0_UABH_A_FILTER_initPairs))
 181:Generated_Source\PSoC4/ADC_1.c ****         };
 182:Generated_Source\PSoC4/ADC_1.c **** 
 183:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_config ADC_1_CFG0_UABH_B_FILTER_config = {
 184:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_waveConfig,
 185:Generated_Source\PSoC4/ADC_1.c ****         (CyUAB_reg_pair*) ADC_1_CFG0_UABH_B_FILTER_initPairs,
 186:Generated_Source\PSoC4/ADC_1.c ****         CyUAB_SHARED_SW_CFG(ADC_1_UABH_B_PARAM_REF_TIED,ADC_1_UABH_B_PARAM_AGND_TIED,
 187:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_B_PARAM_SW_CC,ADC_1_UABH_B_PARAM_SW_BB,ADC_1_UABH_B_PARAM_SW_AA),
 188:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_NUM_STEPS,
 189:Generated_Source\PSoC4/ADC_1.c ****         (uint8)(ADC_1_UABH_B_ELEMENT_COUNT(ADC_1_CFG0_UABH_B_FILTER_initPairs))
 190:Generated_Source\PSoC4/ADC_1.c ****     };
 191:Generated_Source\PSoC4/ADC_1.c ****     #endif /* (0u != ADC_1_CFG0_FILTER_PRESENT) */
 192:Generated_Source\PSoC4/ADC_1.c ****     #if (0u != ADC_1_CFG1_FILTER_PRESENT)
 193:Generated_Source\PSoC4/ADC_1.c ****         #define ADC_1_CFG1_UABH_A_FILTER_INITPAIRSSIZE ((ADC_1_CFG1_FILTERTYPE_USED == ADC_1_FILTER
 194:Generated_Source\PSoC4/ADC_1.c ****                                                              ? 18u \
 195:Generated_Source\PSoC4/ADC_1.c ****                                                              : 18u)
 196:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_reg_pair ADC_1_CFG1_UABH_A_FILTER_initPairs[ADC_1_CFG1_UABH_A_FILTER_INI
 197:Generated_Source\PSoC4/ADC_1.c ****         {
 198:Generated_Source\PSoC4/ADC_1.c ****         	/*OA_CTRL default always first element in initPairs*/
 199:Generated_Source\PSoC4/ADC_1.c ****             /* Topology-invariant registers */
 200:Generated_Source\PSoC4/ADC_1.c ****              {ADC_1_UABH_A_OA_CTRL_PTR        , ((uint32)ADC_1_UABH_A_DEFAULT_OA_CTRL)}
 201:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_STATIC_PTR      , ((uint32)ADC_1_UABH_A_DEFAULT_SW_STATIC)}
 202:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_MODBIT_SRC_PTR      , ((uint32)ADC_1_UABH_A_INVAR_SW_MODBIT_SRC)}
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 5


 203:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SRAM_CTRL_PTR      , ((uint32)ADC_1_UABH_A_INVAR_SRAM_CTRL)} 
 204:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_STARTUP_DELAY_PTR  , ((uint32)ADC_1_CFG1_UABH_A_STARTUP_DELAY)}
 205:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_BOOST_CTRL_PTR  , ((uint32)ADC_1_UABH_A_DEFAULT_SW_BOOST_CTRL)}
 206:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_OTHER_PTR  , ((uint32)ADC_1_UABH_A_DEFAULT_SW_OTHER)}
 207:Generated_Source\PSoC4/ADC_1.c ****             
 208:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_CFG1_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q)
 209:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 210:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CA_IN0)}
 211:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CA_TOP)}
 212:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CC_IN0)}
 213:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CC_IN1)}
 214:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CF_BOT)}
 215:Generated_Source\PSoC4/ADC_1.c **** 
 216:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 217:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG1_UABH_A_LOWQDYN_CAP_CTRL)}
 218:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_1_CFG1_UABH_A_LOWQDYN_SW_CB_IN0)}
 219:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_1_CFG1_UABH_A_LOWQDYN_SW_CB_IN1)}
 220:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG1_UABH_A_LOWQDYN_SW_CB_TOP)}
 221:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG1_UABH_A_LOWQDYN_SW_CC_TOP)}
 222:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG1_UABH_A_LOWQDYN_CAP_ABCF_VAL
 223:Generated_Source\PSoC4/ADC_1.c ****             #elif (ADC_1_CFG1_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_HIGH_Q)
 224:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 225:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CA_IN0)}
 226:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CA_TOP)}
 227:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CB_IN0)}
 228:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CB_IN1)}
 229:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_IN0)}
 230:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_IN1)}
 231:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_TOP)}
 232:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CF_BOT)}
 233:Generated_Source\PSoC4/ADC_1.c **** 
 234:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 235:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG1_UABH_A_HIGHQDYN_CAP_CTRL)}
 236:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG1_UABH_A_HIGHQDYN_SW_CB_TOP)}
 237:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG1_UABH_A_HIGHQDYN_CAP_ABCF_VA
 238:Generated_Source\PSoC4/ADC_1.c ****             #endif /* (ADC_1_CFG1_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q) */
 239:Generated_Source\PSoC4/ADC_1.c ****         };
 240:Generated_Source\PSoC4/ADC_1.c **** 
 241:Generated_Source\PSoC4/ADC_1.c ****         #define ADC_1_CFG1_UABH_B_FILTER_INITPAIRSSIZE ((ADC_1_CFG1_FILTERTYPE_USED == ADC_1_FILTER
 242:Generated_Source\PSoC4/ADC_1.c ****                                                              ? 19u \
 243:Generated_Source\PSoC4/ADC_1.c ****                                                              : 19u)
 244:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_reg_pair ADC_1_CFG1_UABH_B_FILTER_initPairs[ADC_1_CFG1_UABH_B_FILTER_INI
 245:Generated_Source\PSoC4/ADC_1.c ****         {
 246:Generated_Source\PSoC4/ADC_1.c ****             /*OA_CTRL default always first element in initPairs*/
 247:Generated_Source\PSoC4/ADC_1.c ****             /* Topology-invariant registers */
 248:Generated_Source\PSoC4/ADC_1.c ****              {ADC_1_UABH_B_OA_CTRL_PTR        , ((uint32)ADC_1_UABH_B_DEFAULT_OA_CTRL)}
 249:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_STATIC_PTR      , ((uint32)ADC_1_UABH_B_DEFAULT_SW_STATIC)}
 250:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_MODBIT_SRC_PTR  , ((uint32)ADC_1_UABH_B_INVAR_SW_MODBIT_SRC)}
 251:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SRAM_CTRL_PTR      , ((uint32)ADC_1_UABH_B_INVAR_SRAM_CTRL)} 
 252:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_STARTUP_DELAY_PTR  , ((uint32)ADC_1_CFG1_UABH_B_STARTUP_DELAY)}
 253:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_BOOST_CTRL_PTR  , ((uint32)ADC_1_UABH_B_DEFAULT_SW_BOOST_CTRL)}
 254:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_OTHER_PTR  , ((uint32)ADC_1_UABH_B_DEFAULT_SW_OTHER)}
 255:Generated_Source\PSoC4/ADC_1.c ****             
 256:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_CFG1_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q)
 257:Generated_Source\PSoC4/ADC_1.c ****                     	/* Filter-invariant registers */
 258:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_IN0)}
 259:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_IN1)}
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 6


 260:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_TOP)}
 261:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_IN0)}
 262:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_IN1)}
 263:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_TOP)}
 264:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CC_IN0)}
 265:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CC_IN1)}
 266:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CF_BOT)}
 267:Generated_Source\PSoC4/ADC_1.c ****                 
 268:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 269:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG1_UABH_B_LOWQDYN_CAP_CTRL)}
 270:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG1_UABH_B_LOWQDYN_SW_CC_TOP)}
 271:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG1_UABH_B_LOWQDYN_CAP_ABCF_VAL
 272:Generated_Source\PSoC4/ADC_1.c ****             #elif (ADC_1_CFG1_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_HIGH_Q)
 273:Generated_Source\PSoC4/ADC_1.c ****             	/* Filter-invariant registers */
 274:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_IN0)}
 275:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_IN1)}
 276:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_TOP)}
 277:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CB_IN0)}
 278:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CB_IN1)}
 279:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CC_IN0)}
 280:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CC_IN1)}
 281:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CF_BOT)}
 282:Generated_Source\PSoC4/ADC_1.c ****                 
 283:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 284:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG1_UABH_B_HIGHQDYN_CAP_CTRL)}
 285:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG1_UABH_B_HIGHQDYN_SW_CB_TOP)}
 286:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG1_UABH_B_HIGHQDYN_SW_CC_TOP)}
 287:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG1_UABH_B_HIGHQDYN_CAP_ABCF_VA
 288:Generated_Source\PSoC4/ADC_1.c ****             #endif /* #if (ADC_1_CFG1_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q) */
 289:Generated_Source\PSoC4/ADC_1.c ****         };
 290:Generated_Source\PSoC4/ADC_1.c **** 
 291:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_config ADC_1_CFG1_UABH_A_FILTER_config = {
 292:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_waveConfig,
 293:Generated_Source\PSoC4/ADC_1.c ****             (CyUAB_reg_pair*) ADC_1_CFG1_UABH_A_FILTER_initPairs,
 294:Generated_Source\PSoC4/ADC_1.c ****             CyUAB_SHARED_SW_CFG(ADC_1_UABH_A_PARAM_REF_TIED,ADC_1_UABH_A_PARAM_AGND_TIED,
 295:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_A_PARAM_SW_CC,ADC_1_UABH_A_PARAM_SW_BB,ADC_1_UABH_A_PARAM_SW_AA),
 296:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_NUM_STEPS,
 297:Generated_Source\PSoC4/ADC_1.c ****             (uint8)(ADC_1_UABH_A_ELEMENT_COUNT(ADC_1_CFG1_UABH_A_FILTER_initPairs))
 298:Generated_Source\PSoC4/ADC_1.c ****         };
 299:Generated_Source\PSoC4/ADC_1.c **** 
 300:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_config ADC_1_CFG1_UABH_B_FILTER_config = {
 301:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_waveConfig,
 302:Generated_Source\PSoC4/ADC_1.c ****         (CyUAB_reg_pair*) ADC_1_CFG1_UABH_B_FILTER_initPairs,
 303:Generated_Source\PSoC4/ADC_1.c ****         CyUAB_SHARED_SW_CFG(ADC_1_UABH_B_PARAM_REF_TIED,ADC_1_UABH_B_PARAM_AGND_TIED,
 304:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_B_PARAM_SW_CC,ADC_1_UABH_B_PARAM_SW_BB,ADC_1_UABH_B_PARAM_SW_AA),
 305:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_NUM_STEPS,
 306:Generated_Source\PSoC4/ADC_1.c ****         (uint8)(ADC_1_UABH_B_ELEMENT_COUNT(ADC_1_CFG1_UABH_B_FILTER_initPairs))
 307:Generated_Source\PSoC4/ADC_1.c ****     };
 308:Generated_Source\PSoC4/ADC_1.c ****     #endif /* (0u != ADC_1_CFG1_FILTER_PRESENT) */
 309:Generated_Source\PSoC4/ADC_1.c ****     #if (0u != ADC_1_CFG2_FILTER_PRESENT)
 310:Generated_Source\PSoC4/ADC_1.c ****         #define ADC_1_CFG2_UABH_A_FILTER_INITPAIRSSIZE ((ADC_1_CFG2_FILTERTYPE_USED == ADC_1_FILTER
 311:Generated_Source\PSoC4/ADC_1.c ****                                                              ? 18u \
 312:Generated_Source\PSoC4/ADC_1.c ****                                                              : 18u)
 313:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_reg_pair ADC_1_CFG2_UABH_A_FILTER_initPairs[ADC_1_CFG2_UABH_A_FILTER_INI
 314:Generated_Source\PSoC4/ADC_1.c ****         {
 315:Generated_Source\PSoC4/ADC_1.c ****         	/*OA_CTRL default always first element in initPairs*/
 316:Generated_Source\PSoC4/ADC_1.c ****             /* Topology-invariant registers */
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 7


 317:Generated_Source\PSoC4/ADC_1.c ****              {ADC_1_UABH_A_OA_CTRL_PTR        , ((uint32)ADC_1_UABH_A_DEFAULT_OA_CTRL)}
 318:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_STATIC_PTR      , ((uint32)ADC_1_UABH_A_DEFAULT_SW_STATIC)}
 319:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_MODBIT_SRC_PTR      , ((uint32)ADC_1_UABH_A_INVAR_SW_MODBIT_SRC)}
 320:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SRAM_CTRL_PTR      , ((uint32)ADC_1_UABH_A_INVAR_SRAM_CTRL)} 
 321:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_STARTUP_DELAY_PTR  , ((uint32)ADC_1_CFG2_UABH_A_STARTUP_DELAY)}
 322:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_BOOST_CTRL_PTR  , ((uint32)ADC_1_UABH_A_DEFAULT_SW_BOOST_CTRL)}
 323:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_OTHER_PTR  , ((uint32)ADC_1_UABH_A_DEFAULT_SW_OTHER)}
 324:Generated_Source\PSoC4/ADC_1.c ****             
 325:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_CFG2_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q)
 326:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 327:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CA_IN0)}
 328:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CA_TOP)}
 329:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CC_IN0)}
 330:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CC_IN1)}
 331:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CF_BOT)}
 332:Generated_Source\PSoC4/ADC_1.c **** 
 333:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 334:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG2_UABH_A_LOWQDYN_CAP_CTRL)}
 335:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_1_CFG2_UABH_A_LOWQDYN_SW_CB_IN0)}
 336:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_1_CFG2_UABH_A_LOWQDYN_SW_CB_IN1)}
 337:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG2_UABH_A_LOWQDYN_SW_CB_TOP)}
 338:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG2_UABH_A_LOWQDYN_SW_CC_TOP)}
 339:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG2_UABH_A_LOWQDYN_CAP_ABCF_VAL
 340:Generated_Source\PSoC4/ADC_1.c ****             #elif (ADC_1_CFG2_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_HIGH_Q)
 341:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 342:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CA_IN0)}
 343:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CA_TOP)}
 344:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CB_IN0)}
 345:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CB_IN1)}
 346:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_IN0)}
 347:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_IN1)}
 348:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_TOP)}
 349:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CF_BOT)}
 350:Generated_Source\PSoC4/ADC_1.c **** 
 351:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 352:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG2_UABH_A_HIGHQDYN_CAP_CTRL)}
 353:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG2_UABH_A_HIGHQDYN_SW_CB_TOP)}
 354:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG2_UABH_A_HIGHQDYN_CAP_ABCF_VA
 355:Generated_Source\PSoC4/ADC_1.c ****             #endif /* (ADC_1_CFG2_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q) */
 356:Generated_Source\PSoC4/ADC_1.c ****         };
 357:Generated_Source\PSoC4/ADC_1.c **** 
 358:Generated_Source\PSoC4/ADC_1.c ****         #define ADC_1_CFG2_UABH_B_FILTER_INITPAIRSSIZE ((ADC_1_CFG2_FILTERTYPE_USED == ADC_1_FILTER
 359:Generated_Source\PSoC4/ADC_1.c ****                                                              ? 19u \
 360:Generated_Source\PSoC4/ADC_1.c ****                                                              : 19u)
 361:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_reg_pair ADC_1_CFG2_UABH_B_FILTER_initPairs[ADC_1_CFG2_UABH_B_FILTER_INI
 362:Generated_Source\PSoC4/ADC_1.c ****         {
 363:Generated_Source\PSoC4/ADC_1.c ****             /*OA_CTRL default always first element in initPairs*/
 364:Generated_Source\PSoC4/ADC_1.c ****             /* Topology-invariant registers */
 365:Generated_Source\PSoC4/ADC_1.c ****              {ADC_1_UABH_B_OA_CTRL_PTR        , ((uint32)ADC_1_UABH_B_DEFAULT_OA_CTRL)}
 366:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_STATIC_PTR      , ((uint32)ADC_1_UABH_B_DEFAULT_SW_STATIC)}
 367:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_MODBIT_SRC_PTR  , ((uint32)ADC_1_UABH_B_INVAR_SW_MODBIT_SRC)}
 368:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SRAM_CTRL_PTR      , ((uint32)ADC_1_UABH_B_INVAR_SRAM_CTRL)} 
 369:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_STARTUP_DELAY_PTR  , ((uint32)ADC_1_CFG2_UABH_B_STARTUP_DELAY)}
 370:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_BOOST_CTRL_PTR  , ((uint32)ADC_1_UABH_B_DEFAULT_SW_BOOST_CTRL)}
 371:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_OTHER_PTR  , ((uint32)ADC_1_UABH_B_DEFAULT_SW_OTHER)}
 372:Generated_Source\PSoC4/ADC_1.c ****             
 373:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_CFG2_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q)
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 8


 374:Generated_Source\PSoC4/ADC_1.c ****                     	/* Filter-invariant registers */
 375:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_IN0)}
 376:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_IN1)}
 377:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_TOP)}
 378:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_IN0)}
 379:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_IN1)}
 380:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_TOP)}
 381:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CC_IN0)}
 382:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CC_IN1)}
 383:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CF_BOT)}
 384:Generated_Source\PSoC4/ADC_1.c ****                 
 385:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 386:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG2_UABH_B_LOWQDYN_CAP_CTRL)}
 387:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG2_UABH_B_LOWQDYN_SW_CC_TOP)}
 388:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG2_UABH_B_LOWQDYN_CAP_ABCF_VAL
 389:Generated_Source\PSoC4/ADC_1.c ****             #elif (ADC_1_CFG2_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_HIGH_Q)
 390:Generated_Source\PSoC4/ADC_1.c ****             	/* Filter-invariant registers */
 391:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_IN0)}
 392:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_IN1)}
 393:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_TOP)}
 394:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CB_IN0)}
 395:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CB_IN1)}
 396:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CC_IN0)}
 397:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CC_IN1)}
 398:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CF_BOT)}
 399:Generated_Source\PSoC4/ADC_1.c ****                 
 400:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 401:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG2_UABH_B_HIGHQDYN_CAP_CTRL)}
 402:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG2_UABH_B_HIGHQDYN_SW_CB_TOP)}
 403:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG2_UABH_B_HIGHQDYN_SW_CC_TOP)}
 404:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG2_UABH_B_HIGHQDYN_CAP_ABCF_VA
 405:Generated_Source\PSoC4/ADC_1.c ****             #endif /* #if (ADC_1_CFG2_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q) */
 406:Generated_Source\PSoC4/ADC_1.c ****         };
 407:Generated_Source\PSoC4/ADC_1.c **** 
 408:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_config ADC_1_CFG2_UABH_A_FILTER_config = {
 409:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_waveConfig,
 410:Generated_Source\PSoC4/ADC_1.c ****             (CyUAB_reg_pair*) ADC_1_CFG2_UABH_A_FILTER_initPairs,
 411:Generated_Source\PSoC4/ADC_1.c ****             CyUAB_SHARED_SW_CFG(ADC_1_UABH_A_PARAM_REF_TIED,ADC_1_UABH_A_PARAM_AGND_TIED,
 412:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_A_PARAM_SW_CC,ADC_1_UABH_A_PARAM_SW_BB,ADC_1_UABH_A_PARAM_SW_AA),
 413:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_NUM_STEPS,
 414:Generated_Source\PSoC4/ADC_1.c ****             (uint8)(ADC_1_UABH_A_ELEMENT_COUNT(ADC_1_CFG2_UABH_A_FILTER_initPairs))
 415:Generated_Source\PSoC4/ADC_1.c ****         };
 416:Generated_Source\PSoC4/ADC_1.c **** 
 417:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_config ADC_1_CFG2_UABH_B_FILTER_config = {
 418:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_waveConfig,
 419:Generated_Source\PSoC4/ADC_1.c ****         (CyUAB_reg_pair*) ADC_1_CFG2_UABH_B_FILTER_initPairs,
 420:Generated_Source\PSoC4/ADC_1.c ****         CyUAB_SHARED_SW_CFG(ADC_1_UABH_B_PARAM_REF_TIED,ADC_1_UABH_B_PARAM_AGND_TIED,
 421:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_B_PARAM_SW_CC,ADC_1_UABH_B_PARAM_SW_BB,ADC_1_UABH_B_PARAM_SW_AA),
 422:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_NUM_STEPS,
 423:Generated_Source\PSoC4/ADC_1.c ****         (uint8)(ADC_1_UABH_B_ELEMENT_COUNT(ADC_1_CFG2_UABH_B_FILTER_initPairs))
 424:Generated_Source\PSoC4/ADC_1.c ****     };
 425:Generated_Source\PSoC4/ADC_1.c ****     #endif /* (0u != ADC_1_CFG2_FILTER_PRESENT) */
 426:Generated_Source\PSoC4/ADC_1.c ****     #if (0u != ADC_1_CFG3_FILTER_PRESENT)
 427:Generated_Source\PSoC4/ADC_1.c ****         #define ADC_1_CFG3_UABH_A_FILTER_INITPAIRSSIZE ((ADC_1_CFG3_FILTERTYPE_USED == ADC_1_FILTER
 428:Generated_Source\PSoC4/ADC_1.c ****                                                              ? 18u \
 429:Generated_Source\PSoC4/ADC_1.c ****                                                              : 18u)
 430:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_reg_pair ADC_1_CFG3_UABH_A_FILTER_initPairs[ADC_1_CFG3_UABH_A_FILTER_INI
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 9


 431:Generated_Source\PSoC4/ADC_1.c ****         {
 432:Generated_Source\PSoC4/ADC_1.c ****         	/*OA_CTRL default always first element in initPairs*/
 433:Generated_Source\PSoC4/ADC_1.c ****             /* Topology-invariant registers */
 434:Generated_Source\PSoC4/ADC_1.c ****              {ADC_1_UABH_A_OA_CTRL_PTR        , ((uint32)ADC_1_UABH_A_DEFAULT_OA_CTRL)}
 435:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_STATIC_PTR      , ((uint32)ADC_1_UABH_A_DEFAULT_SW_STATIC)}
 436:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_MODBIT_SRC_PTR      , ((uint32)ADC_1_UABH_A_INVAR_SW_MODBIT_SRC)}
 437:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SRAM_CTRL_PTR      , ((uint32)ADC_1_UABH_A_INVAR_SRAM_CTRL)} 
 438:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_STARTUP_DELAY_PTR  , ((uint32)ADC_1_CFG3_UABH_A_STARTUP_DELAY)}
 439:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_BOOST_CTRL_PTR  , ((uint32)ADC_1_UABH_A_DEFAULT_SW_BOOST_CTRL)}
 440:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_A_SW_OTHER_PTR  , ((uint32)ADC_1_UABH_A_DEFAULT_SW_OTHER)}
 441:Generated_Source\PSoC4/ADC_1.c ****             
 442:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_CFG3_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q)
 443:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 444:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CA_IN0)}
 445:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CA_TOP)}
 446:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CC_IN0)}
 447:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CC_IN1)}
 448:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_A_LOWQSTAT_SW_CF_BOT)}
 449:Generated_Source\PSoC4/ADC_1.c **** 
 450:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 451:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG3_UABH_A_LOWQDYN_CAP_CTRL)}
 452:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_1_CFG3_UABH_A_LOWQDYN_SW_CB_IN0)}
 453:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_1_CFG3_UABH_A_LOWQDYN_SW_CB_IN1)}
 454:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG3_UABH_A_LOWQDYN_SW_CB_TOP)}
 455:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG3_UABH_A_LOWQDYN_SW_CC_TOP)}
 456:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG3_UABH_A_LOWQDYN_CAP_ABCF_VAL
 457:Generated_Source\PSoC4/ADC_1.c ****             #elif (ADC_1_CFG3_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_HIGH_Q)
 458:Generated_Source\PSoC4/ADC_1.c ****                 /* Filter-invariant registers */
 459:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CA_IN0)}
 460:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CA_TOP)}
 461:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CB_IN0)}
 462:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CB_IN1)}
 463:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_IN0)}
 464:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_IN1)}
 465:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CC_TOP)}
 466:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_A_HIGHQSTAT_SW_CF_BOT)}
 467:Generated_Source\PSoC4/ADC_1.c **** 
 468:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 469:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG3_UABH_A_HIGHQDYN_CAP_CTRL)}
 470:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG3_UABH_A_HIGHQDYN_SW_CB_TOP)}
 471:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG3_UABH_A_HIGHQDYN_CAP_ABCF_VA
 472:Generated_Source\PSoC4/ADC_1.c ****             #endif /* (ADC_1_CFG3_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q) */
 473:Generated_Source\PSoC4/ADC_1.c ****         };
 474:Generated_Source\PSoC4/ADC_1.c **** 
 475:Generated_Source\PSoC4/ADC_1.c ****         #define ADC_1_CFG3_UABH_B_FILTER_INITPAIRSSIZE ((ADC_1_CFG3_FILTERTYPE_USED == ADC_1_FILTER
 476:Generated_Source\PSoC4/ADC_1.c ****                                                              ? 19u \
 477:Generated_Source\PSoC4/ADC_1.c ****                                                              : 19u)
 478:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_reg_pair ADC_1_CFG3_UABH_B_FILTER_initPairs[ADC_1_CFG3_UABH_B_FILTER_INI
 479:Generated_Source\PSoC4/ADC_1.c ****         {
 480:Generated_Source\PSoC4/ADC_1.c ****             /*OA_CTRL default always first element in initPairs*/
 481:Generated_Source\PSoC4/ADC_1.c ****             /* Topology-invariant registers */
 482:Generated_Source\PSoC4/ADC_1.c ****              {ADC_1_UABH_B_OA_CTRL_PTR        , ((uint32)ADC_1_UABH_B_DEFAULT_OA_CTRL)}
 483:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_STATIC_PTR      , ((uint32)ADC_1_UABH_B_DEFAULT_SW_STATIC)}
 484:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_MODBIT_SRC_PTR  , ((uint32)ADC_1_UABH_B_INVAR_SW_MODBIT_SRC)}
 485:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SRAM_CTRL_PTR      , ((uint32)ADC_1_UABH_B_INVAR_SRAM_CTRL)} 
 486:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_STARTUP_DELAY_PTR  , ((uint32)ADC_1_CFG3_UABH_B_STARTUP_DELAY)}
 487:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_BOOST_CTRL_PTR  , ((uint32)ADC_1_UABH_B_DEFAULT_SW_BOOST_CTRL)}
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 10


 488:Generated_Source\PSoC4/ADC_1.c ****             ,{ADC_1_UABH_B_SW_OTHER_PTR  , ((uint32)ADC_1_UABH_B_DEFAULT_SW_OTHER)}
 489:Generated_Source\PSoC4/ADC_1.c ****             
 490:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_CFG3_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q)
 491:Generated_Source\PSoC4/ADC_1.c ****                     	/* Filter-invariant registers */
 492:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_IN0)}
 493:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_IN1)}
 494:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CA_TOP)}
 495:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_IN0)}
 496:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_IN1)}
 497:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CB_TOP)}
 498:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CC_IN0)}
 499:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CC_IN1)}
 500:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_B_LOWQSTAT_SW_CF_BOT)}
 501:Generated_Source\PSoC4/ADC_1.c ****                 
 502:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 503:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG3_UABH_B_LOWQDYN_CAP_CTRL)}
 504:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG3_UABH_B_LOWQDYN_SW_CC_TOP)}
 505:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG3_UABH_B_LOWQDYN_CAP_ABCF_VAL
 506:Generated_Source\PSoC4/ADC_1.c ****             #elif (ADC_1_CFG3_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_HIGH_Q)
 507:Generated_Source\PSoC4/ADC_1.c ****             	/* Filter-invariant registers */
 508:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_IN0)}
 509:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_IN1)}
 510:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CA_TOP)}
 511:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CB_IN0)}
 512:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CB_IN1)}
 513:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CC_IN0)}
 514:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CC_IN1)}
 515:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_1_UABH_B_HIGHQSTAT_SW_CF_BOT)}
 516:Generated_Source\PSoC4/ADC_1.c ****                 
 517:Generated_Source\PSoC4/ADC_1.c ****                 /* Parameter-based registers */
 518:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_1_CFG3_UABH_B_HIGHQDYN_CAP_CTRL)}
 519:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_1_CFG3_UABH_B_HIGHQDYN_SW_CB_TOP)}
 520:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_1_CFG3_UABH_B_HIGHQDYN_SW_CC_TOP)}
 521:Generated_Source\PSoC4/ADC_1.c ****                 ,{ADC_1_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_1_CFG3_UABH_B_HIGHQDYN_CAP_ABCF_VA
 522:Generated_Source\PSoC4/ADC_1.c ****             #endif /* #if (ADC_1_CFG3_FILTERTYPE_USED == ADC_1_FILTERTOPOLOGY_LOW_Q) */
 523:Generated_Source\PSoC4/ADC_1.c ****         };
 524:Generated_Source\PSoC4/ADC_1.c **** 
 525:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_config ADC_1_CFG3_UABH_A_FILTER_config = {
 526:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_waveConfig,
 527:Generated_Source\PSoC4/ADC_1.c ****             (CyUAB_reg_pair*) ADC_1_CFG3_UABH_A_FILTER_initPairs,
 528:Generated_Source\PSoC4/ADC_1.c ****             CyUAB_SHARED_SW_CFG(ADC_1_UABH_A_PARAM_REF_TIED,ADC_1_UABH_A_PARAM_AGND_TIED,
 529:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_UABH_A_PARAM_SW_CC,ADC_1_UABH_A_PARAM_SW_BB,ADC_1_UABH_A_PARAM_SW_AA),
 530:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_NUM_STEPS,
 531:Generated_Source\PSoC4/ADC_1.c ****             (uint8)(ADC_1_UABH_A_ELEMENT_COUNT(ADC_1_CFG3_UABH_A_FILTER_initPairs))
 532:Generated_Source\PSoC4/ADC_1.c ****         };
 533:Generated_Source\PSoC4/ADC_1.c **** 
 534:Generated_Source\PSoC4/ADC_1.c ****         const static CyUAB_config ADC_1_CFG3_UABH_B_FILTER_config = {
 535:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_waveConfig,
 536:Generated_Source\PSoC4/ADC_1.c ****         (CyUAB_reg_pair*) ADC_1_CFG3_UABH_B_FILTER_initPairs,
 537:Generated_Source\PSoC4/ADC_1.c ****         CyUAB_SHARED_SW_CFG(ADC_1_UABH_B_PARAM_REF_TIED,ADC_1_UABH_B_PARAM_AGND_TIED,
 538:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_B_PARAM_SW_CC,ADC_1_UABH_B_PARAM_SW_BB,ADC_1_UABH_B_PARAM_SW_AA),
 539:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_NUM_STEPS,
 540:Generated_Source\PSoC4/ADC_1.c ****         (uint8)(ADC_1_UABH_B_ELEMENT_COUNT(ADC_1_CFG3_UABH_B_FILTER_initPairs))
 541:Generated_Source\PSoC4/ADC_1.c ****     };
 542:Generated_Source\PSoC4/ADC_1.c ****     #endif /* (0u != ADC_1_CFG3_FILTER_PRESENT) */
 543:Generated_Source\PSoC4/ADC_1.c ****     
 544:Generated_Source\PSoC4/ADC_1.c ****     
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 11


 545:Generated_Source\PSoC4/ADC_1.c **** #endif /* (ADC_1_ANY_CONFIG_USES_FILTER	!= 0u)	*/
 546:Generated_Source\PSoC4/ADC_1.c **** 
 547:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 548:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_Start
 549:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
 550:Generated_Source\PSoC4/ADC_1.c **** *
 551:Generated_Source\PSoC4/ADC_1.c **** * \brief Performs all required initialization for this component and enables the 
 552:Generated_Source\PSoC4/ADC_1.c **** *  power. The power will be set to the appropriate power based on the clock 
 553:Generated_Source\PSoC4/ADC_1.c **** *  frequency.
 554:Generated_Source\PSoC4/ADC_1.c **** * 
 555:Generated_Source\PSoC4/ADC_1.c **** * \param None
 556:Generated_Source\PSoC4/ADC_1.c **** * 
 557:Generated_Source\PSoC4/ADC_1.c **** * \return None
 558:Generated_Source\PSoC4/ADC_1.c **** * 
 559:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
 560:Generated_Source\PSoC4/ADC_1.c **** *
 561:Generated_Source\PSoC4/ADC_1.c **** * \globalvars
 562:Generated_Source\PSoC4/ADC_1.c **** *  \ref ADC_1_initVar (RW)
 563:Generated_Source\PSoC4/ADC_1.c **** *
 564:Generated_Source\PSoC4/ADC_1.c **** * <b>Code Snippet</b>
 565:Generated_Source\PSoC4/ADC_1.c **** *  \snippet main.c snippet_ADC_1_Start
 566:Generated_Source\PSoC4/ADC_1.c **** *
 567:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 568:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_Start(void)
 569:Generated_Source\PSoC4/ADC_1.c **** {
 570:Generated_Source\PSoC4/ADC_1.c ****     if (ADC_1_INIT_VAR_INIT_FLAG != (ADC_1_INIT_VAR_INIT_FLAG & ADC_1_initVar))
 571:Generated_Source\PSoC4/ADC_1.c ****     {
 572:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_Init();
 573:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_initVar |= ADC_1_INIT_VAR_INIT_FLAG;
 574:Generated_Source\PSoC4/ADC_1.c ****     }
 575:Generated_Source\PSoC4/ADC_1.c ****     
 576:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_Enable();
 577:Generated_Source\PSoC4/ADC_1.c ****     
 578:Generated_Source\PSoC4/ADC_1.c ****     return;
 579:Generated_Source\PSoC4/ADC_1.c **** }
 580:Generated_Source\PSoC4/ADC_1.c **** 
 581:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 582:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_StartEx
 583:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
 584:Generated_Source\PSoC4/ADC_1.c **** *
 585:Generated_Source\PSoC4/ADC_1.c **** * \brief This function starts the ADC_1 and sets the Interrupt 
 586:Generated_Source\PSoC4/ADC_1.c **** * Service Routine to the provided address using the 
 587:Generated_Source\PSoC4/ADC_1.c **** * ADC_1_IRQ_StartEx() function. Refer to the Interrupt component 
 588:Generated_Source\PSoC4/ADC_1.c **** * datasheet for more information on the ADC_1_IRQ_StartEx() function.
 589:Generated_Source\PSoC4/ADC_1.c **** * 
 590:Generated_Source\PSoC4/ADC_1.c **** * \param address This is the address of a user defined function for the ISR.
 591:Generated_Source\PSoC4/ADC_1.c **** * 
 592:Generated_Source\PSoC4/ADC_1.c **** * \return None
 593:Generated_Source\PSoC4/ADC_1.c **** * 
 594:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
 595:Generated_Source\PSoC4/ADC_1.c **** *
 596:Generated_Source\PSoC4/ADC_1.c **** * <b>Code Snippet</b>
 597:Generated_Source\PSoC4/ADC_1.c **** *  \snippet main.c snippet_ADC_1_StartEx
 598:Generated_Source\PSoC4/ADC_1.c **** *
 599:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 600:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_StartEx(cyisraddress address)
 601:Generated_Source\PSoC4/ADC_1.c **** {
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 12


 602:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_Start();
 603:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_IRQ_StartEx(address);
 604:Generated_Source\PSoC4/ADC_1.c ****     return;
 605:Generated_Source\PSoC4/ADC_1.c **** }
 606:Generated_Source\PSoC4/ADC_1.c **** 
 607:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 608:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_Stop
 609:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
 610:Generated_Source\PSoC4/ADC_1.c **** *
 611:Generated_Source\PSoC4/ADC_1.c **** * \brief This function stops ADC conversions and puts the ADC into its lowest 
 612:Generated_Source\PSoC4/ADC_1.c **** * power mode.
 613:Generated_Source\PSoC4/ADC_1.c **** * 
 614:Generated_Source\PSoC4/ADC_1.c **** * \param None
 615:Generated_Source\PSoC4/ADC_1.c **** * 
 616:Generated_Source\PSoC4/ADC_1.c **** * \return None
 617:Generated_Source\PSoC4/ADC_1.c **** * 
 618:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect
 619:Generated_Source\PSoC4/ADC_1.c **** * Do not use the ADC_1_Stop() API to halt conversions. Instead use the 
 620:Generated_Source\PSoC4/ADC_1.c **** * ADC_1_StopConvert() API. If you use the ADC_1_Stop() API 
 621:Generated_Source\PSoC4/ADC_1.c **** * to halt conversions then later use the ADC_1_Start() and 
 622:Generated_Source\PSoC4/ADC_1.c **** * ADC_1_StartConvert() APIs to resume conversions, the first channel 
 623:Generated_Source\PSoC4/ADC_1.c **** * of the scan may be corrupt. The ADC_1_StopConvert() API will enable 
 624:Generated_Source\PSoC4/ADC_1.c **** * the ADC_1 to complete the current scan of channels. After the 
 625:Generated_Source\PSoC4/ADC_1.c **** * channel scan is complete, the ADC_1 will stop all conversions, which 
 626:Generated_Source\PSoC4/ADC_1.c **** * can be detected by the use of an ISR or the ADC_1_IsEndConversion() 
 627:Generated_Source\PSoC4/ADC_1.c **** * flag.
 628:Generated_Source\PSoC4/ADC_1.c **** *
 629:Generated_Source\PSoC4/ADC_1.c **** * <b>Code Snippet</b>
 630:Generated_Source\PSoC4/ADC_1.c **** *  \snippet main.c snippet_ADC_1_Stop
 631:Generated_Source\PSoC4/ADC_1.c **** *
 632:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 633:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_Stop(void)
 634:Generated_Source\PSoC4/ADC_1.c **** {	
 635:Generated_Source\PSoC4/ADC_1.c ****     #if(0u != ADC_1_ANY_CONFIG_USES_FILTER)	
 636:Generated_Source\PSoC4/ADC_1.c ****     	if((ADC_1_allConfigs[ADC_1_currentConfig].miscConfig 
 637:Generated_Source\PSoC4/ADC_1.c ****     	   & ADC_1_MISC_CONFIG_FILTER_PRESENT_MSK) 
 638:Generated_Source\PSoC4/ADC_1.c ****     	   == ADC_1_MISC_CONFIG_FILTER_PRESENT_MSK)
 639:Generated_Source\PSoC4/ADC_1.c ****     	{
 640:Generated_Source\PSoC4/ADC_1.c ****     		ADC_1_UABH_A_Stop();
 641:Generated_Source\PSoC4/ADC_1.c ****     		ADC_1_UABH_B_Stop();
 642:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_FILTERAGND2SAR_BUFFER_Stop();
 643:Generated_Source\PSoC4/ADC_1.c ****     	}
 644:Generated_Source\PSoC4/ADC_1.c ****     #endif /* ADC_1_ANY_CONFIG_USES_FILTER != 0u */
 645:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_CTRL_REG &= (uint32)~ADC_1_SAR_CTRL_ENABLED_MSK;
 646:Generated_Source\PSoC4/ADC_1.c ****     return;
 647:Generated_Source\PSoC4/ADC_1.c **** }
 648:Generated_Source\PSoC4/ADC_1.c **** 
 649:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
 650:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_InitConfig
 651:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//*
 652:Generated_Source\PSoC4/ADC_1.c **** *
 653:Generated_Source\PSoC4/ADC_1.c **** * \brief Configures all of the registers for a given configuration for scanning.
 654:Generated_Source\PSoC4/ADC_1.c **** *
 655:Generated_Source\PSoC4/ADC_1.c **** * \param scan Number of scan defined in the ADC_1.
 656:Generated_Source\PSoC4/ADC_1.c **** *
 657:Generated_Source\PSoC4/ADC_1.c **** * \return None
 658:Generated_Source\PSoC4/ADC_1.c **** *
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 13


 659:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
 660:Generated_Source\PSoC4/ADC_1.c **** *
 661:Generated_Source\PSoC4/ADC_1.c **** * <b>Code Snippet</b>
 662:Generated_Source\PSoC4/ADC_1.c **** *  \snippet main.c snippet_ADC_1_InitConfig
 663:Generated_Source\PSoC4/ADC_1.c **** *
 664:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 665:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_InitConfig(const ADC_1_CONFIG_STRUCT *config)
 666:Generated_Source\PSoC4/ADC_1.c **** {
 667:Generated_Source\PSoC4/ADC_1.c **** 	uint32 chNum;
 668:Generated_Source\PSoC4/ADC_1.c ****     uint32 tmpRegVal;
 669:Generated_Source\PSoC4/ADC_1.c **** 	
 670:Generated_Source\PSoC4/ADC_1.c ****     /* If there is an internal SAR clock, set up its divider values. */
 671:Generated_Source\PSoC4/ADC_1.c ****     #if (ADC_1_CLOCK_INTERNAL)
 672:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_intSarClock_Stop();
 673:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_intSarClock_SetFractionalDividerRegister(config->clkDivider, 0u);
 674:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_intSarClock_Start();
 675:Generated_Source\PSoC4/ADC_1.c ****     #endif /* ADC_1_CLOCK_INTERNAL */
 676:Generated_Source\PSoC4/ADC_1.c ****     
 677:Generated_Source\PSoC4/ADC_1.c ****     /* If the current configuration has a filter, set up the UAB clock divider values. */
 678:Generated_Source\PSoC4/ADC_1.c ****     #if(0u != ADC_1_ANY_CONFIG_USES_FILTER)	        
 679:Generated_Source\PSoC4/ADC_1.c ****     	if((config->miscConfig & ADC_1_MISC_CONFIG_FILTER_PRESENT_MSK) 
 680:Generated_Source\PSoC4/ADC_1.c ****     	    == ADC_1_MISC_CONFIG_FILTER_PRESENT_MSK)
 681:Generated_Source\PSoC4/ADC_1.c ****     	{
 682:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_intUabClock_Stop(); 
 683:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_intUabClock_SetFractionalDividerRegister(config->filterClkDivider, 0u); 
 684:Generated_Source\PSoC4/ADC_1.c ****             #if defined(ADC_1_cy_psoc4_sar_1__CLOCK_DIV_ID)
 685:Generated_Source\PSoC4/ADC_1.c ****                 /* If the SAR clock divider ID is known,
 686:Generated_Source\PSoC4/ADC_1.c ****                  * start the internal UAB divider aligned to the SAR divider. */
 687:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_intUabClock_StartEx(ADC_1_cy_psoc4_sar_1__CLOCK_DIV_ID);
 688:Generated_Source\PSoC4/ADC_1.c ****             #else
 689:Generated_Source\PSoC4/ADC_1.c ****                 /* Otherwise start it unaligned. */
 690:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_intUabClock_Start();
 691:Generated_Source\PSoC4/ADC_1.c ****             #endif
 692:Generated_Source\PSoC4/ADC_1.c ****     	}
 693:Generated_Source\PSoC4/ADC_1.c ****     #endif /* ADC_1_ANY_CONFIG_USES_FILTER != 0u */
 694:Generated_Source\PSoC4/ADC_1.c ****     
 695:Generated_Source\PSoC4/ADC_1.c ****     /* Init SAR and MUX registers */
 696:Generated_Source\PSoC4/ADC_1.c **** 	/* Enable the SAR internal pump when global pump is enabled */
 697:Generated_Source\PSoC4/ADC_1.c **** 	ADC_1_SAR_CTRL_REG = config->ctrl
 698:Generated_Source\PSoC4/ADC_1.c ****         | (((ADC_1_PUMP_CTRL_REG & ADC_1_PUMP_CTRL_ENABLED) != 0u) 
 699:Generated_Source\PSoC4/ADC_1.c ****             ? ADC_1_SAR_CTRL_BOOSTPUMP_EN_MSK : 0u);
 700:Generated_Source\PSoC4/ADC_1.c **** 	
 701:Generated_Source\PSoC4/ADC_1.c **** 	ADC_1_SAR_SAMPLE_CTRL_REG = config->sampleCtrl;
 702:Generated_Source\PSoC4/ADC_1.c **** 	ADC_1_SAR_RANGE_THRES_REG = config->rangeThres;	
 703:Generated_Source\PSoC4/ADC_1.c **** 	ADC_1_SAR_RANGE_COND_REG = config->rangeCond;
 704:Generated_Source\PSoC4/ADC_1.c **** 	ADC_1_SAR_SAMPLE_TIME01_REG = config->sampleTime01;
 705:Generated_Source\PSoC4/ADC_1.c **** 	ADC_1_SAR_SAMPLE_TIME23_REG = config->sampleTime23;
 706:Generated_Source\PSoC4/ADC_1.c ****     
 707:Generated_Source\PSoC4/ADC_1.c **** 	/* Connect Vminus to VSSA when even one channel is single-ended or multiple channels configured */
 708:Generated_Source\PSoC4/ADC_1.c **** 	if(1u == ADC_1_MUX_SWITCH0_INIT)
 709:Generated_Source\PSoC4/ADC_1.c **** 	{
 710:Generated_Source\PSoC4/ADC_1.c **** 		ADC_1_MUX_SWITCH0_REG |= ADC_1_MUX_FW_VSSA_VMINUS;
 711:Generated_Source\PSoC4/ADC_1.c **** 		/* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 712:Generated_Source\PSoC4/ADC_1.c **** 		if(1ul < config->numChannels)
 713:Generated_Source\PSoC4/ADC_1.c **** 		{
 714:Generated_Source\PSoC4/ADC_1.c **** 			ADC_1_MUX_SWITCH_HW_CTRL_REG |= ADC_1_MUX_FW_VSSA_VMINUS;
 715:Generated_Source\PSoC4/ADC_1.c **** 		}
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 14


 716:Generated_Source\PSoC4/ADC_1.c **** 	}
 717:Generated_Source\PSoC4/ADC_1.c ****     
 718:Generated_Source\PSoC4/ADC_1.c **** 	/* Clear and set interrupt masks */
 719:Generated_Source\PSoC4/ADC_1.c **** 	ADC_1_SAR_SATURATE_INTR_MASK_REG = 0u;
 720:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_INTR_MASK_REG = 0u;	
 721:Generated_Source\PSoC4/ADC_1.c **** 	ADC_1_SAR_SATURATE_INTR_MASK_REG = config->satIntMask;
 722:Generated_Source\PSoC4/ADC_1.c **** 	ADC_1_SAR_RANGE_INTR_MASK_REG = config->rangeIntMask;
 723:Generated_Source\PSoC4/ADC_1.c **** 	ADC_1_SAR_INTR_MASK_REG = ADC_1_EOS_MASK;
 724:Generated_Source\PSoC4/ADC_1.c ****     
 725:Generated_Source\PSoC4/ADC_1.c **** 	/* Double the non-overlap delay and latch enable time when using */
 726:Generated_Source\PSoC4/ADC_1.c ****     /* internal reference without bypass cap */
 727:Generated_Source\PSoC4/ADC_1.c ****     tmpRegVal = ADC_1_SAR_DFT_CTRL_REG;
 728:Generated_Source\PSoC4/ADC_1.c **** 	if(((config->ctrl & ADC_1__SAR_CTRL_VREF_BYP_AND_SEL_MSK) 
 729:Generated_Source\PSoC4/ADC_1.c **** 	    == ADC_1__INTERNAL1024) 
 730:Generated_Source\PSoC4/ADC_1.c **** 	    || ((config->ctrl & ADC_1__SAR_CTRL_VREF_BYP_AND_SEL_MSK) 
 731:Generated_Source\PSoC4/ADC_1.c **** 	    == ADC_1__INTERNALVREF))
 732:Generated_Source\PSoC4/ADC_1.c **** 	{
 733:Generated_Source\PSoC4/ADC_1.c ****         tmpRegVal &= ~ADC_1_SAR_DFT_CTRL_DCEN_MSK;
 734:Generated_Source\PSoC4/ADC_1.c **** 		tmpRegVal |= ADC_1_SAR_DFT_CTRL_DLY_INC_MSK;
 735:Generated_Source\PSoC4/ADC_1.c **** 	}
 736:Generated_Source\PSoC4/ADC_1.c **** 	else
 737:Generated_Source\PSoC4/ADC_1.c **** 	{
 738:Generated_Source\PSoC4/ADC_1.c **** 		tmpRegVal |= ADC_1_SAR_DFT_CTRL_DCEN_MSK;
 739:Generated_Source\PSoC4/ADC_1.c ****         tmpRegVal &= (uint32)~ADC_1_SAR_DFT_CTRL_DLY_INC_MSK;
 740:Generated_Source\PSoC4/ADC_1.c **** 	}	
 741:Generated_Source\PSoC4/ADC_1.c **** 	ADC_1_SAR_DFT_CTRL_REG = tmpRegVal;
 742:Generated_Source\PSoC4/ADC_1.c **** 	
 743:Generated_Source\PSoC4/ADC_1.c **** 	for(chNum = 0u; chNum < config->numChannels; chNum++)
 744:Generated_Source\PSoC4/ADC_1.c ****     {
 745:Generated_Source\PSoC4/ADC_1.c **** 		tmpRegVal = (ADC_1_channelsConfig[config->channelBase + chNum] 
 746:Generated_Source\PSoC4/ADC_1.c **** 		& ADC_1_CHANNEL_CONFIG_MASK);
 747:Generated_Source\PSoC4/ADC_1.c ****         
 748:Generated_Source\PSoC4/ADC_1.c ****         #if(ADC_1_TOTAL_CHANNELS_NUM > 1)
 749:Generated_Source\PSoC4/ADC_1.c ****             tmpRegVal |= ADC_1_InputsPlacement[config->channelBase + chNum];
 750:Generated_Source\PSoC4/ADC_1.c ****             /*Non-paired differential channels set NEG_ADDR_EN and clear DIFFERENTIAL_EN */
 751:Generated_Source\PSoC4/ADC_1.c ****             if(0u != (ADC_1_InputsPlacement[config->channelBase + chNum] & ADC_1_CHANNEL_CONFIG_NEG
 752:Generated_Source\PSoC4/ADC_1.c ****             {
 753:Generated_Source\PSoC4/ADC_1.c ****                 tmpRegVal &= ~ADC_1_SAR_CHAN_CONFIG_DIFFERENTIAL_EN_MSK;
 754:Generated_Source\PSoC4/ADC_1.c ****             }
 755:Generated_Source\PSoC4/ADC_1.c ****         #endif
 756:Generated_Source\PSoC4/ADC_1.c ****         
 757:Generated_Source\PSoC4/ADC_1.c **** 		CY_SET_REG32((reg32 *)(ADC_1_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 758:Generated_Source\PSoC4/ADC_1.c **** 	}
 759:Generated_Source\PSoC4/ADC_1.c **** 	
 760:Generated_Source\PSoC4/ADC_1.c ****     return;
 761:Generated_Source\PSoC4/ADC_1.c **** }
 762:Generated_Source\PSoC4/ADC_1.c **** 
 763:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
 764:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SelectConfig
 765:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//* 
 766:Generated_Source\PSoC4/ADC_1.c **** *
 767:Generated_Source\PSoC4/ADC_1.c **** * \brief Selects the predefined configuration for scanning. Disables
 768:Generated_Source\PSoC4/ADC_1.c **** * and re-enables the SAR and filter (if filter used).
 769:Generated_Source\PSoC4/ADC_1.c **** * 
 770:Generated_Source\PSoC4/ADC_1.c **** * \param config Number of configuration  in the ADC_1.
 771:Generated_Source\PSoC4/ADC_1.c **** * 
 772:Generated_Source\PSoC4/ADC_1.c **** * \param restart Determines if the ADC_1 should be  restarted after 
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 15


 773:Generated_Source\PSoC4/ADC_1.c **** * selecting the configuration.
 774:Generated_Source\PSoC4/ADC_1.c **** **
 775:Generated_Source\PSoC4/ADC_1.c **** * <b>Code Snippet</b>
 776:Generated_Source\PSoC4/ADC_1.c **** *  \snippet main.c snippet_ADC_1_SelectConfig
 777:Generated_Source\PSoC4/ADC_1.c **** *
 778:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 779:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SelectConfig(uint32 config, uint32 restart)
 780:Generated_Source\PSoC4/ADC_1.c **** {
 781:Generated_Source\PSoC4/ADC_1.c ****     /* Check whether the configuration number is valid or not */
 782:Generated_Source\PSoC4/ADC_1.c ****     if(ADC_1_TOTAL_CONFIGS > config)
 783:Generated_Source\PSoC4/ADC_1.c ****     {        
 784:Generated_Source\PSoC4/ADC_1.c ****         /* Stop the ADC before changing configurations */
 785:Generated_Source\PSoC4/ADC_1.c **** 	    ADC_1_Stop();
 786:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_selected = 1u;
 787:Generated_Source\PSoC4/ADC_1.c ****         
 788:Generated_Source\PSoC4/ADC_1.c ****     	if(0u == ADC_1_initVar)
 789:Generated_Source\PSoC4/ADC_1.c ****     	{
 790:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_Init();
 791:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_initVar |= ADC_1_INIT_VAR_INIT_FLAG;
 792:Generated_Source\PSoC4/ADC_1.c ****     	}
 793:Generated_Source\PSoC4/ADC_1.c ****         #if (ADC_1_VREF_ROUTED)
 794:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_vrefAMux_DisconnectAll();
 795:Generated_Source\PSoC4/ADC_1.c ****         #endif
 796:Generated_Source\PSoC4/ADC_1.c ****     	ADC_1_InitConfig(&ADC_1_allConfigs[config]);
 797:Generated_Source\PSoC4/ADC_1.c ****         #if (ADC_1_VREF_ROUTED)
 798:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_vrefAMux_Select((uint8)config);
 799:Generated_Source\PSoC4/ADC_1.c ****         #endif
 800:Generated_Source\PSoC4/ADC_1.c ****         #if(0u != ADC_1_ANY_CONFIG_USES_FILTER)
 801:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_filterVinMux_Select((uint8)config);
 802:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_filterInit(config);
 803:Generated_Source\PSoC4/ADC_1.c ****         #endif
 804:Generated_Source\PSoC4/ADC_1.c ****     	ADC_1_SAR_CHAN_EN_REG = ADC_1_allConfigs[config].chanEn;
 805:Generated_Source\PSoC4/ADC_1.c ****     	ADC_1_SAR_RANGE_INTR_MASK_REG = ADC_1_allConfigs[config].rangeIntMask;
 806:Generated_Source\PSoC4/ADC_1.c ****     	ADC_1_SAR_SATURATE_INTR_MASK_REG = ADC_1_allConfigs[config].satIntMask;
 807:Generated_Source\PSoC4/ADC_1.c ****     	ADC_1_currentConfig = config;
 808:Generated_Source\PSoC4/ADC_1.c ****         
 809:Generated_Source\PSoC4/ADC_1.c ****         if(1u == restart)
 810:Generated_Source\PSoC4/ADC_1.c ****         {
 811:Generated_Source\PSoC4/ADC_1.c ****             /* Restart the ADC */    
 812:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_Start();
 813:Generated_Source\PSoC4/ADC_1.c ****             
 814:Generated_Source\PSoC4/ADC_1.c ****             /* Restart the scan */
 815:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_StartConvert();
 816:Generated_Source\PSoC4/ADC_1.c ****         }
 817:Generated_Source\PSoC4/ADC_1.c ****     }
 818:Generated_Source\PSoC4/ADC_1.c ****     return;
 819:Generated_Source\PSoC4/ADC_1.c **** }
 820:Generated_Source\PSoC4/ADC_1.c **** 
 821:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 822:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_StartConvert
 823:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
 824:Generated_Source\PSoC4/ADC_1.c **** *
 825:Generated_Source\PSoC4/ADC_1.c **** * \brief In continuous mode, this API starts the conversion process and it runs 
 826:Generated_Source\PSoC4/ADC_1.c **** * continuously. 
 827:Generated_Source\PSoC4/ADC_1.c **** 
 828:Generated_Source\PSoC4/ADC_1.c **** * In Single Shot mode, the function triggers a single scan and 
 829:Generated_Source\PSoC4/ADC_1.c **** * every scan requires a call of this function. The mode is set with the 
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 16


 830:Generated_Source\PSoC4/ADC_1.c **** * Sample Mode parameter in the customizer. The customizer setting can be 
 831:Generated_Source\PSoC4/ADC_1.c **** * overridden at run time with the ADC_1_SetConvertMode() function.
 832:Generated_Source\PSoC4/ADC_1.c **** * 
 833:Generated_Source\PSoC4/ADC_1.c **** * \param None
 834:Generated_Source\PSoC4/ADC_1.c **** * 
 835:Generated_Source\PSoC4/ADC_1.c **** * \return None
 836:Generated_Source\PSoC4/ADC_1.c **** * 
 837:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
 838:Generated_Source\PSoC4/ADC_1.c **** *
 839:Generated_Source\PSoC4/ADC_1.c **** * <b>Code Snippet</b>
 840:Generated_Source\PSoC4/ADC_1.c **** *  \snippet main.c snippet_ADC_1_StartConvert
 841:Generated_Source\PSoC4/ADC_1.c **** *
 842:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 843:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_StartConvert(void)
 844:Generated_Source\PSoC4/ADC_1.c **** {
 845:Generated_Source\PSoC4/ADC_1.c **** 	/* Freerunning mode */
 846:Generated_Source\PSoC4/ADC_1.c **** 	if((ADC_1_SAR_SAMPLE_CTRL_REG 
 847:Generated_Source\PSoC4/ADC_1.c **** 		& ADC_1_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK) 
 848:Generated_Source\PSoC4/ADC_1.c **** 		== ADC_1_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK)
 849:Generated_Source\PSoC4/ADC_1.c ****     {
 850:Generated_Source\PSoC4/ADC_1.c **** 		ADC_1_SAR_SAMPLE_CTRL_REG |= ADC_1_SAR_SAMPLE_CTRL_CONTINUOUS_MSK ;
 851:Generated_Source\PSoC4/ADC_1.c **** 	}
 852:Generated_Source\PSoC4/ADC_1.c **** 	else /* Firmware trigger */
 853:Generated_Source\PSoC4/ADC_1.c **** 	{
 854:Generated_Source\PSoC4/ADC_1.c **** 		ADC_1_SAR_START_CTRL_REG = ADC_1_SAR_START_CTRL_FW_TRIGGER_MSK;
 855:Generated_Source\PSoC4/ADC_1.c **** 	}
 856:Generated_Source\PSoC4/ADC_1.c ****     
 857:Generated_Source\PSoC4/ADC_1.c ****     return;
 858:Generated_Source\PSoC4/ADC_1.c **** }
 859:Generated_Source\PSoC4/ADC_1.c **** 
 860:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 861:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_StopConvert
 862:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
 863:Generated_Source\PSoC4/ADC_1.c **** *
 864:Generated_Source\PSoC4/ADC_1.c **** * \brief Forces the ADC_1 to stop conversions. If a conversion is 
 865:Generated_Source\PSoC4/ADC_1.c **** * currently executing, that conversion will complete, but no further conversions 
 866:Generated_Source\PSoC4/ADC_1.c **** * will occur.
 867:Generated_Source\PSoC4/ADC_1.c **** * 
 868:Generated_Source\PSoC4/ADC_1.c **** * \param None
 869:Generated_Source\PSoC4/ADC_1.c **** *
 870:Generated_Source\PSoC4/ADC_1.c **** * \return None
 871:Generated_Source\PSoC4/ADC_1.c **** *
 872:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
 873:Generated_Source\PSoC4/ADC_1.c **** *
 874:Generated_Source\PSoC4/ADC_1.c **** * <b>Code Snippet</b>
 875:Generated_Source\PSoC4/ADC_1.c **** *  \snippet main.c snippet_ADC_1_StopConvert
 876:Generated_Source\PSoC4/ADC_1.c **** *
 877:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 878:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_StopConvert(void)
 879:Generated_Source\PSoC4/ADC_1.c **** {
 880:Generated_Source\PSoC4/ADC_1.c ****     if((ADC_1_SAR_SAMPLE_CTRL_REG  
 881:Generated_Source\PSoC4/ADC_1.c **** 		& ADC_1_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK) 
 882:Generated_Source\PSoC4/ADC_1.c **** 		== ADC_1_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK)
 883:Generated_Source\PSoC4/ADC_1.c **** 	{
 884:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_SAMPLE_CTRL_REG &= ~ADC_1_SAR_SAMPLE_CTRL_CONTINUOUS_MSK;
 885:Generated_Source\PSoC4/ADC_1.c ****         
 886:Generated_Source\PSoC4/ADC_1.c ****         if((ADC_1_allConfigs[ADC_1_currentConfig].miscConfig 
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 17


 887:Generated_Source\PSoC4/ADC_1.c ****             & ADC_1_MISC_CONFIG_FILTER_PRESENT_MSK) 
 888:Generated_Source\PSoC4/ADC_1.c ****     	    == ADC_1_MISC_CONFIG_FILTER_PRESENT_MSK)
 889:Generated_Source\PSoC4/ADC_1.c ****         {
 890:Generated_Source\PSoC4/ADC_1.c ****             /* Re-synchronize the Filter if a filter is present */
 891:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_Stop();
 892:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_Start();
 893:Generated_Source\PSoC4/ADC_1.c ****         }
 894:Generated_Source\PSoC4/ADC_1.c **** 	}
 895:Generated_Source\PSoC4/ADC_1.c ****     
 896:Generated_Source\PSoC4/ADC_1.c ****     return;
 897:Generated_Source\PSoC4/ADC_1.c **** }
 898:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 899:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetConvertMode
 900:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
 901:Generated_Source\PSoC4/ADC_1.c **** *
 902:Generated_Source\PSoC4/ADC_1.c **** * \brief Sets the conversion mode to either Single-Shot or continuous. This 
 903:Generated_Source\PSoC4/ADC_1.c **** * function overrides the settings applied in the customizer. Changing 
 904:Generated_Source\PSoC4/ADC_1.c **** * configurations will restore the values set in the customizer.
 905:Generated_Source\PSoC4/ADC_1.c **** *
 906:Generated_Source\PSoC4/ADC_1.c **** * \param mode Sets the conversion mode. See table below for details.
 907:Generated_Source\PSoC4/ADC_1.c **** * | Options                          | Description                             |
 908:Generated_Source\PSoC4/ADC_1.c **** * | :------------------------------- | :-------------------------------------- |
 909:Generated_Source\PSoC4/ADC_1.c **** * | ADC_1_SINGLE_SHOT     | Calling the ADC_1_StartConvert() function after setting mode this will 
 910:Generated_Source\PSoC4/ADC_1.c **** * | ADC_1_CONTINUOUS      | Calling the ADC_1_StartConvert() function after setting this mode trigg
 911:Generated_Source\PSoC4/ADC_1.c **** *
 912:Generated_Source\PSoC4/ADC_1.c **** * \return None
 913:Generated_Source\PSoC4/ADC_1.c **** * 
 914:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
 915:Generated_Source\PSoC4/ADC_1.c **** *
 916:Generated_Source\PSoC4/ADC_1.c **** * <b>Code Snippet</b>
 917:Generated_Source\PSoC4/ADC_1.c **** *  \snippet main.c snippet_ADC_1_SetConvertMode
 918:Generated_Source\PSoC4/ADC_1.c **** *
 919:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 920:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetConvertMode(uint32 mode)
 921:Generated_Source\PSoC4/ADC_1.c **** {
 922:Generated_Source\PSoC4/ADC_1.c ****     if(ADC_1_CONTINUOUS == mode)
 923:Generated_Source\PSoC4/ADC_1.c ****     {
 924:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_SAMPLE_CTRL_REG |= ADC_1_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK;       
 925:Generated_Source\PSoC4/ADC_1.c ****     }
 926:Generated_Source\PSoC4/ADC_1.c ****     else
 927:Generated_Source\PSoC4/ADC_1.c ****     {
 928:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_SAMPLE_CTRL_REG &= ~ADC_1_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK;       
 929:Generated_Source\PSoC4/ADC_1.c ****     }
 930:Generated_Source\PSoC4/ADC_1.c **** }
 931:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
 932:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_IRQ_Enable
 933:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//*
 934:Generated_Source\PSoC4/ADC_1.c **** *
 935:Generated_Source\PSoC4/ADC_1.c **** * \brief Enables interrupts to occur at the end of a conversion. Global 
 936:Generated_Source\PSoC4/ADC_1.c **** * interrupts must also be enabled for the ADC_1 interrupts to occur.
 937:Generated_Source\PSoC4/ADC_1.c **** *
 938:Generated_Source\PSoC4/ADC_1.c **** * \param None
 939:Generated_Source\PSoC4/ADC_1.c **** *
 940:Generated_Source\PSoC4/ADC_1.c **** * \return None
 941:Generated_Source\PSoC4/ADC_1.c **** *
 942:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
 943:Generated_Source\PSoC4/ADC_1.c **** *
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 18


 944:Generated_Source\PSoC4/ADC_1.c **** * <b>Code Snippet</b>
 945:Generated_Source\PSoC4/ADC_1.c **** *  \snippet main.c snippet_ADC_1_IRQ_Enable
 946:Generated_Source\PSoC4/ADC_1.c **** *
 947:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 948:Generated_Source\PSoC4/ADC_1.c **** 
 949:Generated_Source\PSoC4/ADC_1.c **** 
 950:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
 951:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_IRQ_Disable
 952:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//* 
 953:Generated_Source\PSoC4/ADC_1.c **** *
 954:Generated_Source\PSoC4/ADC_1.c **** * \brief Disables end of conversion interrupts. 
 955:Generated_Source\PSoC4/ADC_1.c **** *
 956:Generated_Source\PSoC4/ADC_1.c **** * \param None
 957:Generated_Source\PSoC4/ADC_1.c **** * 
 958:Generated_Source\PSoC4/ADC_1.c **** * \return None
 959:Generated_Source\PSoC4/ADC_1.c **** * 
 960:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
 961:Generated_Source\PSoC4/ADC_1.c **** *
 962:Generated_Source\PSoC4/ADC_1.c **** * <b>Code Snippet</b>
 963:Generated_Source\PSoC4/ADC_1.c **** *  \snippet main.c snippet_ADC_1_IRQ_Disable
 964:Generated_Source\PSoC4/ADC_1.c **** *
 965:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 966:Generated_Source\PSoC4/ADC_1.c **** 
 967:Generated_Source\PSoC4/ADC_1.c **** 
 968:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 969:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetEosMask
 970:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
 971:Generated_Source\PSoC4/ADC_1.c **** *
 972:Generated_Source\PSoC4/ADC_1.c **** * \brief Sets of clears the End of Scan (EOS) interrupt mask. 
 973:Generated_Source\PSoC4/ADC_1.c **** *
 974:Generated_Source\PSoC4/ADC_1.c **** * \param mask 1 to set the mask, 0 to clear the mask.
 975:Generated_Source\PSoC4/ADC_1.c **** *
 976:Generated_Source\PSoC4/ADC_1.c **** * \return None
 977:Generated_Source\PSoC4/ADC_1.c **** * 
 978:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect All other bits in the INTR register are cleared by this function.
 979:Generated_Source\PSoC4/ADC_1.c **** *
 980:Generated_Source\PSoC4/ADC_1.c **** * <b>Code Snippet</b>
 981:Generated_Source\PSoC4/ADC_1.c **** *  \snippet main.c snippet_ADC_1_SetEosMask
 982:Generated_Source\PSoC4/ADC_1.c **** *
 983:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
 984:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetEosMask(uint32 mask)
 985:Generated_Source\PSoC4/ADC_1.c **** {
 986:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_INTR_MASK_REG = mask & ADC_1_EOS_MASK;
 987:Generated_Source\PSoC4/ADC_1.c ****     
 988:Generated_Source\PSoC4/ADC_1.c ****     return;
 989:Generated_Source\PSoC4/ADC_1.c **** }
 990:Generated_Source\PSoC4/ADC_1.c **** 
 991:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
 992:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetChanMask
 993:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//*
 994:Generated_Source\PSoC4/ADC_1.c **** *
 995:Generated_Source\PSoC4/ADC_1.c **** * \brief Sets enable/disable mask for all channels in current configuration.
 996:Generated_Source\PSoC4/ADC_1.c **** *
 997:Generated_Source\PSoC4/ADC_1.c **** *
 998:Generated_Source\PSoC4/ADC_1.c **** * \param enableMask
 999:Generated_Source\PSoC4/ADC_1.c **** *  Channel enable/disable mask.
1000:Generated_Source\PSoC4/ADC_1.c **** *
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 19


1001:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect
1002:Generated_Source\PSoC4/ADC_1.c **** *  None.
1003:Generated_Source\PSoC4/ADC_1.c **** *
1004:Generated_Source\PSoC4/ADC_1.c **** * <b>Code Snippet</b>
1005:Generated_Source\PSoC4/ADC_1.c **** *  \snippet main.c snippet_ADC_1_SetChanMask
1006:Generated_Source\PSoC4/ADC_1.c **** *
1007:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1008:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetChanMask(uint32 enableMask)
1009:Generated_Source\PSoC4/ADC_1.c **** {
1010:Generated_Source\PSoC4/ADC_1.c ****     uint32 chanCount = ADC_1_allConfigs[ADC_1_currentConfig].numChannels;
1011:Generated_Source\PSoC4/ADC_1.c ****     enableMask &= (uint32)((uint32)(1ul << chanCount) - 1ul);
1012:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_CHAN_EN_REG = enableMask;
1013:Generated_Source\PSoC4/ADC_1.c ****     return;
1014:Generated_Source\PSoC4/ADC_1.c **** }
1015:Generated_Source\PSoC4/ADC_1.c **** 
1016:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1017:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_IsEndConversion
1018:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1019:Generated_Source\PSoC4/ADC_1.c **** *
1020:Generated_Source\PSoC4/ADC_1.c **** * \brief Immediately returns the status of the conversion or does not return 
1021:Generated_Source\PSoC4/ADC_1.c **** * (blocking) until the conversion completes, depending on the retMode parameter.
1022:Generated_Source\PSoC4/ADC_1.c **** *
1023:Generated_Source\PSoC4/ADC_1.c **** * \param retMode Check conversion return mode. See the following table for 
1024:Generated_Source\PSoC4/ADC_1.c **** * options.
1025:Generated_Source\PSoC4/ADC_1.c **** * | Options                              | Description                             |
1026:Generated_Source\PSoC4/ADC_1.c **** * | :-------------------------------     | :-------------------------------------- |
1027:Generated_Source\PSoC4/ADC_1.c **** * | ADC_1_RETURN_STATUS       | Immediately returns the conversion status for sequential channels. 
1028:Generated_Source\PSoC4/ADC_1.c **** * | ADC_1_WAIT_FOR_RESULT     | Does not return a result until the ADC_1 conversion of all sequenti
1029:Generated_Source\PSoC4/ADC_1.c **** * | ADC_1_RETURN_STATUS_INJ   | Immediately returns the conversion status for the injection channel
1030:Generated_Source\PSoC4/ADC_1.c **** * | ADC_1_WAIT_FOR_RESULT_INJ | Does not return a result until the ADC_1 completes injection channe
1031:Generated_Source\PSoC4/ADC_1.c **** * 
1032:Generated_Source\PSoC4/ADC_1.c **** * \return uint8: If a nonzero value is returned, the last conversion is complete. 
1033:Generated_Source\PSoC4/ADC_1.c **** * If the returned value is zero, the ADC_1 is still calculating the last result.
1034:Generated_Source\PSoC4/ADC_1.c **** *
1035:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect This function reads the end of conversion status, and clears it afterward.
1036:Generated_Source\PSoC4/ADC_1.c **** * 
1037:Generated_Source\PSoC4/ADC_1.c **** * <b>Code Snippet</b>
1038:Generated_Source\PSoC4/ADC_1.c **** *  \snippet main.c snippet_ADC_1_IsEndConversion
1039:Generated_Source\PSoC4/ADC_1.c **** *
1040:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1041:Generated_Source\PSoC4/ADC_1.c **** uint32 ADC_1_IsEndConversion(uint32 retMode)
1042:Generated_Source\PSoC4/ADC_1.c **** {
1043:Generated_Source\PSoC4/ADC_1.c ****     uint32 endOfConversion = 0u;
1044:Generated_Source\PSoC4/ADC_1.c ****     uint32 wdt = 0x3FFFFFFuL; /* Watchdog timer for blocking while loop */
1045:Generated_Source\PSoC4/ADC_1.c ****     if((ADC_1_RETURN_STATUS == retMode) || (ADC_1_WAIT_FOR_RESULT == retMode))
1046:Generated_Source\PSoC4/ADC_1.c ****     {
1047:Generated_Source\PSoC4/ADC_1.c ****         do
1048:Generated_Source\PSoC4/ADC_1.c ****         {
1049:Generated_Source\PSoC4/ADC_1.c ****             endOfConversion = ADC_1_SAR_INTR_REG & ADC_1_EOS_MASK;
1050:Generated_Source\PSoC4/ADC_1.c ****             wdt--;
1051:Generated_Source\PSoC4/ADC_1.c ****         }while(((0u == endOfConversion) 
1052:Generated_Source\PSoC4/ADC_1.c ****             && (((uint32) retMode & ADC_1_WAIT_FOR_RESULT) != 0u))
1053:Generated_Source\PSoC4/ADC_1.c ****             && (0uL != wdt));
1054:Generated_Source\PSoC4/ADC_1.c **** 
1055:Generated_Source\PSoC4/ADC_1.c ****         if(0u != endOfConversion)
1056:Generated_Source\PSoC4/ADC_1.c ****         {
1057:Generated_Source\PSoC4/ADC_1.c ****             /* Clear EOS bit */
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 20


1058:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_SAR_INTR_REG = ADC_1_EOS_MASK;
1059:Generated_Source\PSoC4/ADC_1.c ****         }
1060:Generated_Source\PSoC4/ADC_1.c ****     }
1061:Generated_Source\PSoC4/ADC_1.c ****     
1062:Generated_Source\PSoC4/ADC_1.c ****     return endOfConversion;
1063:Generated_Source\PSoC4/ADC_1.c **** }
1064:Generated_Source\PSoC4/ADC_1.c ****  
1065:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
1066:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_IsChannelSigned(uint32 chan)
1067:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//*
1068:Generated_Source\PSoC4/ADC_1.c **** *
1069:Generated_Source\PSoC4/ADC_1.c **** * Determines if the provided channel is in signed format. 
1070:Generated_Source\PSoC4/ADC_1.c **** *
1071:Generated_Source\PSoC4/ADC_1.c **** * \param chan The ADC_1 channel to check. 
1072:Generated_Source\PSoC4/ADC_1.c **** *
1073:Generated_Source\PSoC4/ADC_1.c **** * \return None
1074:Generated_Source\PSoC4/ADC_1.c **** * 
1075:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1076:Generated_Source\PSoC4/ADC_1.c **** *
1077:Generated_Source\PSoC4/ADC_1.c **** *
1078:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1079:Generated_Source\PSoC4/ADC_1.c **** static int32 ADC_1_IsChannelSigned(uint32 chan)
1080:Generated_Source\PSoC4/ADC_1.c **** {
  27              		.loc 1 1080 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
1081:Generated_Source\PSoC4/ADC_1.c ****     int32 isSigned = 0;
1082:Generated_Source\PSoC4/ADC_1.c ****     uint32 chanConfig;
1083:Generated_Source\PSoC4/ADC_1.c ****     
1084:Generated_Source\PSoC4/ADC_1.c ****     chanConfig = CY_GET_REG32((reg32 *)(ADC_1_SAR_CHAN_CONFIG_IND + (uint32)(chan << 2u)));
  33              		.loc 1 1084 0
  34 0000 8000     		lsls	r0, r0, #2
  35              	.LVL1:
  36 0002 114B     		ldr	r3, .L6
  37 0004 9C46     		mov	ip, r3
  38 0006 6044     		add	r0, r0, ip
  39 0008 0268     		ldr	r2, [r0]
  40              	.LVL2:
1085:Generated_Source\PSoC4/ADC_1.c ****     /* If differential mode */
1086:Generated_Source\PSoC4/ADC_1.c ****     if(0u != (chanConfig & ADC_1_CHANNEL_CONFIG_DIFF_ALL_MSK))
  41              		.loc 1 1086 0
  42 000a 104B     		ldr	r3, .L6+4
  43 000c 1A42     		tst	r2, r3
  44 000e 0BD0     		beq	.L2
1087:Generated_Source\PSoC4/ADC_1.c ****     {
1088:Generated_Source\PSoC4/ADC_1.c ****         /*If signed differential */
1089:Generated_Source\PSoC4/ADC_1.c ****         if((ADC_1_allConfigs[ADC_1_currentConfig].sampleCtrl 
  45              		.loc 1 1089 0
  46 0010 0F4B     		ldr	r3, .L6+8
  47 0012 1A68     		ldr	r2, [r3]
  48              	.LVL3:
  49 0014 D300     		lsls	r3, r2, #3
  50 0016 9A1A     		subs	r2, r3, r2
  51 0018 D300     		lsls	r3, r2, #3
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 21


  52 001a 0E4A     		ldr	r2, .L6+12
  53 001c D318     		adds	r3, r2, r3
  54 001e DB68     		ldr	r3, [r3, #12]
  55 0020 1B07     		lsls	r3, r3, #28
  56 0022 0DD4     		bmi	.L4
1081:Generated_Source\PSoC4/ADC_1.c ****     uint32 chanConfig;
  57              		.loc 1 1081 0
  58 0024 0020     		movs	r0, #0
  59 0026 0EE0     		b	.L3
  60              	.LVL4:
  61              	.L2:
1090:Generated_Source\PSoC4/ADC_1.c ****             & ADC_1_SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_MSK) != 0u)
1091:Generated_Source\PSoC4/ADC_1.c ****         {
1092:Generated_Source\PSoC4/ADC_1.c ****             isSigned = 1;
1093:Generated_Source\PSoC4/ADC_1.c ****         }
1094:Generated_Source\PSoC4/ADC_1.c ****     }
1095:Generated_Source\PSoC4/ADC_1.c ****     else
1096:Generated_Source\PSoC4/ADC_1.c ****     {
1097:Generated_Source\PSoC4/ADC_1.c ****         if((ADC_1_allConfigs[ADC_1_currentConfig].sampleCtrl
  62              		.loc 1 1097 0
  63 0028 094B     		ldr	r3, .L6+8
  64 002a 1A68     		ldr	r2, [r3]
  65              	.LVL5:
  66 002c D300     		lsls	r3, r2, #3
  67 002e 9A1A     		subs	r2, r3, r2
  68 0030 D300     		lsls	r3, r2, #3
  69 0032 084A     		ldr	r2, .L6+12
  70 0034 D318     		adds	r3, r2, r3
  71 0036 DB68     		ldr	r3, [r3, #12]
  72 0038 5B07     		lsls	r3, r3, #29
  73 003a 03D4     		bmi	.L5
1081:Generated_Source\PSoC4/ADC_1.c ****     uint32 chanConfig;
  74              		.loc 1 1081 0
  75 003c 0020     		movs	r0, #0
  76 003e 02E0     		b	.L3
  77              	.L4:
1092:Generated_Source\PSoC4/ADC_1.c ****         }
  78              		.loc 1 1092 0
  79 0040 0120     		movs	r0, #1
  80 0042 00E0     		b	.L3
  81              	.L5:
1098:Generated_Source\PSoC4/ADC_1.c ****             & ADC_1_SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_MSK) != 0u)
1099:Generated_Source\PSoC4/ADC_1.c ****         {
1100:Generated_Source\PSoC4/ADC_1.c ****             isSigned = 1;
  82              		.loc 1 1100 0
  83 0044 0120     		movs	r0, #1
  84              	.L3:
  85              	.LVL6:
1101:Generated_Source\PSoC4/ADC_1.c ****         }
1102:Generated_Source\PSoC4/ADC_1.c ****     }
1103:Generated_Source\PSoC4/ADC_1.c ****     return isSigned;
1104:Generated_Source\PSoC4/ADC_1.c **** }
  86              		.loc 1 1104 0
  87              		@ sp needed
  88 0046 7047     		bx	lr
  89              	.L7:
  90              		.align	2
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 22


  91              	.L6:
  92 0048 80003A40 		.word	1077543040
  93 004c 00010001 		.word	16777472
  94 0050 00000000 		.word	.LANCHOR0
  95 0054 00000000 		.word	ADC_1_allConfigs
  96              		.cfi_endproc
  97              	.LFE12:
  98              		.size	ADC_1_IsChannelSigned, .-ADC_1_IsChannelSigned
  99              		.section	.text.ADC_1_Stop,"ax",%progbits
 100              		.align	2
 101              		.global	ADC_1_Stop
 102              		.code	16
 103              		.thumb_func
 104              		.type	ADC_1_Stop, %function
 105              	ADC_1_Stop:
 106              	.LFB3:
 634:Generated_Source\PSoC4/ADC_1.c ****     #if(0u != ADC_1_ANY_CONFIG_USES_FILTER)	
 107              		.loc 1 634 0
 108              		.cfi_startproc
 109              		@ args = 0, pretend = 0, frame = 0
 110              		@ frame_needed = 0, uses_anonymous_args = 0
 111              		@ link register save eliminated.
 645:Generated_Source\PSoC4/ADC_1.c ****     return;
 112              		.loc 1 645 0
 113 0000 024A     		ldr	r2, .L9
 114 0002 1368     		ldr	r3, [r2]
 115 0004 5B00     		lsls	r3, r3, #1
 116 0006 5B08     		lsrs	r3, r3, #1
 117 0008 1360     		str	r3, [r2]
 647:Generated_Source\PSoC4/ADC_1.c **** 
 118              		.loc 1 647 0
 119              		@ sp needed
 120 000a 7047     		bx	lr
 121              	.L10:
 122              		.align	2
 123              	.L9:
 124 000c 00003A40 		.word	1077542912
 125              		.cfi_endproc
 126              	.LFE3:
 127              		.size	ADC_1_Stop, .-ADC_1_Stop
 128              		.section	.text.ADC_1_InitConfig,"ax",%progbits
 129              		.align	2
 130              		.global	ADC_1_InitConfig
 131              		.code	16
 132              		.thumb_func
 133              		.type	ADC_1_InitConfig, %function
 134              	ADC_1_InitConfig:
 135              	.LFB4:
 666:Generated_Source\PSoC4/ADC_1.c **** 	uint32 chNum;
 136              		.loc 1 666 0
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 0
 139              		@ frame_needed = 0, uses_anonymous_args = 0
 140              	.LVL7:
 141 0000 10B5     		push	{r4, lr}
 142              		.cfi_def_cfa_offset 8
 143              		.cfi_offset 4, -8
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 23


 144              		.cfi_offset 14, -4
 145 0002 0400     		movs	r4, r0
 672:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_intSarClock_SetFractionalDividerRegister(config->clkDivider, 0u);
 146              		.loc 1 672 0
 147 0004 FFF7FEFF 		bl	ADC_1_intSarClock_Stop
 148              	.LVL8:
 673:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_intSarClock_Start();
 149              		.loc 1 673 0
 150 0008 A08E     		ldrh	r0, [r4, #52]
 151 000a 0021     		movs	r1, #0
 152 000c FFF7FEFF 		bl	ADC_1_intSarClock_SetFractionalDividerRegister
 153              	.LVL9:
 674:Generated_Source\PSoC4/ADC_1.c ****     #endif /* ADC_1_CLOCK_INTERNAL */
 154              		.loc 1 674 0
 155 0010 FF20     		movs	r0, #255
 156 0012 FFF7FEFF 		bl	ADC_1_intSarClock_StartEx
 157              	.LVL10:
 697:Generated_Source\PSoC4/ADC_1.c ****         | (((ADC_1_PUMP_CTRL_REG & ADC_1_PUMP_CTRL_ENABLED) != 0u) 
 158              		.loc 1 697 0
 159 0016 A368     		ldr	r3, [r4, #8]
 698:Generated_Source\PSoC4/ADC_1.c ****             ? ADC_1_SAR_CTRL_BOOSTPUMP_EN_MSK : 0u);
 160              		.loc 1 698 0
 161 0018 2A4A     		ldr	r2, .L20
 162 001a 1268     		ldr	r2, [r2]
 163 001c 002A     		cmp	r2, #0
 164 001e 02DA     		bge	.L19
 165 0020 8022     		movs	r2, #128
 166 0022 5203     		lsls	r2, r2, #13
 167 0024 00E0     		b	.L12
 168              	.L19:
 169 0026 0022     		movs	r2, #0
 170              	.L12:
 698:Generated_Source\PSoC4/ADC_1.c ****             ? ADC_1_SAR_CTRL_BOOSTPUMP_EN_MSK : 0u);
 171              		.loc 1 698 0 is_stmt 0 discriminator 4
 172 0028 1343     		orrs	r3, r2
 697:Generated_Source\PSoC4/ADC_1.c ****         | (((ADC_1_PUMP_CTRL_REG & ADC_1_PUMP_CTRL_ENABLED) != 0u) 
 173              		.loc 1 697 0 is_stmt 1 discriminator 4
 174 002a 274A     		ldr	r2, .L20+4
 175 002c 1360     		str	r3, [r2]
 701:Generated_Source\PSoC4/ADC_1.c **** 	ADC_1_SAR_RANGE_THRES_REG = config->rangeThres;	
 176              		.loc 1 701 0 discriminator 4
 177 002e 274B     		ldr	r3, .L20+8
 178 0030 E268     		ldr	r2, [r4, #12]
 179 0032 1A60     		str	r2, [r3]
 702:Generated_Source\PSoC4/ADC_1.c **** 	ADC_1_SAR_RANGE_COND_REG = config->rangeCond;
 180              		.loc 1 702 0 discriminator 4
 181 0034 264B     		ldr	r3, .L20+12
 182 0036 A269     		ldr	r2, [r4, #24]
 183 0038 1A60     		str	r2, [r3]
 703:Generated_Source\PSoC4/ADC_1.c **** 	ADC_1_SAR_SAMPLE_TIME01_REG = config->sampleTime01;
 184              		.loc 1 703 0 discriminator 4
 185 003a 264B     		ldr	r3, .L20+16
 186 003c E269     		ldr	r2, [r4, #28]
 187 003e 1A60     		str	r2, [r3]
 704:Generated_Source\PSoC4/ADC_1.c **** 	ADC_1_SAR_SAMPLE_TIME23_REG = config->sampleTime23;
 188              		.loc 1 704 0 discriminator 4
 189 0040 254B     		ldr	r3, .L20+20
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 24


 190 0042 2269     		ldr	r2, [r4, #16]
 191 0044 1A60     		str	r2, [r3]
 705:Generated_Source\PSoC4/ADC_1.c ****     
 192              		.loc 1 705 0 discriminator 4
 193 0046 254B     		ldr	r3, .L20+24
 194 0048 6269     		ldr	r2, [r4, #20]
 195 004a 1A60     		str	r2, [r3]
 719:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_INTR_MASK_REG = 0u;	
 196              		.loc 1 719 0 discriminator 4
 197 004c 244A     		ldr	r2, .L20+28
 198 004e 0021     		movs	r1, #0
 199 0050 1160     		str	r1, [r2]
 720:Generated_Source\PSoC4/ADC_1.c **** 	ADC_1_SAR_SATURATE_INTR_MASK_REG = config->satIntMask;
 200              		.loc 1 720 0 discriminator 4
 201 0052 244B     		ldr	r3, .L20+32
 202 0054 1960     		str	r1, [r3]
 721:Generated_Source\PSoC4/ADC_1.c **** 	ADC_1_SAR_RANGE_INTR_MASK_REG = config->rangeIntMask;
 203              		.loc 1 721 0 discriminator 4
 204 0056 A16A     		ldr	r1, [r4, #40]
 205 0058 1160     		str	r1, [r2]
 722:Generated_Source\PSoC4/ADC_1.c **** 	ADC_1_SAR_INTR_MASK_REG = ADC_1_EOS_MASK;
 206              		.loc 1 722 0 discriminator 4
 207 005a 626A     		ldr	r2, [r4, #36]
 208 005c 1A60     		str	r2, [r3]
 723:Generated_Source\PSoC4/ADC_1.c ****     
 209              		.loc 1 723 0 discriminator 4
 210 005e 0122     		movs	r2, #1
 211 0060 214B     		ldr	r3, .L20+36
 212 0062 1A60     		str	r2, [r3]
 727:Generated_Source\PSoC4/ADC_1.c **** 	if(((config->ctrl & ADC_1__SAR_CTRL_VREF_BYP_AND_SEL_MSK) 
 213              		.loc 1 727 0 discriminator 4
 214 0064 214B     		ldr	r3, .L20+40
 215 0066 1B68     		ldr	r3, [r3]
 216              	.LVL11:
 728:Generated_Source\PSoC4/ADC_1.c **** 	    == ADC_1__INTERNAL1024) 
 217              		.loc 1 728 0 discriminator 4
 218 0068 EF32     		adds	r2, r2, #239
 219 006a A168     		ldr	r1, [r4, #8]
 220 006c 0A40     		ands	r2, r1
 221 006e 402A     		cmp	r2, #64
 222 0070 01D0     		beq	.L13
 730:Generated_Source\PSoC4/ADC_1.c **** 	    == ADC_1__INTERNALVREF))
 223              		.loc 1 730 0
 224 0072 002A     		cmp	r2, #0
 225 0074 04D1     		bne	.L14
 226              	.L13:
 733:Generated_Source\PSoC4/ADC_1.c **** 		tmpRegVal |= ADC_1_SAR_DFT_CTRL_DLY_INC_MSK;
 227              		.loc 1 733 0
 228 0076 1E4A     		ldr	r2, .L20+44
 229 0078 1340     		ands	r3, r2
 230              	.LVL12:
 734:Generated_Source\PSoC4/ADC_1.c **** 	}
 231              		.loc 1 734 0
 232 007a 0122     		movs	r2, #1
 233 007c 1343     		orrs	r3, r2
 234              	.LVL13:
 235 007e 04E0     		b	.L15
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 25


 236              	.L14:
 237              	.LVL14:
 238 0080 0122     		movs	r2, #1
 239 0082 9343     		bics	r3, r2
 240              	.LVL15:
 739:Generated_Source\PSoC4/ADC_1.c **** 	}	
 241              		.loc 1 739 0
 242 0084 8022     		movs	r2, #128
 243 0086 9205     		lsls	r2, r2, #22
 244 0088 1343     		orrs	r3, r2
 245              	.LVL16:
 246              	.L15:
 741:Generated_Source\PSoC4/ADC_1.c **** 	
 247              		.loc 1 741 0
 248 008a 184A     		ldr	r2, .L20+40
 249 008c 1360     		str	r3, [r2]
 250              	.LVL17:
 743:Generated_Source\PSoC4/ADC_1.c ****     {
 251              		.loc 1 743 0
 252 008e 0021     		movs	r1, #0
 253 0090 13E0     		b	.L16
 254              	.LVL18:
 255              	.L18:
 745:Generated_Source\PSoC4/ADC_1.c **** 		& ADC_1_CHANNEL_CONFIG_MASK);
 256              		.loc 1 745 0
 257 0092 2368     		ldr	r3, [r4]
 258 0094 CA18     		adds	r2, r1, r3
 259 0096 9200     		lsls	r2, r2, #2
 260 0098 164B     		ldr	r3, .L20+48
 261 009a D058     		ldr	r0, [r2, r3]
 262 009c 164B     		ldr	r3, .L20+52
 263 009e 0340     		ands	r3, r0
 264              	.LVL19:
 749:Generated_Source\PSoC4/ADC_1.c ****             /*Non-paired differential channels set NEG_ADDR_EN and clear DIFFERENTIAL_EN */
 265              		.loc 1 749 0
 266 00a0 1648     		ldr	r0, .L20+56
 267 00a2 1258     		ldr	r2, [r2, r0]
 268 00a4 1343     		orrs	r3, r2
 269              	.LVL20:
 751:Generated_Source\PSoC4/ADC_1.c ****             {
 270              		.loc 1 751 0
 271 00a6 D201     		lsls	r2, r2, #7
 272 00a8 01D5     		bpl	.L17
 753:Generated_Source\PSoC4/ADC_1.c ****             }
 273              		.loc 1 753 0
 274 00aa 154A     		ldr	r2, .L20+60
 275 00ac 1340     		ands	r3, r2
 276              	.LVL21:
 277              	.L17:
 757:Generated_Source\PSoC4/ADC_1.c **** 	}
 278              		.loc 1 757 0 discriminator 2
 279 00ae 8A00     		lsls	r2, r1, #2
 280 00b0 1448     		ldr	r0, .L20+64
 281 00b2 8446     		mov	ip, r0
 282 00b4 6244     		add	r2, r2, ip
 283 00b6 1360     		str	r3, [r2]
 743:Generated_Source\PSoC4/ADC_1.c ****     {
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 26


 284              		.loc 1 743 0 discriminator 2
 285 00b8 0131     		adds	r1, r1, #1
 286              	.LVL22:
 287              	.L16:
 743:Generated_Source\PSoC4/ADC_1.c ****     {
 288              		.loc 1 743 0 is_stmt 0 discriminator 1
 289 00ba 6368     		ldr	r3, [r4, #4]
 290              	.LVL23:
 291 00bc 9942     		cmp	r1, r3
 292 00be E8D3     		bcc	.L18
 761:Generated_Source\PSoC4/ADC_1.c **** 
 293              		.loc 1 761 0 is_stmt 1
 294              		@ sp needed
 295              	.LVL24:
 296 00c0 10BD     		pop	{r4, pc}
 297              	.L21:
 298 00c2 C046     		.align	2
 299              	.L20:
 300 00c4 80033A40 		.word	1077543808
 301 00c8 00003A40 		.word	1077542912
 302 00cc 04003A40 		.word	1077542916
 303 00d0 18003A40 		.word	1077542936
 304 00d4 1C003A40 		.word	1077542940
 305 00d8 10003A40 		.word	1077542928
 306 00dc 14003A40 		.word	1077542932
 307 00e0 28023A40 		.word	1077543464
 308 00e4 38023A40 		.word	1077543480
 309 00e8 18023A40 		.word	1077543448
 310 00ec 30003A40 		.word	1077542960
 311 00f0 FFFFFFDF 		.word	-536870913
 312 00f4 00000000 		.word	.LANCHOR1
 313 00f8 00370080 		.word	-2147469568
 314 00fc 00000000 		.word	ADC_1_InputsPlacement
 315 0100 FFFEFFFF 		.word	-257
 316 0104 80003A40 		.word	1077543040
 317              		.cfi_endproc
 318              	.LFE4:
 319              		.size	ADC_1_InitConfig, .-ADC_1_InitConfig
 320              		.section	.text.ADC_1_StartConvert,"ax",%progbits
 321              		.align	2
 322              		.global	ADC_1_StartConvert
 323              		.code	16
 324              		.thumb_func
 325              		.type	ADC_1_StartConvert, %function
 326              	ADC_1_StartConvert:
 327              	.LFB6:
 844:Generated_Source\PSoC4/ADC_1.c **** 	/* Freerunning mode */
 328              		.loc 1 844 0
 329              		.cfi_startproc
 330              		@ args = 0, pretend = 0, frame = 0
 331              		@ frame_needed = 0, uses_anonymous_args = 0
 332              		@ link register save eliminated.
 846:Generated_Source\PSoC4/ADC_1.c **** 		& ADC_1_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK) 
 333              		.loc 1 846 0
 334 0000 074B     		ldr	r3, .L25
 335 0002 1B68     		ldr	r3, [r3]
 336 0004 5B03     		lsls	r3, r3, #13
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 27


 337 0006 06D5     		bpl	.L23
 850:Generated_Source\PSoC4/ADC_1.c **** 	}
 338              		.loc 1 850 0
 339 0008 054A     		ldr	r2, .L25
 340 000a 1368     		ldr	r3, [r2]
 341 000c 8021     		movs	r1, #128
 342 000e 4902     		lsls	r1, r1, #9
 343 0010 0B43     		orrs	r3, r1
 344 0012 1360     		str	r3, [r2]
 345 0014 02E0     		b	.L22
 346              	.L23:
 854:Generated_Source\PSoC4/ADC_1.c **** 	}
 347              		.loc 1 854 0
 348 0016 0122     		movs	r2, #1
 349 0018 024B     		ldr	r3, .L25+4
 350 001a 1A60     		str	r2, [r3]
 351              	.L22:
 858:Generated_Source\PSoC4/ADC_1.c **** 
 352              		.loc 1 858 0
 353              		@ sp needed
 354 001c 7047     		bx	lr
 355              	.L26:
 356 001e C046     		.align	2
 357              	.L25:
 358 0020 04003A40 		.word	1077542916
 359 0024 24003A40 		.word	1077542948
 360              		.cfi_endproc
 361              	.LFE6:
 362              		.size	ADC_1_StartConvert, .-ADC_1_StartConvert
 363              		.section	.text.ADC_1_SetConvertMode,"ax",%progbits
 364              		.align	2
 365              		.global	ADC_1_SetConvertMode
 366              		.code	16
 367              		.thumb_func
 368              		.type	ADC_1_SetConvertMode, %function
 369              	ADC_1_SetConvertMode:
 370              	.LFB8:
 921:Generated_Source\PSoC4/ADC_1.c ****     if(ADC_1_CONTINUOUS == mode)
 371              		.loc 1 921 0
 372              		.cfi_startproc
 373              		@ args = 0, pretend = 0, frame = 0
 374              		@ frame_needed = 0, uses_anonymous_args = 0
 375              		@ link register save eliminated.
 376              	.LVL25:
 922:Generated_Source\PSoC4/ADC_1.c ****     {
 377              		.loc 1 922 0
 378 0000 0128     		cmp	r0, #1
 379 0002 06D1     		bne	.L28
 924:Generated_Source\PSoC4/ADC_1.c ****     }
 380              		.loc 1 924 0
 381 0004 064A     		ldr	r2, .L30
 382 0006 1368     		ldr	r3, [r2]
 383 0008 8021     		movs	r1, #128
 384 000a C902     		lsls	r1, r1, #11
 385 000c 0B43     		orrs	r3, r1
 386 000e 1360     		str	r3, [r2]
 387 0010 04E0     		b	.L27
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 28


 388              	.L28:
 928:Generated_Source\PSoC4/ADC_1.c ****     }
 389              		.loc 1 928 0
 390 0012 034A     		ldr	r2, .L30
 391 0014 1168     		ldr	r1, [r2]
 392 0016 034B     		ldr	r3, .L30+4
 393 0018 0B40     		ands	r3, r1
 394 001a 1360     		str	r3, [r2]
 395              	.L27:
 930:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
 396              		.loc 1 930 0
 397              		@ sp needed
 398 001c 7047     		bx	lr
 399              	.L31:
 400 001e C046     		.align	2
 401              	.L30:
 402 0020 04003A40 		.word	1077542916
 403 0024 FFFFFBFF 		.word	-262145
 404              		.cfi_endproc
 405              	.LFE8:
 406              		.size	ADC_1_SetConvertMode, .-ADC_1_SetConvertMode
 407              		.section	.text.ADC_1_SetEosMask,"ax",%progbits
 408              		.align	2
 409              		.global	ADC_1_SetEosMask
 410              		.code	16
 411              		.thumb_func
 412              		.type	ADC_1_SetEosMask, %function
 413              	ADC_1_SetEosMask:
 414              	.LFB9:
 985:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_INTR_MASK_REG = mask & ADC_1_EOS_MASK;
 415              		.loc 1 985 0
 416              		.cfi_startproc
 417              		@ args = 0, pretend = 0, frame = 0
 418              		@ frame_needed = 0, uses_anonymous_args = 0
 419              		@ link register save eliminated.
 420              	.LVL26:
 986:Generated_Source\PSoC4/ADC_1.c ****     
 421              		.loc 1 986 0
 422 0000 0123     		movs	r3, #1
 423 0002 1840     		ands	r0, r3
 424              	.LVL27:
 425 0004 014B     		ldr	r3, .L33
 426 0006 1860     		str	r0, [r3]
 989:Generated_Source\PSoC4/ADC_1.c **** 
 427              		.loc 1 989 0
 428              		@ sp needed
 429 0008 7047     		bx	lr
 430              	.L34:
 431 000a C046     		.align	2
 432              	.L33:
 433 000c 18023A40 		.word	1077543448
 434              		.cfi_endproc
 435              	.LFE9:
 436              		.size	ADC_1_SetEosMask, .-ADC_1_SetEosMask
 437              		.section	.text.ADC_1_SetChanMask,"ax",%progbits
 438              		.align	2
 439              		.global	ADC_1_SetChanMask
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 29


 440              		.code	16
 441              		.thumb_func
 442              		.type	ADC_1_SetChanMask, %function
 443              	ADC_1_SetChanMask:
 444              	.LFB10:
1009:Generated_Source\PSoC4/ADC_1.c ****     uint32 chanCount = ADC_1_allConfigs[ADC_1_currentConfig].numChannels;
 445              		.loc 1 1009 0
 446              		.cfi_startproc
 447              		@ args = 0, pretend = 0, frame = 0
 448              		@ frame_needed = 0, uses_anonymous_args = 0
 449              		@ link register save eliminated.
 450              	.LVL28:
1010:Generated_Source\PSoC4/ADC_1.c ****     enableMask &= (uint32)((uint32)(1ul << chanCount) - 1ul);
 451              		.loc 1 1010 0
 452 0000 074B     		ldr	r3, .L36
 453 0002 1A68     		ldr	r2, [r3]
 454 0004 D300     		lsls	r3, r2, #3
 455 0006 9A1A     		subs	r2, r3, r2
 456 0008 D300     		lsls	r3, r2, #3
 457 000a 064A     		ldr	r2, .L36+4
 458 000c D318     		adds	r3, r2, r3
 459 000e 5A68     		ldr	r2, [r3, #4]
 460              	.LVL29:
1011:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_CHAN_EN_REG = enableMask;
 461              		.loc 1 1011 0
 462 0010 0123     		movs	r3, #1
 463 0012 9340     		lsls	r3, r3, r2
 464 0014 013B     		subs	r3, r3, #1
 465 0016 1840     		ands	r0, r3
 466              	.LVL30:
1012:Generated_Source\PSoC4/ADC_1.c ****     return;
 467              		.loc 1 1012 0
 468 0018 034B     		ldr	r3, .L36+8
 469 001a 1860     		str	r0, [r3]
1014:Generated_Source\PSoC4/ADC_1.c **** 
 470              		.loc 1 1014 0
 471              		@ sp needed
 472 001c 7047     		bx	lr
 473              	.L37:
 474 001e C046     		.align	2
 475              	.L36:
 476 0020 00000000 		.word	.LANCHOR0
 477 0024 00000000 		.word	ADC_1_allConfigs
 478 0028 20003A40 		.word	1077542944
 479              		.cfi_endproc
 480              	.LFE10:
 481              		.size	ADC_1_SetChanMask, .-ADC_1_SetChanMask
 482              		.section	.text.ADC_1_IsEndConversion,"ax",%progbits
 483              		.align	2
 484              		.global	ADC_1_IsEndConversion
 485              		.code	16
 486              		.thumb_func
 487              		.type	ADC_1_IsEndConversion, %function
 488              	ADC_1_IsEndConversion:
 489              	.LFB11:
1042:Generated_Source\PSoC4/ADC_1.c ****     uint32 endOfConversion = 0u;
 490              		.loc 1 1042 0
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 30


 491              		.cfi_startproc
 492              		@ args = 0, pretend = 0, frame = 0
 493              		@ frame_needed = 0, uses_anonymous_args = 0
 494              		@ link register save eliminated.
 495              	.LVL31:
 496 0000 0100     		movs	r1, r0
 497              	.LVL32:
1045:Generated_Source\PSoC4/ADC_1.c ****     {
 498              		.loc 1 1045 0
 499 0002 431E     		subs	r3, r0, #1
 500 0004 012B     		cmp	r3, #1
 501 0006 11D8     		bhi	.L42
 502 0008 094A     		ldr	r2, .L43
 503              	.LVL33:
 504              	.L41:
1049:Generated_Source\PSoC4/ADC_1.c ****             wdt--;
 505              		.loc 1 1049 0 discriminator 1
 506 000a 0A4B     		ldr	r3, .L43+4
 507 000c 1B68     		ldr	r3, [r3]
 508 000e 0120     		movs	r0, #1
 509 0010 1840     		ands	r0, r3
 510              	.LVL34:
1050:Generated_Source\PSoC4/ADC_1.c ****         }while(((0u == endOfConversion) 
 511              		.loc 1 1050 0 discriminator 1
 512 0012 013A     		subs	r2, r2, #1
 513              	.LVL35:
1053:Generated_Source\PSoC4/ADC_1.c **** 
 514              		.loc 1 1053 0 discriminator 1
 515 0014 0028     		cmp	r0, #0
 516 0016 03D1     		bne	.L40
1052:Generated_Source\PSoC4/ADC_1.c ****             && (0uL != wdt));
 517              		.loc 1 1052 0
 518 0018 8B07     		lsls	r3, r1, #30
 519 001a 01D5     		bpl	.L40
1053:Generated_Source\PSoC4/ADC_1.c **** 
 520              		.loc 1 1053 0
 521 001c 002A     		cmp	r2, #0
 522 001e F4D1     		bne	.L41
 523              	.L40:
1055:Generated_Source\PSoC4/ADC_1.c ****         {
 524              		.loc 1 1055 0
 525 0020 0028     		cmp	r0, #0
 526 0022 04D0     		beq	.L39
1058:Generated_Source\PSoC4/ADC_1.c ****         }
 527              		.loc 1 1058 0
 528 0024 0122     		movs	r2, #1
 529              	.LVL36:
 530 0026 034B     		ldr	r3, .L43+4
 531 0028 1A60     		str	r2, [r3]
 532 002a 00E0     		b	.L39
 533              	.LVL37:
 534              	.L42:
1043:Generated_Source\PSoC4/ADC_1.c ****     uint32 wdt = 0x3FFFFFFuL; /* Watchdog timer for blocking while loop */
 535              		.loc 1 1043 0
 536 002c 0020     		movs	r0, #0
 537              	.LVL38:
 538              	.L39:
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 31


1063:Generated_Source\PSoC4/ADC_1.c ****  
 539              		.loc 1 1063 0
 540              		@ sp needed
 541 002e 7047     		bx	lr
 542              	.L44:
 543              		.align	2
 544              	.L43:
 545 0030 FFFFFF03 		.word	67108863
 546 0034 10023A40 		.word	1077543440
 547              		.cfi_endproc
 548              	.LFE11:
 549              		.size	ADC_1_IsEndConversion, .-ADC_1_IsEndConversion
 550              		.section	.text.ADC_1_GetResult16,"ax",%progbits
 551              		.align	2
 552              		.global	ADC_1_GetResult16
 553              		.code	16
 554              		.thumb_func
 555              		.type	ADC_1_GetResult16, %function
 556              	ADC_1_GetResult16:
 557              	.LFB13:
1105:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1106:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_GetResult16
1107:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1108:Generated_Source\PSoC4/ADC_1.c **** *
1109:Generated_Source\PSoC4/ADC_1.c **** * \brief Gets the data available in the channel result data register
1110:Generated_Source\PSoC4/ADC_1.c **** *
1111:Generated_Source\PSoC4/ADC_1.c **** * \param chan The ADC_1 channel to read the result from. The first 
1112:Generated_Source\PSoC4/ADC_1.c **** * channel is 0 and the injection channel if enabled is the number of valid 
1113:Generated_Source\PSoC4/ADC_1.c **** * channels.
1114:Generated_Source\PSoC4/ADC_1.c **** *
1115:Generated_Source\PSoC4/ADC_1.c **** * \return Returns converted data as a signed 16-bit integer.
1116:Generated_Source\PSoC4/ADC_1.c **** * 
1117:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1118:Generated_Source\PSoC4/ADC_1.c **** * 
1119:Generated_Source\PSoC4/ADC_1.c **** * <b>Code Snippet</b>
1120:Generated_Source\PSoC4/ADC_1.c **** *  \snippet main.c snippet_ADC_1_GetResult16
1121:Generated_Source\PSoC4/ADC_1.c **** *
1122:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1123:Generated_Source\PSoC4/ADC_1.c **** int16 ADC_1_GetResult16(uint32 chan)
1124:Generated_Source\PSoC4/ADC_1.c **** {
 558              		.loc 1 1124 0
 559              		.cfi_startproc
 560              		@ args = 0, pretend = 0, frame = 0
 561              		@ frame_needed = 0, uses_anonymous_args = 0
 562              	.LVL39:
 563 0000 10B5     		push	{r4, lr}
 564              		.cfi_def_cfa_offset 8
 565              		.cfi_offset 4, -8
 566              		.cfi_offset 14, -4
 567 0002 0400     		movs	r4, r0
1125:Generated_Source\PSoC4/ADC_1.c ****     uint32 adcResult;
1126:Generated_Source\PSoC4/ADC_1.c ****     
1127:Generated_Source\PSoC4/ADC_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
1128:Generated_Source\PSoC4/ADC_1.c ****     CYASSERT(chan < ADC_1_allConfigs[ADC_1_currentConfig].numChannels);
 568              		.loc 1 1128 0
 569 0004 104B     		ldr	r3, .L49
 570 0006 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 32


 571 0008 D300     		lsls	r3, r2, #3
 572 000a 9A1A     		subs	r2, r3, r2
 573 000c D300     		lsls	r3, r2, #3
 574 000e 0F4A     		ldr	r2, .L49+4
 575 0010 D318     		adds	r3, r2, r3
 576 0012 5B68     		ldr	r3, [r3, #4]
 577 0014 8342     		cmp	r3, r0
 578 0016 02D8     		bhi	.L46
 579              		.loc 1 1128 0 is_stmt 0 discriminator 1
 580 0018 0020     		movs	r0, #0
 581              	.LVL40:
 582 001a FFF7FEFF 		bl	CyHalt
 583              	.LVL41:
 584              	.L46:
1129:Generated_Source\PSoC4/ADC_1.c **** 
1130:Generated_Source\PSoC4/ADC_1.c ****     if(ADC_1_allConfigs[ADC_1_currentConfig].numChannels > chan)
 585              		.loc 1 1130 0 is_stmt 1
 586 001e 0A4B     		ldr	r3, .L49
 587 0020 1A68     		ldr	r2, [r3]
 588 0022 D300     		lsls	r3, r2, #3
 589 0024 9A1A     		subs	r2, r3, r2
 590 0026 D300     		lsls	r3, r2, #3
 591 0028 084A     		ldr	r2, .L49+4
 592 002a D318     		adds	r3, r2, r3
 593 002c 5B68     		ldr	r3, [r3, #4]
 594 002e 9C42     		cmp	r4, r3
 595 0030 07D2     		bcs	.L48
1131:Generated_Source\PSoC4/ADC_1.c ****     {   
1132:Generated_Source\PSoC4/ADC_1.c ****         adcResult = CY_GET_REG32((reg32 *)(ADC_1_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 596              		.loc 1 1132 0
 597 0032 A400     		lsls	r4, r4, #2
 598              	.LVL42:
 599 0034 064B     		ldr	r3, .L49+8
 600 0036 9C46     		mov	ip, r3
 601 0038 6444     		add	r4, r4, ip
 602 003a 2068     		ldr	r0, [r4]
 603 003c 0004     		lsls	r0, r0, #16
 604 003e 000C     		lsrs	r0, r0, #16
 605              	.LVL43:
 606 0040 00E0     		b	.L47
 607              	.LVL44:
 608              	.L48:
1133:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_RESULT_MASK; 
1134:Generated_Source\PSoC4/ADC_1.c ****     }
1135:Generated_Source\PSoC4/ADC_1.c ****     else
1136:Generated_Source\PSoC4/ADC_1.c ****     {
1137:Generated_Source\PSoC4/ADC_1.c **** 		adcResult = 0u;
 609              		.loc 1 1137 0
 610 0042 0020     		movs	r0, #0
 611              	.LVL45:
 612              	.L47:
1138:Generated_Source\PSoC4/ADC_1.c ****     }
1139:Generated_Source\PSoC4/ADC_1.c ****     
1140:Generated_Source\PSoC4/ADC_1.c ****     return (int16) adcResult;
 613              		.loc 1 1140 0
 614 0044 00B2     		sxth	r0, r0
 615              	.LVL46:
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 33


1141:Generated_Source\PSoC4/ADC_1.c **** }
 616              		.loc 1 1141 0
 617              		@ sp needed
 618 0046 10BD     		pop	{r4, pc}
 619              	.L50:
 620              		.align	2
 621              	.L49:
 622 0048 00000000 		.word	.LANCHOR0
 623 004c 00000000 		.word	ADC_1_allConfigs
 624 0050 80013A40 		.word	1077543296
 625              		.cfi_endproc
 626              	.LFE13:
 627              		.size	ADC_1_GetResult16, .-ADC_1_GetResult16
 628              		.section	.text.ADC_1_GetResult32,"ax",%progbits
 629              		.align	2
 630              		.global	ADC_1_GetResult32
 631              		.code	16
 632              		.thumb_func
 633              		.type	ADC_1_GetResult32, %function
 634              	ADC_1_GetResult32:
 635              	.LFB14:
1142:Generated_Source\PSoC4/ADC_1.c **** 
1143:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1144:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_GetResult32
1145:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1146:Generated_Source\PSoC4/ADC_1.c **** *
1147:Generated_Source\PSoC4/ADC_1.c **** * \brief Gets the data available in the channel result data register. 
1148:Generated_Source\PSoC4/ADC_1.c **** *
1149:Generated_Source\PSoC4/ADC_1.c **** * \param chan The ADC_1 channel to read the result from. The first 
1150:Generated_Source\PSoC4/ADC_1.c **** * channel is 0 and the injection channel if enabled is the number of valid 
1151:Generated_Source\PSoC4/ADC_1.c **** * channels.
1152:Generated_Source\PSoC4/ADC_1.c **** *
1153:Generated_Source\PSoC4/ADC_1.c **** * \return Returns converted data as a signed 32-bit integer.
1154:Generated_Source\PSoC4/ADC_1.c **** * 
1155:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1156:Generated_Source\PSoC4/ADC_1.c **** *
1157:Generated_Source\PSoC4/ADC_1.c **** * <b>Code Snippet</b>
1158:Generated_Source\PSoC4/ADC_1.c **** *  \snippet main.c snippet_ADC_1_GetResult32
1159:Generated_Source\PSoC4/ADC_1.c **** *
1160:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1161:Generated_Source\PSoC4/ADC_1.c **** int32 ADC_1_GetResult32(uint32 chan)
1162:Generated_Source\PSoC4/ADC_1.c **** {
 636              		.loc 1 1162 0
 637              		.cfi_startproc
 638              		@ args = 0, pretend = 0, frame = 0
 639              		@ frame_needed = 0, uses_anonymous_args = 0
 640              	.LVL47:
 641 0000 70B5     		push	{r4, r5, r6, lr}
 642              		.cfi_def_cfa_offset 16
 643              		.cfi_offset 4, -16
 644              		.cfi_offset 5, -12
 645              		.cfi_offset 6, -8
 646              		.cfi_offset 14, -4
 647 0002 0500     		movs	r5, r0
1163:Generated_Source\PSoC4/ADC_1.c ****     uint32 adcResult;
1164:Generated_Source\PSoC4/ADC_1.c ****     int16 adcResult16;
1165:Generated_Source\PSoC4/ADC_1.c ****     int32 finalResult;
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 34


1166:Generated_Source\PSoC4/ADC_1.c ****     
1167:Generated_Source\PSoC4/ADC_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
1168:Generated_Source\PSoC4/ADC_1.c ****     CYASSERT(chan < ADC_1_allConfigs[ADC_1_currentConfig].numChannels);
 648              		.loc 1 1168 0
 649 0004 144B     		ldr	r3, .L57
 650 0006 1A68     		ldr	r2, [r3]
 651 0008 D300     		lsls	r3, r2, #3
 652 000a 9A1A     		subs	r2, r3, r2
 653 000c D300     		lsls	r3, r2, #3
 654 000e 134A     		ldr	r2, .L57+4
 655 0010 D318     		adds	r3, r2, r3
 656 0012 5B68     		ldr	r3, [r3, #4]
 657 0014 8342     		cmp	r3, r0
 658 0016 02D8     		bhi	.L52
 659              		.loc 1 1168 0 is_stmt 0 discriminator 1
 660 0018 0020     		movs	r0, #0
 661              	.LVL48:
 662 001a FFF7FEFF 		bl	CyHalt
 663              	.LVL49:
 664              	.L52:
1169:Generated_Source\PSoC4/ADC_1.c **** 
1170:Generated_Source\PSoC4/ADC_1.c ****     if(ADC_1_allConfigs[ADC_1_currentConfig].numChannels > chan)
 665              		.loc 1 1170 0 is_stmt 1
 666 001e 0E4B     		ldr	r3, .L57
 667 0020 1A68     		ldr	r2, [r3]
 668 0022 D300     		lsls	r3, r2, #3
 669 0024 9A1A     		subs	r2, r3, r2
 670 0026 D300     		lsls	r3, r2, #3
 671 0028 0C4A     		ldr	r2, .L57+4
 672 002a D318     		adds	r3, r2, r3
 673 002c 5B68     		ldr	r3, [r3, #4]
 674 002e 9D42     		cmp	r5, r3
 675 0030 07D2     		bcs	.L56
1171:Generated_Source\PSoC4/ADC_1.c ****     {
1172:Generated_Source\PSoC4/ADC_1.c ****         adcResult = CY_GET_REG32((reg32 *)(ADC_1_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 676              		.loc 1 1172 0
 677 0032 AB00     		lsls	r3, r5, #2
 678 0034 0A4A     		ldr	r2, .L57+8
 679 0036 9446     		mov	ip, r2
 680 0038 6344     		add	r3, r3, ip
 681 003a 1C68     		ldr	r4, [r3]
 682 003c 2404     		lsls	r4, r4, #16
 683 003e 240C     		lsrs	r4, r4, #16
 684              	.LVL50:
 685 0040 00E0     		b	.L53
 686              	.LVL51:
 687              	.L56:
1173:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_RESULT_MASK;
1174:Generated_Source\PSoC4/ADC_1.c ****     }
1175:Generated_Source\PSoC4/ADC_1.c ****     else
1176:Generated_Source\PSoC4/ADC_1.c ****     {
1177:Generated_Source\PSoC4/ADC_1.c ****         adcResult = 0u;
 688              		.loc 1 1177 0
 689 0042 0024     		movs	r4, #0
 690              	.L53:
 691              	.LVL52:
1178:Generated_Source\PSoC4/ADC_1.c ****     }
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 35


1179:Generated_Source\PSoC4/ADC_1.c ****     /* Sign extend if channel is signed format */
1180:Generated_Source\PSoC4/ADC_1.c ****     if(ADC_1_IsChannelSigned(chan) == 1)
 692              		.loc 1 1180 0
 693 0044 2800     		movs	r0, r5
 694 0046 FFF7FEFF 		bl	ADC_1_IsChannelSigned
 695              	.LVL53:
 696 004a 0128     		cmp	r0, #1
 697 004c 01D1     		bne	.L54
 698              	.LVL54:
1181:Generated_Source\PSoC4/ADC_1.c ****     {
1182:Generated_Source\PSoC4/ADC_1.c ****         adcResult16 = (int16) adcResult;
1183:Generated_Source\PSoC4/ADC_1.c ****         finalResult = (int32) adcResult16;
 699              		.loc 1 1183 0
 700 004e 20B2     		sxth	r0, r4
 701              	.LVL55:
 702 0050 00E0     		b	.L55
 703              	.LVL56:
 704              	.L54:
1184:Generated_Source\PSoC4/ADC_1.c ****     }
1185:Generated_Source\PSoC4/ADC_1.c ****     else
1186:Generated_Source\PSoC4/ADC_1.c ****     {
1187:Generated_Source\PSoC4/ADC_1.c ****         finalResult = (int32) adcResult;
 705              		.loc 1 1187 0
 706 0052 2000     		movs	r0, r4
 707              	.LVL57:
 708              	.L55:
1188:Generated_Source\PSoC4/ADC_1.c ****     }
1189:Generated_Source\PSoC4/ADC_1.c ****     return finalResult;
1190:Generated_Source\PSoC4/ADC_1.c **** }
 709              		.loc 1 1190 0
 710              		@ sp needed
 711              	.LVL58:
 712              	.LVL59:
 713 0054 70BD     		pop	{r4, r5, r6, pc}
 714              	.L58:
 715 0056 C046     		.align	2
 716              	.L57:
 717 0058 00000000 		.word	.LANCHOR0
 718 005c 00000000 		.word	ADC_1_allConfigs
 719 0060 80013A40 		.word	1077543296
 720              		.cfi_endproc
 721              	.LFE14:
 722              		.size	ADC_1_GetResult32, .-ADC_1_GetResult32
 723              		.section	.text.ADC_1_SetLowLimit,"ax",%progbits
 724              		.align	2
 725              		.global	ADC_1_SetLowLimit
 726              		.code	16
 727              		.thumb_func
 728              		.type	ADC_1_SetLowLimit, %function
 729              	ADC_1_SetLowLimit:
 730              	.LFB15:
1191:Generated_Source\PSoC4/ADC_1.c **** 
1192:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1193:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetLowLimit
1194:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1195:Generated_Source\PSoC4/ADC_1.c **** *
1196:Generated_Source\PSoC4/ADC_1.c **** * \brief Sets the low limit parameter for a limit condition.
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 36


1197:Generated_Source\PSoC4/ADC_1.c **** *
1198:Generated_Source\PSoC4/ADC_1.c **** * \param lowLimit The low limit for a limit condition.
1199:Generated_Source\PSoC4/ADC_1.c **** *
1200:Generated_Source\PSoC4/ADC_1.c **** * \return None
1201:Generated_Source\PSoC4/ADC_1.c **** * 
1202:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1203:Generated_Source\PSoC4/ADC_1.c **** *
1204:Generated_Source\PSoC4/ADC_1.c **** * <b>Code Snippet</b>
1205:Generated_Source\PSoC4/ADC_1.c **** *  \snippet main.c snippet_ADC_1_SetLowLimit
1206:Generated_Source\PSoC4/ADC_1.c **** *
1207:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1208:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetLowLimit(uint32 lowLimit)
1209:Generated_Source\PSoC4/ADC_1.c **** {   
 731              		.loc 1 1209 0
 732              		.cfi_startproc
 733              		@ args = 0, pretend = 0, frame = 0
 734              		@ frame_needed = 0, uses_anonymous_args = 0
 735              		@ link register save eliminated.
 736              	.LVL60:
1210:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_THRES_REG &= ~(uint32)(ADC_1_SAR_RANGE_THRES_RANGE_LOW_MSK);
 737              		.loc 1 1210 0
 738 0000 054A     		ldr	r2, .L60
 739 0002 1368     		ldr	r3, [r2]
 740 0004 1B0C     		lsrs	r3, r3, #16
 741 0006 1B04     		lsls	r3, r3, #16
 742 0008 1360     		str	r3, [r2]
1211:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_THRES_REG |= lowLimit & ADC_1_SAR_RANGE_THRES_RANGE_LOW_MSK;
 743              		.loc 1 1211 0
 744 000a 1368     		ldr	r3, [r2]
 745 000c 0004     		lsls	r0, r0, #16
 746              	.LVL61:
 747 000e 000C     		lsrs	r0, r0, #16
 748 0010 1843     		orrs	r0, r3
 749 0012 1060     		str	r0, [r2]
1212:Generated_Source\PSoC4/ADC_1.c ****     return;
1213:Generated_Source\PSoC4/ADC_1.c **** }
 750              		.loc 1 1213 0
 751              		@ sp needed
 752 0014 7047     		bx	lr
 753              	.L61:
 754 0016 C046     		.align	2
 755              	.L60:
 756 0018 18003A40 		.word	1077542936
 757              		.cfi_endproc
 758              	.LFE15:
 759              		.size	ADC_1_SetLowLimit, .-ADC_1_SetLowLimit
 760              		.section	.text.ADC_1_SetHighLimit,"ax",%progbits
 761              		.align	2
 762              		.global	ADC_1_SetHighLimit
 763              		.code	16
 764              		.thumb_func
 765              		.type	ADC_1_SetHighLimit, %function
 766              	ADC_1_SetHighLimit:
 767              	.LFB16:
1214:Generated_Source\PSoC4/ADC_1.c **** 
1215:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1216:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetHighLimit
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 37


1217:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1218:Generated_Source\PSoC4/ADC_1.c **** *
1219:Generated_Source\PSoC4/ADC_1.c **** * \brief Sets the high limit parameter for a limit condition.
1220:Generated_Source\PSoC4/ADC_1.c **** *
1221:Generated_Source\PSoC4/ADC_1.c **** * \param highLimit The high limit for a limit condition.
1222:Generated_Source\PSoC4/ADC_1.c **** *
1223:Generated_Source\PSoC4/ADC_1.c **** * \return None
1224:Generated_Source\PSoC4/ADC_1.c **** * 
1225:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1226:Generated_Source\PSoC4/ADC_1.c **** * 
1227:Generated_Source\PSoC4/ADC_1.c **** * <b>Code Snippet</b>
1228:Generated_Source\PSoC4/ADC_1.c **** *  \snippet main.c snippet_ADC_1_SetHighLimit
1229:Generated_Source\PSoC4/ADC_1.c **** *
1230:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1231:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetHighLimit(uint32 highLimit)
1232:Generated_Source\PSoC4/ADC_1.c **** {   
 768              		.loc 1 1232 0
 769              		.cfi_startproc
 770              		@ args = 0, pretend = 0, frame = 0
 771              		@ frame_needed = 0, uses_anonymous_args = 0
 772              		@ link register save eliminated.
 773              	.LVL62:
1233:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_THRES_REG &= ~(uint32)(ADC_1_SAR_RANGE_THRES_RANGE_HIGH_MSK);
 774              		.loc 1 1233 0
 775 0000 044A     		ldr	r2, .L63
 776 0002 1368     		ldr	r3, [r2]
 777 0004 1B04     		lsls	r3, r3, #16
 778 0006 1B0C     		lsrs	r3, r3, #16
 779 0008 1360     		str	r3, [r2]
1234:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_1_SAR_RANGE_THRES_RANGE_HIGH_SHFT);
 780              		.loc 1 1234 0
 781 000a 1368     		ldr	r3, [r2]
 782 000c 0004     		lsls	r0, r0, #16
 783              	.LVL63:
 784 000e 1843     		orrs	r0, r3
 785 0010 1060     		str	r0, [r2]
1235:Generated_Source\PSoC4/ADC_1.c ****     return;
1236:Generated_Source\PSoC4/ADC_1.c **** }
 786              		.loc 1 1236 0
 787              		@ sp needed
 788 0012 7047     		bx	lr
 789              	.L64:
 790              		.align	2
 791              	.L63:
 792 0014 18003A40 		.word	1077542936
 793              		.cfi_endproc
 794              	.LFE16:
 795              		.size	ADC_1_SetHighLimit, .-ADC_1_SetHighLimit
 796              		.section	.text.ADC_1_SetLimitMask,"ax",%progbits
 797              		.align	2
 798              		.global	ADC_1_SetLimitMask
 799              		.code	16
 800              		.thumb_func
 801              		.type	ADC_1_SetLimitMask, %function
 802              	ADC_1_SetLimitMask:
 803              	.LFB17:
1237:Generated_Source\PSoC4/ADC_1.c **** 
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 38


1238:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1239:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetLimitMask
1240:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1241:Generated_Source\PSoC4/ADC_1.c **** *
1242:Generated_Source\PSoC4/ADC_1.c **** * \brief Sets the channel limit condition mask.
1243:Generated_Source\PSoC4/ADC_1.c **** *
1244:Generated_Source\PSoC4/ADC_1.c **** *
1245:Generated_Source\PSoC4/ADC_1.c **** * \param limitMask Sets which channels that may cause a limit condition interrupt. 
1246:Generated_Source\PSoC4/ADC_1.c **** * Setting bits for channels that do not exist will have no effect. For example, 
1247:Generated_Source\PSoC4/ADC_1.c **** * if only 6  channels were enabled, setting a mask of 0x0103 would only enable 
1248:Generated_Source\PSoC4/ADC_1.c **** * the last two channels (0 and 1).
1249:Generated_Source\PSoC4/ADC_1.c **** *
1250:Generated_Source\PSoC4/ADC_1.c **** * \return None
1251:Generated_Source\PSoC4/ADC_1.c **** * 
1252:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1253:Generated_Source\PSoC4/ADC_1.c **** *
1254:Generated_Source\PSoC4/ADC_1.c **** * <b>Code Snippet</b>
1255:Generated_Source\PSoC4/ADC_1.c **** *  \snippet main.c snippet_ADC_1_SetLimitMask
1256:Generated_Source\PSoC4/ADC_1.c **** *
1257:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1258:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetLimitMask(uint32 limitMask)
1259:Generated_Source\PSoC4/ADC_1.c **** {   
 804              		.loc 1 1259 0
 805              		.cfi_startproc
 806              		@ args = 0, pretend = 0, frame = 0
 807              		@ frame_needed = 0, uses_anonymous_args = 0
 808              		@ link register save eliminated.
 809              	.LVL64:
1260:Generated_Source\PSoC4/ADC_1.c ****     uint32 chanCount = ADC_1_allConfigs[ADC_1_currentConfig].numChannels;
 810              		.loc 1 1260 0
 811 0000 074B     		ldr	r3, .L66
 812 0002 1A68     		ldr	r2, [r3]
 813 0004 D300     		lsls	r3, r2, #3
 814 0006 9A1A     		subs	r2, r3, r2
 815 0008 D300     		lsls	r3, r2, #3
 816 000a 064A     		ldr	r2, .L66+4
 817 000c D318     		adds	r3, r2, r3
 818 000e 5A68     		ldr	r2, [r3, #4]
 819              	.LVL65:
1261:Generated_Source\PSoC4/ADC_1.c ****     limitMask &= (uint32)((uint32)(1ul << chanCount) - 1ul);
 820              		.loc 1 1261 0
 821 0010 0123     		movs	r3, #1
 822 0012 9340     		lsls	r3, r3, r2
 823 0014 013B     		subs	r3, r3, #1
 824 0016 1840     		ands	r0, r3
 825              	.LVL66:
1262:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_RANGE_INTR_MASK_REG = limitMask;
 826              		.loc 1 1262 0
 827 0018 034B     		ldr	r3, .L66+8
 828 001a 1860     		str	r0, [r3]
1263:Generated_Source\PSoC4/ADC_1.c ****     return;
1264:Generated_Source\PSoC4/ADC_1.c **** }
 829              		.loc 1 1264 0
 830              		@ sp needed
 831 001c 7047     		bx	lr
 832              	.L67:
 833 001e C046     		.align	2
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 39


 834              	.L66:
 835 0020 00000000 		.word	.LANCHOR0
 836 0024 00000000 		.word	ADC_1_allConfigs
 837 0028 38023A40 		.word	1077543480
 838              		.cfi_endproc
 839              	.LFE17:
 840              		.size	ADC_1_SetLimitMask, .-ADC_1_SetLimitMask
 841              		.section	.text.ADC_1_SetSatMask,"ax",%progbits
 842              		.align	2
 843              		.global	ADC_1_SetSatMask
 844              		.code	16
 845              		.thumb_func
 846              		.type	ADC_1_SetSatMask, %function
 847              	ADC_1_SetSatMask:
 848              	.LFB18:
1265:Generated_Source\PSoC4/ADC_1.c **** 
1266:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1267:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetSatMask
1268:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1269:Generated_Source\PSoC4/ADC_1.c **** *
1270:Generated_Source\PSoC4/ADC_1.c **** * \brief Sets the channel saturation event mask.
1271:Generated_Source\PSoC4/ADC_1.c **** *
1272:Generated_Source\PSoC4/ADC_1.c **** * \param satMask Sets which channels that may cause a saturation event interrupt. 
1273:Generated_Source\PSoC4/ADC_1.c **** * Setting bits for channels that do not exist will have no effect. For example, 
1274:Generated_Source\PSoC4/ADC_1.c **** * if only 8 channels were enabled, setting a mask of 0x01C0 would only enable two 
1275:Generated_Source\PSoC4/ADC_1.c **** * channels (6 and 7).
1276:Generated_Source\PSoC4/ADC_1.c **** *
1277:Generated_Source\PSoC4/ADC_1.c **** * \return None
1278:Generated_Source\PSoC4/ADC_1.c **** * 
1279:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1280:Generated_Source\PSoC4/ADC_1.c **** *
1281:Generated_Source\PSoC4/ADC_1.c **** * <b>Code Snippet</b>
1282:Generated_Source\PSoC4/ADC_1.c **** *  \snippet main.c snippet_ADC_1_SetSatMask
1283:Generated_Source\PSoC4/ADC_1.c **** *
1284:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1285:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetSatMask(uint32 satMask)
1286:Generated_Source\PSoC4/ADC_1.c **** {   
 849              		.loc 1 1286 0
 850              		.cfi_startproc
 851              		@ args = 0, pretend = 0, frame = 0
 852              		@ frame_needed = 0, uses_anonymous_args = 0
 853              		@ link register save eliminated.
 854              	.LVL67:
1287:Generated_Source\PSoC4/ADC_1.c ****     uint32 chanCount = ADC_1_allConfigs[ADC_1_currentConfig].numChannels;
 855              		.loc 1 1287 0
 856 0000 074B     		ldr	r3, .L69
 857 0002 1A68     		ldr	r2, [r3]
 858 0004 D300     		lsls	r3, r2, #3
 859 0006 9A1A     		subs	r2, r3, r2
 860 0008 D300     		lsls	r3, r2, #3
 861 000a 064A     		ldr	r2, .L69+4
 862 000c D318     		adds	r3, r2, r3
 863 000e 5A68     		ldr	r2, [r3, #4]
 864              	.LVL68:
1288:Generated_Source\PSoC4/ADC_1.c ****     satMask &= (uint32)((uint32)(1ul << chanCount) - 1ul);
 865              		.loc 1 1288 0
 866 0010 0123     		movs	r3, #1
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 40


 867 0012 9340     		lsls	r3, r3, r2
 868 0014 013B     		subs	r3, r3, #1
 869 0016 1840     		ands	r0, r3
 870              	.LVL69:
1289:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_SAR_SATURATE_INTR_MASK_REG = satMask;    
 871              		.loc 1 1289 0
 872 0018 034B     		ldr	r3, .L69+8
 873 001a 1860     		str	r0, [r3]
1290:Generated_Source\PSoC4/ADC_1.c ****     return;
1291:Generated_Source\PSoC4/ADC_1.c **** }
 874              		.loc 1 1291 0
 875              		@ sp needed
 876 001c 7047     		bx	lr
 877              	.L70:
 878 001e C046     		.align	2
 879              	.L69:
 880 0020 00000000 		.word	.LANCHOR0
 881 0024 00000000 		.word	ADC_1_allConfigs
 882 0028 28023A40 		.word	1077543464
 883              		.cfi_endproc
 884              	.LFE18:
 885              		.size	ADC_1_SetSatMask, .-ADC_1_SetSatMask
 886              		.section	.text.ADC_1_SetOffset,"ax",%progbits
 887              		.align	2
 888              		.global	ADC_1_SetOffset
 889              		.code	16
 890              		.thumb_func
 891              		.type	ADC_1_SetOffset, %function
 892              	ADC_1_SetOffset:
 893              	.LFB19:
1292:Generated_Source\PSoC4/ADC_1.c **** 
1293:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1294:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetOffset
1295:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1296:Generated_Source\PSoC4/ADC_1.c **** *
1297:Generated_Source\PSoC4/ADC_1.c **** * \brief Sets the ADC offset that is used by the functions ADC_1_CountsTo_uVolts, 
1298:Generated_Source\PSoC4/ADC_1.c **** * ADC_1_CountsTo_mVolts, and ADC_1_CountsTo_Volts.
1299:Generated_Source\PSoC4/ADC_1.c **** * 
1300:Generated_Source\PSoC4/ADC_1.c **** * Offset is applied to counts before unit scaling and gain.  All CountsTo_[mV, uV, V]olts()
1301:Generated_Source\PSoC4/ADC_1.c **** * functions use the following equation:
1302:Generated_Source\PSoC4/ADC_1.c **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1303:Generated_Source\PSoC4/ADC_1.c **** * See CountsTo_Volts() for more about this formula.
1304:Generated_Source\PSoC4/ADC_1.c **** * 
1305:Generated_Source\PSoC4/ADC_1.c **** * To set channel 0's offset based on known V_offset_mV, use:
1306:Generated_Source\PSoC4/ADC_1.c **** *     ADC_1_SetOffset(0uL, -1 * V_offset_mV * (1uL << (Resolution - 1)) / V_ref_mV);
1307:Generated_Source\PSoC4/ADC_1.c **** *
1308:Generated_Source\PSoC4/ADC_1.c **** * \param chan ADC_1 channel number. 
1309:Generated_Source\PSoC4/ADC_1.c **** * 
1310:Generated_Source\PSoC4/ADC_1.c **** * \param offset This value is a measured value when the inputs are shorted or 
1311:Generated_Source\PSoC4/ADC_1.c **** * connected to the same input voltage.
1312:Generated_Source\PSoC4/ADC_1.c **** *
1313:Generated_Source\PSoC4/ADC_1.c **** * \return None
1314:Generated_Source\PSoC4/ADC_1.c **** * 
1315:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1316:Generated_Source\PSoC4/ADC_1.c **** *
1317:Generated_Source\PSoC4/ADC_1.c **** * <b>Code Snippet</b>
1318:Generated_Source\PSoC4/ADC_1.c **** *  \snippet main.c snippet_ADC_1_SetOffset
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 41


1319:Generated_Source\PSoC4/ADC_1.c **** *
1320:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1321:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetOffset(uint32 chan, int16 offset)
1322:Generated_Source\PSoC4/ADC_1.c **** {   
 894              		.loc 1 1322 0
 895              		.cfi_startproc
 896              		@ args = 0, pretend = 0, frame = 0
 897              		@ frame_needed = 0, uses_anonymous_args = 0
 898              	.LVL70:
 899 0000 70B5     		push	{r4, r5, r6, lr}
 900              		.cfi_def_cfa_offset 16
 901              		.cfi_offset 4, -16
 902              		.cfi_offset 5, -12
 903              		.cfi_offset 6, -8
 904              		.cfi_offset 14, -4
 905 0002 0500     		movs	r5, r0
 906 0004 0C00     		movs	r4, r1
1323:Generated_Source\PSoC4/ADC_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
1324:Generated_Source\PSoC4/ADC_1.c ****     CYASSERT(chan < ADC_1_allConfigs[ADC_1_currentConfig].numChannels);
 907              		.loc 1 1324 0
 908 0006 0C4B     		ldr	r3, .L73
 909 0008 1A68     		ldr	r2, [r3]
 910 000a D300     		lsls	r3, r2, #3
 911 000c 9A1A     		subs	r2, r3, r2
 912 000e D300     		lsls	r3, r2, #3
 913 0010 0A4A     		ldr	r2, .L73+4
 914 0012 D318     		adds	r3, r2, r3
 915 0014 5B68     		ldr	r3, [r3, #4]
 916 0016 8342     		cmp	r3, r0
 917 0018 02D8     		bhi	.L72
 918              		.loc 1 1324 0 is_stmt 0 discriminator 1
 919 001a 0020     		movs	r0, #0
 920              	.LVL71:
 921 001c FFF7FEFF 		bl	CyHalt
 922              	.LVL72:
 923              	.L72:
1325:Generated_Source\PSoC4/ADC_1.c **** 
1326:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_offset[ADC_1_allConfigs[ADC_1_currentConfig].channelBase + chan] = offset;
 924              		.loc 1 1326 0 is_stmt 1
 925 0020 054B     		ldr	r3, .L73
 926 0022 1A68     		ldr	r2, [r3]
 927 0024 D300     		lsls	r3, r2, #3
 928 0026 9B1A     		subs	r3, r3, r2
 929 0028 DA00     		lsls	r2, r3, #3
 930 002a 044B     		ldr	r3, .L73+4
 931 002c D058     		ldr	r0, [r2, r3]
 932 002e 2818     		adds	r0, r5, r0
 933 0030 4000     		lsls	r0, r0, #1
 934 0032 034B     		ldr	r3, .L73+8
 935 0034 C452     		strh	r4, [r0, r3]
1327:Generated_Source\PSoC4/ADC_1.c ****     return;
1328:Generated_Source\PSoC4/ADC_1.c **** }
 936              		.loc 1 1328 0
 937              		@ sp needed
 938              	.LVL73:
 939 0036 70BD     		pop	{r4, r5, r6, pc}
 940              	.L74:
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 42


 941              		.align	2
 942              	.L73:
 943 0038 00000000 		.word	.LANCHOR0
 944 003c 00000000 		.word	ADC_1_allConfigs
 945 0040 00000000 		.word	ADC_1_offset
 946              		.cfi_endproc
 947              	.LFE19:
 948              		.size	ADC_1_SetOffset, .-ADC_1_SetOffset
 949              		.section	.text.ADC_1_SetGain,"ax",%progbits
 950              		.align	2
 951              		.global	ADC_1_SetGain
 952              		.code	16
 953              		.thumb_func
 954              		.type	ADC_1_SetGain, %function
 955              	ADC_1_SetGain:
 956              	.LFB20:
1329:Generated_Source\PSoC4/ADC_1.c **** 
1330:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1331:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_SetGain
1332:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1333:Generated_Source\PSoC4/ADC_1.c **** *
1334:Generated_Source\PSoC4/ADC_1.c **** * \brief Sets the ADC_1 gain in counts per 10 volt for the voltage 
1335:Generated_Source\PSoC4/ADC_1.c **** * conversion functions. This value is set by default by the reference and 
1336:Generated_Source\PSoC4/ADC_1.c **** * input range settings. Gain is applied after offset and unit scaling.  All 
1337:Generated_Source\PSoC4/ADC_1.c **** * CountsTo_[mV, uV, V]olts() functions use the following equation:
1338:Generated_Source\PSoC4/ADC_1.c **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1339:Generated_Source\PSoC4/ADC_1.c **** * See CountsTo_Volts() for more about this formula.
1340:Generated_Source\PSoC4/ADC_1.c **** * 
1341:Generated_Source\PSoC4/ADC_1.c **** * To set channel 0's gain based on known V_ref_mV, use:
1342:Generated_Source\PSoC4/ADC_1.c **** *     ADC_1_SetGain(0uL, 10000 * (1uL << (Resolution - 1)) / V_ref_mV);
1343:Generated_Source\PSoC4/ADC_1.c **** *  
1344:Generated_Source\PSoC4/ADC_1.c **** * \param chan ADC_1 channel number.
1345:Generated_Source\PSoC4/ADC_1.c **** * 
1346:Generated_Source\PSoC4/ADC_1.c **** * \param adcGain ADC_1 gain in counts per 10 volt.
1347:Generated_Source\PSoC4/ADC_1.c **** *
1348:Generated_Source\PSoC4/ADC_1.c **** * \return None
1349:Generated_Source\PSoC4/ADC_1.c **** * 
1350:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1351:Generated_Source\PSoC4/ADC_1.c **** *
1352:Generated_Source\PSoC4/ADC_1.c **** * <b>Code Snippet</b>
1353:Generated_Source\PSoC4/ADC_1.c **** *  \snippet main.c snippet_ADC_1_SetGain
1354:Generated_Source\PSoC4/ADC_1.c **** *
1355:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1356:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_SetGain(uint32 chan, int32 adcGain)
1357:Generated_Source\PSoC4/ADC_1.c **** {   
 957              		.loc 1 1357 0
 958              		.cfi_startproc
 959              		@ args = 0, pretend = 0, frame = 0
 960              		@ frame_needed = 0, uses_anonymous_args = 0
 961              	.LVL74:
 962 0000 70B5     		push	{r4, r5, r6, lr}
 963              		.cfi_def_cfa_offset 16
 964              		.cfi_offset 4, -16
 965              		.cfi_offset 5, -12
 966              		.cfi_offset 6, -8
 967              		.cfi_offset 14, -4
 968 0002 0500     		movs	r5, r0
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 43


 969 0004 0C00     		movs	r4, r1
1358:Generated_Source\PSoC4/ADC_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
1359:Generated_Source\PSoC4/ADC_1.c ****     CYASSERT(chan < ADC_1_allConfigs[ADC_1_currentConfig].numChannels);
 970              		.loc 1 1359 0
 971 0006 0C4B     		ldr	r3, .L77
 972 0008 1A68     		ldr	r2, [r3]
 973 000a D300     		lsls	r3, r2, #3
 974 000c 9A1A     		subs	r2, r3, r2
 975 000e D300     		lsls	r3, r2, #3
 976 0010 0A4A     		ldr	r2, .L77+4
 977 0012 D318     		adds	r3, r2, r3
 978 0014 5B68     		ldr	r3, [r3, #4]
 979 0016 8342     		cmp	r3, r0
 980 0018 02D8     		bhi	.L76
 981              		.loc 1 1359 0 is_stmt 0 discriminator 1
 982 001a 0020     		movs	r0, #0
 983              	.LVL75:
 984 001c FFF7FEFF 		bl	CyHalt
 985              	.LVL76:
 986              	.L76:
1360:Generated_Source\PSoC4/ADC_1.c **** 
1361:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_countsPer10Volt[ADC_1_allConfigs[ADC_1_currentConfig].channelBase + chan]
 987              		.loc 1 1361 0 is_stmt 1
 988 0020 054B     		ldr	r3, .L77
 989 0022 1A68     		ldr	r2, [r3]
 990 0024 D300     		lsls	r3, r2, #3
 991 0026 9B1A     		subs	r3, r3, r2
 992 0028 DA00     		lsls	r2, r3, #3
 993 002a 044B     		ldr	r3, .L77+4
 994 002c D058     		ldr	r0, [r2, r3]
 995 002e 2818     		adds	r0, r5, r0
1362:Generated_Source\PSoC4/ADC_1.c **** 	= adcGain;
 996              		.loc 1 1362 0
 997 0030 8000     		lsls	r0, r0, #2
 998 0032 034B     		ldr	r3, .L77+8
 999 0034 C450     		str	r4, [r0, r3]
1363:Generated_Source\PSoC4/ADC_1.c ****     return;
1364:Generated_Source\PSoC4/ADC_1.c **** }
 1000              		.loc 1 1364 0
 1001              		@ sp needed
 1002              	.LVL77:
 1003              	.LVL78:
 1004 0036 70BD     		pop	{r4, r5, r6, pc}
 1005              	.L78:
 1006              		.align	2
 1007              	.L77:
 1008 0038 00000000 		.word	.LANCHOR0
 1009 003c 00000000 		.word	ADC_1_allConfigs
 1010 0040 00000000 		.word	ADC_1_countsPer10Volt
 1011              		.cfi_endproc
 1012              	.LFE20:
 1013              		.size	ADC_1_SetGain, .-ADC_1_SetGain
 1014              		.global	__aeabi_uidiv
 1015              		.global	__aeabi_idiv
 1016              		.section	.text.ADC_1_RawCounts2Counts,"ax",%progbits
 1017              		.align	2
 1018              		.global	ADC_1_RawCounts2Counts
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 44


 1019              		.code	16
 1020              		.thumb_func
 1021              		.type	ADC_1_RawCounts2Counts, %function
 1022              	ADC_1_RawCounts2Counts:
 1023              	.LFB21:
1365:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1366:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_RawCounts2Counts
1367:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1368:Generated_Source\PSoC4/ADC_1.c **** *
1369:Generated_Source\PSoC4/ADC_1.c **** * \brief Converts the output of the SAR to an idealized count value.
1370:Generated_Source\PSoC4/ADC_1.c **** *
1371:Generated_Source\PSoC4/ADC_1.c **** * Divides by averaging amount, if needed, and subtracts offset.
1372:Generated_Source\PSoC4/ADC_1.c **** *
1373:Generated_Source\PSoC4/ADC_1.c **** * \param chan ADC_1 channel number.   
1374:Generated_Source\PSoC4/ADC_1.c **** *
1375:Generated_Source\PSoC4/ADC_1.c **** * \param adcCounts Result from the ADC_1 conversion.
1376:Generated_Source\PSoC4/ADC_1.c **** *
1377:Generated_Source\PSoC4/ADC_1.c **** * \return Averaged and offset counts.
1378:Generated_Source\PSoC4/ADC_1.c **** * 
1379:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1380:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1381:Generated_Source\PSoC4/ADC_1.c **** int16 ADC_1_RawCounts2Counts(uint32 chan, int16 adcCounts)
1382:Generated_Source\PSoC4/ADC_1.c **** {
 1024              		.loc 1 1382 0
 1025              		.cfi_startproc
 1026              		@ args = 0, pretend = 0, frame = 0
 1027              		@ frame_needed = 0, uses_anonymous_args = 0
 1028              	.LVL79:
 1029 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1030              		.cfi_def_cfa_offset 24
 1031              		.cfi_offset 3, -24
 1032              		.cfi_offset 4, -20
 1033              		.cfi_offset 5, -16
 1034              		.cfi_offset 6, -12
 1035              		.cfi_offset 7, -8
 1036              		.cfi_offset 14, -4
 1037 0002 0600     		movs	r6, r0
 1038 0004 0C00     		movs	r4, r1
1383:Generated_Source\PSoC4/ADC_1.c ****     uint32 temp;
1384:Generated_Source\PSoC4/ADC_1.c **** 	uint32 averageAdcSamplesDiv;
1385:Generated_Source\PSoC4/ADC_1.c **** 	uint32 rawChannel;
1386:Generated_Source\PSoC4/ADC_1.c **** 	rawChannel = ADC_1_allConfigs[ADC_1_currentConfig].channelBase + chan;
 1039              		.loc 1 1386 0
 1040 0006 204B     		ldr	r3, .L85
 1041 0008 1968     		ldr	r1, [r3]
 1042              	.LVL80:
 1043 000a 2048     		ldr	r0, .L85+4
 1044              	.LVL81:
 1045 000c CB00     		lsls	r3, r1, #3
 1046 000e 5D1A     		subs	r5, r3, r1
 1047 0010 EA00     		lsls	r2, r5, #3
 1048 0012 1558     		ldr	r5, [r2, r0]
 1049 0014 AD19     		adds	r5, r5, r6
 1050              	.LVL82:
1387:Generated_Source\PSoC4/ADC_1.c **** 	
1388:Generated_Source\PSoC4/ADC_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
1389:Generated_Source\PSoC4/ADC_1.c ****     CYASSERT(chan < ADC_1_allConfigs[ADC_1_currentConfig].numChannels);
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 45


 1051              		.loc 1 1389 0
 1052 0016 8218     		adds	r2, r0, r2
 1053 0018 5368     		ldr	r3, [r2, #4]
 1054 001a 9E42     		cmp	r6, r3
 1055 001c 02D3     		bcc	.L80
 1056              		.loc 1 1389 0 is_stmt 0 discriminator 1
 1057 001e 0020     		movs	r0, #0
 1058 0020 FFF7FEFF 		bl	CyHalt
 1059              	.LVL83:
 1060              	.L80:
1390:Generated_Source\PSoC4/ADC_1.c **** 
1391:Generated_Source\PSoC4/ADC_1.c ****     /* Divide the adcCount when accumulate averaging mode selected */
1392:Generated_Source\PSoC4/ADC_1.c ****     /* If Average mode != fixed */
1393:Generated_Source\PSoC4/ADC_1.c **** 	if((ADC_1_allConfigs[ADC_1_currentConfig].sampleCtrl 
 1061              		.loc 1 1393 0 is_stmt 1
 1062 0024 184B     		ldr	r3, .L85
 1063 0026 1A68     		ldr	r2, [r3]
 1064 0028 D300     		lsls	r3, r2, #3
 1065 002a 9A1A     		subs	r2, r3, r2
 1066 002c D300     		lsls	r3, r2, #3
 1067 002e 174A     		ldr	r2, .L85+4
 1068 0030 D318     		adds	r3, r2, r3
 1069 0032 DB68     		ldr	r3, [r3, #12]
 1070 0034 1A06     		lsls	r2, r3, #24
 1071 0036 1FD4     		bmi	.L81
1394:Generated_Source\PSoC4/ADC_1.c **** 		& ADC_1_SAR_SAMPLE_CTRL_AVG_SHIFT_MSK) 
1395:Generated_Source\PSoC4/ADC_1.c **** 		!= ADC_1_SAR_SAMPLE_CTRL_AVG_SHIFT_MSK)
1396:Generated_Source\PSoC4/ADC_1.c **** 	{
1397:Generated_Source\PSoC4/ADC_1.c ****         /* If Channel uses averaging */
1398:Generated_Source\PSoC4/ADC_1.c ****         if((ADC_1_channelsConfig[rawChannel] & ADC_1_SAR_CHAN_CONFIG_AVG_EN_MSK) != 0u)
 1072              		.loc 1 1398 0
 1073 0038 AA00     		lsls	r2, r5, #2
 1074 003a 1549     		ldr	r1, .L85+8
 1075 003c 5258     		ldr	r2, [r2, r1]
 1076 003e 5205     		lsls	r2, r2, #21
 1077 0040 1AD5     		bpl	.L81
1399:Generated_Source\PSoC4/ADC_1.c ****         {
1400:Generated_Source\PSoC4/ADC_1.c ****             /* Divide by 2^(AVG_CNT + 1) */
1401:Generated_Source\PSoC4/ADC_1.c **** 			averageAdcSamplesDiv = ((ADC_1_allConfigs[ADC_1_currentConfig].sampleCtrl 
1402:Generated_Source\PSoC4/ADC_1.c **** 				& ADC_1_SAR_SAMPLE_CTRL_AVG_CNT_MSK) 
1403:Generated_Source\PSoC4/ADC_1.c **** 				>> ADC_1_SAR_SAMPLE_CTRL_AVG_CNT_SHFT);
 1078              		.loc 1 1403 0
 1079 0042 1A09     		lsrs	r2, r3, #4
1401:Generated_Source\PSoC4/ADC_1.c **** 				& ADC_1_SAR_SAMPLE_CTRL_AVG_CNT_MSK) 
 1080              		.loc 1 1401 0
 1081 0044 0721     		movs	r1, #7
 1082 0046 0A40     		ands	r2, r1
 1083              	.LVL84:
1404:Generated_Source\PSoC4/ADC_1.c ****             averageAdcSamplesDiv = (1uL << (averageAdcSamplesDiv + 1uL));
 1084              		.loc 1 1404 0
 1085 0048 0132     		adds	r2, r2, #1
 1086              	.LVL85:
 1087 004a 0127     		movs	r7, #1
 1088 004c 9740     		lsls	r7, r7, r2
 1089              	.LVL86:
1405:Generated_Source\PSoC4/ADC_1.c ****                         /* When it's "Sequential, Sum", divider limit is 16 */
1406:Generated_Source\PSoC4/ADC_1.c ****             /* If Mode is ACCUNDUMP */
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 46


1407:Generated_Source\PSoC4/ADC_1.c ****             if((ADC_1_allConfigs[ADC_1_currentConfig].sampleCtrl 
 1090              		.loc 1 1407 0
 1091 004e DB05     		lsls	r3, r3, #23
 1092 0050 02D4     		bmi	.L82
1408:Generated_Source\PSoC4/ADC_1.c ****     			& ADC_1_SAR_SAMPLE_CTRL_AVG_MODE_MSK) 
1409:Generated_Source\PSoC4/ADC_1.c ****     			!= ADC_1_SAR_SAMPLE_CTRL_AVG_MODE_MSK)
1410:Generated_Source\PSoC4/ADC_1.c ****     		{
1411:Generated_Source\PSoC4/ADC_1.c ****                 if (averageAdcSamplesDiv > 16uL)
 1093              		.loc 1 1411 0
 1094 0052 102F     		cmp	r7, #16
 1095 0054 00D9     		bls	.L82
1412:Generated_Source\PSoC4/ADC_1.c ****                 {
1413:Generated_Source\PSoC4/ADC_1.c ****                     averageAdcSamplesDiv = 16uL;
 1096              		.loc 1 1413 0
 1097 0056 1027     		movs	r7, #16
 1098              	.LVL87:
 1099              	.L82:
1414:Generated_Source\PSoC4/ADC_1.c ****                 }
1415:Generated_Source\PSoC4/ADC_1.c ****             }
1416:Generated_Source\PSoC4/ADC_1.c ****             /* If unsigned format, prevent sign extension */
1417:Generated_Source\PSoC4/ADC_1.c ****             if(0 == ADC_1_IsChannelSigned(chan))
 1100              		.loc 1 1417 0
 1101 0058 3000     		movs	r0, r6
 1102 005a FFF7FEFF 		bl	ADC_1_IsChannelSigned
 1103              	.LVL88:
 1104 005e 0028     		cmp	r0, #0
 1105 0060 05D1     		bne	.L83
1418:Generated_Source\PSoC4/ADC_1.c ****             {
1419:Generated_Source\PSoC4/ADC_1.c **** 				temp = ((uint16) adcCounts / averageAdcSamplesDiv);
 1106              		.loc 1 1419 0
 1107 0062 A0B2     		uxth	r0, r4
 1108 0064 3900     		movs	r1, r7
 1109 0066 FFF7FEFF 		bl	__aeabi_uidiv
 1110              	.LVL89:
1420:Generated_Source\PSoC4/ADC_1.c ****                 adcCounts = (int16) temp;
 1111              		.loc 1 1420 0
 1112 006a 04B2     		sxth	r4, r0
 1113              	.LVL90:
 1114 006c 04E0     		b	.L81
 1115              	.LVL91:
 1116              	.L83:
1421:Generated_Source\PSoC4/ADC_1.c ****             }
1422:Generated_Source\PSoC4/ADC_1.c ****             else
1423:Generated_Source\PSoC4/ADC_1.c ****             {
1424:Generated_Source\PSoC4/ADC_1.c ****                 adcCounts /= (int16) averageAdcSamplesDiv;
 1117              		.loc 1 1424 0
 1118 006e 39B2     		sxth	r1, r7
 1119 0070 2000     		movs	r0, r4
 1120 0072 FFF7FEFF 		bl	__aeabi_idiv
 1121              	.LVL92:
 1122 0076 04B2     		sxth	r4, r0
 1123              	.LVL93:
 1124              	.L81:
1425:Generated_Source\PSoC4/ADC_1.c ****             }
1426:Generated_Source\PSoC4/ADC_1.c ****         }
1427:Generated_Source\PSoC4/ADC_1.c ****     }
1428:Generated_Source\PSoC4/ADC_1.c ****     /* Subtract ADC offset */
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 47


1429:Generated_Source\PSoC4/ADC_1.c ****     adcCounts -= ADC_1_offset[rawChannel];
 1125              		.loc 1 1429 0
 1126 0078 6D00     		lsls	r5, r5, #1
 1127              	.LVL94:
 1128 007a 064B     		ldr	r3, .L85+12
 1129 007c E85A     		ldrh	r0, [r5, r3]
 1130 007e 00B2     		sxth	r0, r0
 1131 0080 201A     		subs	r0, r4, r0
 1132 0082 00B2     		sxth	r0, r0
 1133              	.LVL95:
1430:Generated_Source\PSoC4/ADC_1.c ****     return adcCounts;
1431:Generated_Source\PSoC4/ADC_1.c **** }
 1134              		.loc 1 1431 0
 1135              		@ sp needed
 1136              	.LVL96:
 1137 0084 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1138              	.L86:
 1139 0086 C046     		.align	2
 1140              	.L85:
 1141 0088 00000000 		.word	.LANCHOR0
 1142 008c 00000000 		.word	ADC_1_allConfigs
 1143 0090 00000000 		.word	.LANCHOR1
 1144 0094 00000000 		.word	ADC_1_offset
 1145              		.cfi_endproc
 1146              	.LFE21:
 1147              		.size	ADC_1_RawCounts2Counts, .-ADC_1_RawCounts2Counts
 1148              		.global	__aeabi_i2f
 1149              		.global	__aeabi_fmul
 1150              		.global	__aeabi_fdiv
 1151              		.section	.text.ADC_1_CountsTo_Volts,"ax",%progbits
 1152              		.align	2
 1153              		.global	ADC_1_CountsTo_Volts
 1154              		.code	16
 1155              		.thumb_func
 1156              		.type	ADC_1_CountsTo_Volts, %function
 1157              	ADC_1_CountsTo_Volts:
 1158              	.LFB22:
1432:Generated_Source\PSoC4/ADC_1.c **** 
1433:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1434:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_CountsTo_Volts
1435:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1436:Generated_Source\PSoC4/ADC_1.c **** *
1437:Generated_Source\PSoC4/ADC_1.c **** * \brief Converts the ADC output to Volts as a float32. For example, if the ADC 
1438:Generated_Source\PSoC4/ADC_1.c **** * measured 0.534 volts, the return value would be 0.534.
1439:Generated_Source\PSoC4/ADC_1.c **** * The calculation of voltage depends on the contents of ADC_1_offset[],
1440:Generated_Source\PSoC4/ADC_1.c **** * ADC_1_countsPer10Volt[], and other parameters.  The equation used is:
1441:Generated_Source\PSoC4/ADC_1.c **** * 
1442:Generated_Source\PSoC4/ADC_1.c **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1443:Generated_Source\PSoC4/ADC_1.c **** * -Counts = Raw Counts from SAR register
1444:Generated_Source\PSoC4/ADC_1.c **** * -AvgDivider = divider based on averaging mode
1445:Generated_Source\PSoC4/ADC_1.c **** *     -Sequential, Sum: AvgDivider = number averaged
1446:Generated_Source\PSoC4/ADC_1.c **** *         Note: The divider should be a maximum of 16. If using more averages, 
1447:Generated_Source\PSoC4/ADC_1.c **** *         pre-scale Counts by (number averaged / 16)
1448:Generated_Source\PSoC4/ADC_1.c **** *     -Interleaved, Sum: AvgDivider = number averaged
1449:Generated_Source\PSoC4/ADC_1.c **** *     -Sequential, Fixed: AvgDivider = 1
1450:Generated_Source\PSoC4/ADC_1.c **** * -Offset = ADC_1_offset[]
1451:Generated_Source\PSoC4/ADC_1.c **** * -TEN_VOLT = 10V constant and unit scalar.
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 48


1452:Generated_Source\PSoC4/ADC_1.c **** * -Gain = ADC_1_countsPer10Volt[]
1453:Generated_Source\PSoC4/ADC_1.c **** * 
1454:Generated_Source\PSoC4/ADC_1.c **** * When the Vref is based on Vdda, the value used for Vdda is set for the project
1455:Generated_Source\PSoC4/ADC_1.c **** * in the System tab of the DWR.
1456:Generated_Source\PSoC4/ADC_1.c **** *
1457:Generated_Source\PSoC4/ADC_1.c **** * \param chan ADC_1 channel number.   
1458:Generated_Source\PSoC4/ADC_1.c **** *
1459:Generated_Source\PSoC4/ADC_1.c **** * \param adcCounts Result from the ADC_1 conversion.
1460:Generated_Source\PSoC4/ADC_1.c **** *
1461:Generated_Source\PSoC4/ADC_1.c **** * \return Result in Volts.
1462:Generated_Source\PSoC4/ADC_1.c **** * 
1463:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1464:Generated_Source\PSoC4/ADC_1.c **** *
1465:Generated_Source\PSoC4/ADC_1.c **** * <b>Code Snippet</b>
1466:Generated_Source\PSoC4/ADC_1.c **** *  \snippet main.c snippet_ADC_1_CountsTo_Volts
1467:Generated_Source\PSoC4/ADC_1.c **** *
1468:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1469:Generated_Source\PSoC4/ADC_1.c **** float32 ADC_1_CountsTo_Volts(uint32 chan, int16 adcCounts)
1470:Generated_Source\PSoC4/ADC_1.c **** {   
 1159              		.loc 1 1470 0
 1160              		.cfi_startproc
 1161              		@ args = 0, pretend = 0, frame = 0
 1162              		@ frame_needed = 0, uses_anonymous_args = 0
 1163              	.LVL97:
 1164 0000 70B5     		push	{r4, r5, r6, lr}
 1165              		.cfi_def_cfa_offset 16
 1166              		.cfi_offset 4, -16
 1167              		.cfi_offset 5, -12
 1168              		.cfi_offset 6, -8
 1169              		.cfi_offset 14, -4
 1170              	.LVL98:
1471:Generated_Source\PSoC4/ADC_1.c ****     float32 result_Volts = 0.0f;
1472:Generated_Source\PSoC4/ADC_1.c **** 	uint32 rawChannel;
1473:Generated_Source\PSoC4/ADC_1.c **** 	rawChannel = ADC_1_allConfigs[ADC_1_currentConfig].channelBase + chan;
 1171              		.loc 1 1473 0
 1172 0002 104B     		ldr	r3, .L90
 1173 0004 1D68     		ldr	r5, [r3]
 1174 0006 104E     		ldr	r6, .L90+4
 1175 0008 EB00     		lsls	r3, r5, #3
 1176 000a 5C1B     		subs	r4, r3, r5
 1177 000c E200     		lsls	r2, r4, #3
 1178 000e 9459     		ldr	r4, [r2, r6]
 1179 0010 2418     		adds	r4, r4, r0
 1180              	.LVL99:
1474:Generated_Source\PSoC4/ADC_1.c **** 	
1475:Generated_Source\PSoC4/ADC_1.c **** 	if((ADC_1_allConfigs[ADC_1_currentConfig].sampleCtrl 
 1181              		.loc 1 1475 0
 1182 0012 B218     		adds	r2, r6, r2
 1183 0014 D368     		ldr	r3, [r2, #12]
 1184 0016 9B07     		lsls	r3, r3, #30
 1185 0018 11D4     		bmi	.L89
1476:Generated_Source\PSoC4/ADC_1.c **** 		& ADC_1_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK) 
1477:Generated_Source\PSoC4/ADC_1.c **** 		!= ADC_1_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK)
1478:Generated_Source\PSoC4/ADC_1.c **** 	{
1479:Generated_Source\PSoC4/ADC_1.c ****         adcCounts = ADC_1_RawCounts2Counts(chan, adcCounts);
 1186              		.loc 1 1479 0
 1187 001a FFF7FEFF 		bl	ADC_1_RawCounts2Counts
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 49


 1188              	.LVL100:
1480:Generated_Source\PSoC4/ADC_1.c **** 
1481:Generated_Source\PSoC4/ADC_1.c ****         result_Volts = ((float32)adcCounts * ADC_1_10V_COUNTS) 
 1189              		.loc 1 1481 0
 1190 001e FFF7FEFF 		bl	__aeabi_i2f
 1191              	.LVL101:
 1192 0022 0A49     		ldr	r1, .L90+8
 1193 0024 FFF7FEFF 		bl	__aeabi_fmul
 1194              	.LVL102:
 1195 0028 051C     		adds	r5, r0, #0
1482:Generated_Source\PSoC4/ADC_1.c **** 			/ (float32)ADC_1_countsPer10Volt[rawChannel];
 1196              		.loc 1 1482 0
 1197 002a A400     		lsls	r4, r4, #2
 1198              	.LVL103:
 1199 002c 084B     		ldr	r3, .L90+12
 1200 002e E058     		ldr	r0, [r4, r3]
 1201 0030 FFF7FEFF 		bl	__aeabi_i2f
 1202              	.LVL104:
 1203 0034 011C     		adds	r1, r0, #0
1481:Generated_Source\PSoC4/ADC_1.c **** 			/ (float32)ADC_1_countsPer10Volt[rawChannel];
 1204              		.loc 1 1481 0
 1205 0036 281C     		adds	r0, r5, #0
 1206 0038 FFF7FEFF 		bl	__aeabi_fdiv
 1207              	.LVL105:
 1208 003c 00E0     		b	.L88
 1209              	.LVL106:
 1210              	.L89:
1471:Generated_Source\PSoC4/ADC_1.c **** 	uint32 rawChannel;
 1211              		.loc 1 1471 0
 1212 003e 0020     		movs	r0, #0
 1213              	.LVL107:
 1214              	.L88:
1483:Generated_Source\PSoC4/ADC_1.c **** 	}
1484:Generated_Source\PSoC4/ADC_1.c **** 	return result_Volts;
1485:Generated_Source\PSoC4/ADC_1.c **** }
 1215              		.loc 1 1485 0
 1216              		@ sp needed
 1217 0040 70BD     		pop	{r4, r5, r6, pc}
 1218              	.L91:
 1219 0042 C046     		.align	2
 1220              	.L90:
 1221 0044 00000000 		.word	.LANCHOR0
 1222 0048 00000000 		.word	ADC_1_allConfigs
 1223 004c 00002041 		.word	1092616192
 1224 0050 00000000 		.word	ADC_1_countsPer10Volt
 1225              		.cfi_endproc
 1226              	.LFE22:
 1227              		.size	ADC_1_CountsTo_Volts, .-ADC_1_CountsTo_Volts
 1228              		.section	.text.ADC_1_CountsTo_mVolts,"ax",%progbits
 1229              		.align	2
 1230              		.global	ADC_1_CountsTo_mVolts
 1231              		.code	16
 1232              		.thumb_func
 1233              		.type	ADC_1_CountsTo_mVolts, %function
 1234              	ADC_1_CountsTo_mVolts:
 1235              	.LFB23:
1486:Generated_Source\PSoC4/ADC_1.c **** 
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 50


1487:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1488:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_CountsTo_mVolts
1489:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1490:Generated_Source\PSoC4/ADC_1.c **** *
1491:Generated_Source\PSoC4/ADC_1.c **** * \brief Converts the ADC output to millivolts as an int16. For example, if the ADC 
1492:Generated_Source\PSoC4/ADC_1.c **** * measured 0.534 volts, the return value would be 534.
1493:Generated_Source\PSoC4/ADC_1.c **** * The calculation of voltage depends on the contents of ADC_1_offset[],
1494:Generated_Source\PSoC4/ADC_1.c **** * ADC_1_countsPer10Volt[], and other parameters.  The equation used is:
1495:Generated_Source\PSoC4/ADC_1.c **** * 
1496:Generated_Source\PSoC4/ADC_1.c **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1497:Generated_Source\PSoC4/ADC_1.c **** * -Counts = Raw Counts from SAR register
1498:Generated_Source\PSoC4/ADC_1.c **** * -AvgDivider = divider based on averaging mode
1499:Generated_Source\PSoC4/ADC_1.c **** *     -Sequential, Sum: AvgDivider = number averaged
1500:Generated_Source\PSoC4/ADC_1.c **** *         Note: The divider should be a maximum of 16. If using more averages, 
1501:Generated_Source\PSoC4/ADC_1.c **** *         pre-scale Counts by (number averaged / 16)
1502:Generated_Source\PSoC4/ADC_1.c **** *     -Interleaved, Sum: AvgDivider = number averaged
1503:Generated_Source\PSoC4/ADC_1.c **** *     -Sequential, Fixed: AvgDivider = 1
1504:Generated_Source\PSoC4/ADC_1.c **** * -Offset = ADC_1_offset[]
1505:Generated_Source\PSoC4/ADC_1.c **** * -TEN_VOLT = 10V constant and unit scalar.
1506:Generated_Source\PSoC4/ADC_1.c **** * -Gain = ADC_1_countsPer10Volt[]
1507:Generated_Source\PSoC4/ADC_1.c **** * 
1508:Generated_Source\PSoC4/ADC_1.c **** * When the Vref is based on Vdda, the value used for Vdda is set for the project
1509:Generated_Source\PSoC4/ADC_1.c **** * in the System tab of the DWR.
1510:Generated_Source\PSoC4/ADC_1.c **** *
1511:Generated_Source\PSoC4/ADC_1.c **** * \param chan ADC_1 channel number. 
1512:Generated_Source\PSoC4/ADC_1.c **** *
1513:Generated_Source\PSoC4/ADC_1.c **** * \param adcCounts Result from the ADC_1 conversion.
1514:Generated_Source\PSoC4/ADC_1.c **** * 
1515:Generated_Source\PSoC4/ADC_1.c **** * \return Result in mV.
1516:Generated_Source\PSoC4/ADC_1.c **** * 
1517:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None.
1518:Generated_Source\PSoC4/ADC_1.c **** *
1519:Generated_Source\PSoC4/ADC_1.c **** * <b>Code Snippet</b>
1520:Generated_Source\PSoC4/ADC_1.c **** *  \snippet main.c snippet_ADC_1_CountsTo_mVolts
1521:Generated_Source\PSoC4/ADC_1.c **** *
1522:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1523:Generated_Source\PSoC4/ADC_1.c **** int16 ADC_1_CountsTo_mVolts(uint32 chan, int16 adcCounts)
1524:Generated_Source\PSoC4/ADC_1.c **** {   
 1236              		.loc 1 1524 0
 1237              		.cfi_startproc
 1238              		@ args = 0, pretend = 0, frame = 0
 1239              		@ frame_needed = 0, uses_anonymous_args = 0
 1240              	.LVL108:
 1241 0000 70B5     		push	{r4, r5, r6, lr}
 1242              		.cfi_def_cfa_offset 16
 1243              		.cfi_offset 4, -16
 1244              		.cfi_offset 5, -12
 1245              		.cfi_offset 6, -8
 1246              		.cfi_offset 14, -4
 1247              	.LVL109:
1525:Generated_Source\PSoC4/ADC_1.c ****     int16 result_mVolts = 0;
1526:Generated_Source\PSoC4/ADC_1.c **** 	uint32 rawChannel;
1527:Generated_Source\PSoC4/ADC_1.c ****     
1528:Generated_Source\PSoC4/ADC_1.c **** 	rawChannel = ADC_1_allConfigs[ADC_1_currentConfig].channelBase + chan;
 1248              		.loc 1 1528 0
 1249 0002 154B     		ldr	r3, .L97
 1250 0004 1D68     		ldr	r5, [r3]
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 51


 1251 0006 154E     		ldr	r6, .L97+4
 1252 0008 EB00     		lsls	r3, r5, #3
 1253 000a 5C1B     		subs	r4, r3, r5
 1254 000c E200     		lsls	r2, r4, #3
 1255 000e 9459     		ldr	r4, [r2, r6]
 1256 0010 2418     		adds	r4, r4, r0
 1257              	.LVL110:
1529:Generated_Source\PSoC4/ADC_1.c **** 	
1530:Generated_Source\PSoC4/ADC_1.c **** 	if((ADC_1_allConfigs[ADC_1_currentConfig].sampleCtrl 
 1258              		.loc 1 1530 0
 1259 0012 B218     		adds	r2, r6, r2
 1260 0014 D368     		ldr	r3, [r2, #12]
 1261 0016 9B07     		lsls	r3, r3, #30
 1262 0018 1BD4     		bmi	.L96
1531:Generated_Source\PSoC4/ADC_1.c **** 		& ADC_1_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK) 
1532:Generated_Source\PSoC4/ADC_1.c **** 		!= ADC_1_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK)
1533:Generated_Source\PSoC4/ADC_1.c **** 	{
1534:Generated_Source\PSoC4/ADC_1.c ****         adcCounts = ADC_1_RawCounts2Counts(chan, adcCounts);
 1263              		.loc 1 1534 0
 1264 001a FFF7FEFF 		bl	ADC_1_RawCounts2Counts
 1265              	.LVL111:
1535:Generated_Source\PSoC4/ADC_1.c **** 
1536:Generated_Source\PSoC4/ADC_1.c **** 	    result_mVolts = (int16)((((int32)adcCounts * ADC_1_10MV_COUNTS) + ( (adcCounts > 0) ? 
 1266              		.loc 1 1536 0
 1267 001e 1049     		ldr	r1, .L97+8
 1268 0020 4143     		muls	r1, r0
1537:Generated_Source\PSoC4/ADC_1.c **** 	             (ADC_1_countsPer10Volt[rawChannel] / 2) 
1538:Generated_Source\PSoC4/ADC_1.c **** 				: (-(ADC_1_countsPer10Volt[rawChannel] / 2)) )) 
 1269              		.loc 1 1538 0
 1270 0022 0028     		cmp	r0, #0
 1271 0024 06DD     		ble	.L94
1537:Generated_Source\PSoC4/ADC_1.c **** 	             (ADC_1_countsPer10Volt[rawChannel] / 2) 
 1272              		.loc 1 1537 0 discriminator 1
 1273 0026 A300     		lsls	r3, r4, #2
 1274 0028 0E4A     		ldr	r2, .L97+12
 1275 002a 9B58     		ldr	r3, [r3, r2]
 1276              		.loc 1 1538 0 discriminator 1
 1277 002c D80F     		lsrs	r0, r3, #31
 1278              	.LVL112:
 1279 002e C318     		adds	r3, r0, r3
 1280 0030 5B10     		asrs	r3, r3, #1
 1281 0032 06E0     		b	.L95
 1282              	.LVL113:
 1283              	.L94:
 1284              		.loc 1 1538 0 is_stmt 0 discriminator 2
 1285 0034 A300     		lsls	r3, r4, #2
 1286 0036 0B4A     		ldr	r2, .L97+12
 1287 0038 9A58     		ldr	r2, [r3, r2]
 1288 003a D30F     		lsrs	r3, r2, #31
 1289 003c 9A18     		adds	r2, r3, r2
 1290 003e 5210     		asrs	r2, r2, #1
 1291 0040 5342     		rsbs	r3, r2, #0
 1292              	.LVL114:
 1293              	.L95:
1536:Generated_Source\PSoC4/ADC_1.c **** 	             (ADC_1_countsPer10Volt[rawChannel] / 2) 
 1294              		.loc 1 1536 0 is_stmt 1
 1295 0042 5818     		adds	r0, r3, r1
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 52


1539:Generated_Source\PSoC4/ADC_1.c **** 	             / ADC_1_countsPer10Volt[rawChannel]);
 1296              		.loc 1 1539 0
 1297 0044 A400     		lsls	r4, r4, #2
 1298              	.LVL115:
 1299 0046 074B     		ldr	r3, .L97+12
 1300 0048 E158     		ldr	r1, [r4, r3]
 1301 004a FFF7FEFF 		bl	__aeabi_idiv
 1302              	.LVL116:
1536:Generated_Source\PSoC4/ADC_1.c **** 	             (ADC_1_countsPer10Volt[rawChannel] / 2) 
 1303              		.loc 1 1536 0
 1304 004e 00B2     		sxth	r0, r0
 1305              	.LVL117:
 1306 0050 00E0     		b	.L93
 1307              	.LVL118:
 1308              	.L96:
1525:Generated_Source\PSoC4/ADC_1.c **** 	uint32 rawChannel;
 1309              		.loc 1 1525 0
 1310 0052 0020     		movs	r0, #0
 1311              	.LVL119:
 1312              	.L93:
1540:Generated_Source\PSoC4/ADC_1.c **** 	}
1541:Generated_Source\PSoC4/ADC_1.c ****     return result_mVolts;
1542:Generated_Source\PSoC4/ADC_1.c **** }
 1313              		.loc 1 1542 0
 1314              		@ sp needed
 1315              	.LVL120:
 1316 0054 70BD     		pop	{r4, r5, r6, pc}
 1317              	.L98:
 1318 0056 C046     		.align	2
 1319              	.L97:
 1320 0058 00000000 		.word	.LANCHOR0
 1321 005c 00000000 		.word	ADC_1_allConfigs
 1322 0060 10270000 		.word	10000
 1323 0064 00000000 		.word	ADC_1_countsPer10Volt
 1324              		.cfi_endproc
 1325              	.LFE23:
 1326              		.size	ADC_1_CountsTo_mVolts, .-ADC_1_CountsTo_mVolts
 1327              		.global	__aeabi_lmul
 1328              		.global	__aeabi_ldivmod
 1329              		.section	.text.ADC_1_CountsTo_uVolts,"ax",%progbits
 1330              		.align	2
 1331              		.global	ADC_1_CountsTo_uVolts
 1332              		.code	16
 1333              		.thumb_func
 1334              		.type	ADC_1_CountsTo_uVolts, %function
 1335              	ADC_1_CountsTo_uVolts:
 1336              	.LFB24:
1543:Generated_Source\PSoC4/ADC_1.c **** 
1544:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
1545:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_CountsTo_uVolts
1546:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//**
1547:Generated_Source\PSoC4/ADC_1.c **** *
1548:Generated_Source\PSoC4/ADC_1.c **** * \brief Converts the ADC output to microvolts as an int32. For example, if the ADC 
1549:Generated_Source\PSoC4/ADC_1.c **** * measured 0.534 volts, the return value would be 534000.
1550:Generated_Source\PSoC4/ADC_1.c **** * The calculation of voltage depends on the contents of ADC_1_offset[],
1551:Generated_Source\PSoC4/ADC_1.c **** * ADC_1_countsPer10Volt[], and other parameters.  The equation used is:
1552:Generated_Source\PSoC4/ADC_1.c **** * 
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 53


1553:Generated_Source\PSoC4/ADC_1.c **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1554:Generated_Source\PSoC4/ADC_1.c **** * -Counts = Raw Counts from SAR register
1555:Generated_Source\PSoC4/ADC_1.c **** * -AvgDivider = divider based on averaging mode
1556:Generated_Source\PSoC4/ADC_1.c **** *     -Sequential, Sum: AvgDivider = number averaged
1557:Generated_Source\PSoC4/ADC_1.c **** *         Note: The divider should be a maximum of 16. If using more averages, 
1558:Generated_Source\PSoC4/ADC_1.c **** *         pre-scale Counts by (number averaged / 16)
1559:Generated_Source\PSoC4/ADC_1.c **** *     -Interleaved, Sum: AvgDivider = number averaged
1560:Generated_Source\PSoC4/ADC_1.c **** *     -Sequential, Fixed: AvgDivider = 1
1561:Generated_Source\PSoC4/ADC_1.c **** * -Offset = ADC_1_offset[]
1562:Generated_Source\PSoC4/ADC_1.c **** * -TEN_VOLT = 10V constant and unit scalar.
1563:Generated_Source\PSoC4/ADC_1.c **** * -Gain = ADC_1_countsPer10Volt[]
1564:Generated_Source\PSoC4/ADC_1.c **** * 
1565:Generated_Source\PSoC4/ADC_1.c **** * When the Vref is based on Vdda, the value used for Vdda is set for the project
1566:Generated_Source\PSoC4/ADC_1.c **** * in the System tab of the DWR.
1567:Generated_Source\PSoC4/ADC_1.c **** *
1568:Generated_Source\PSoC4/ADC_1.c **** * \param chan ADC_1 channel number.   
1569:Generated_Source\PSoC4/ADC_1.c **** *
1570:Generated_Source\PSoC4/ADC_1.c **** * \param adcCounts Result from the ADC_1 conversion.
1571:Generated_Source\PSoC4/ADC_1.c **** *
1572:Generated_Source\PSoC4/ADC_1.c **** * \return Result in microvolts.
1573:Generated_Source\PSoC4/ADC_1.c **** * 
1574:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
1575:Generated_Source\PSoC4/ADC_1.c **** *
1576:Generated_Source\PSoC4/ADC_1.c **** * <b>Code Snippet</b>
1577:Generated_Source\PSoC4/ADC_1.c **** *  \snippet main.c snippet_ADC_1_CountsTo_uVolts
1578:Generated_Source\PSoC4/ADC_1.c **** *
1579:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
1580:Generated_Source\PSoC4/ADC_1.c **** int32 ADC_1_CountsTo_uVolts(uint32 chan, int16 adcCounts)
1581:Generated_Source\PSoC4/ADC_1.c **** {   
 1337              		.loc 1 1581 0
 1338              		.cfi_startproc
 1339              		@ args = 0, pretend = 0, frame = 0
 1340              		@ frame_needed = 0, uses_anonymous_args = 0
 1341              	.LVL121:
 1342 0000 70B5     		push	{r4, r5, r6, lr}
 1343              		.cfi_def_cfa_offset 16
 1344              		.cfi_offset 4, -16
 1345              		.cfi_offset 5, -12
 1346              		.cfi_offset 6, -8
 1347              		.cfi_offset 14, -4
 1348              	.LVL122:
1582:Generated_Source\PSoC4/ADC_1.c ****     int64 result_uVolts = 0;
1583:Generated_Source\PSoC4/ADC_1.c **** 	uint32 rawChannel;
1584:Generated_Source\PSoC4/ADC_1.c **** 	rawChannel = ADC_1_allConfigs[ADC_1_currentConfig].channelBase + chan;
 1349              		.loc 1 1584 0
 1350 0002 0E4B     		ldr	r3, .L102
 1351 0004 1D68     		ldr	r5, [r3]
 1352 0006 0E4E     		ldr	r6, .L102+4
 1353 0008 EB00     		lsls	r3, r5, #3
 1354 000a 5C1B     		subs	r4, r3, r5
 1355 000c E200     		lsls	r2, r4, #3
 1356 000e 9459     		ldr	r4, [r2, r6]
 1357 0010 2418     		adds	r4, r4, r0
 1358              	.LVL123:
1585:Generated_Source\PSoC4/ADC_1.c **** 
1586:Generated_Source\PSoC4/ADC_1.c **** 	if((ADC_1_allConfigs[ADC_1_currentConfig].sampleCtrl 
 1359              		.loc 1 1586 0
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 54


 1360 0012 B218     		adds	r2, r6, r2
 1361 0014 D368     		ldr	r3, [r2, #12]
 1362 0016 9B07     		lsls	r3, r3, #30
 1363 0018 0DD4     		bmi	.L101
1587:Generated_Source\PSoC4/ADC_1.c **** 		& ADC_1_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK) 
1588:Generated_Source\PSoC4/ADC_1.c **** 		!= ADC_1_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK)
1589:Generated_Source\PSoC4/ADC_1.c **** 	{
1590:Generated_Source\PSoC4/ADC_1.c ****         adcCounts = ADC_1_RawCounts2Counts(chan, adcCounts);
 1364              		.loc 1 1590 0
 1365 001a FFF7FEFF 		bl	ADC_1_RawCounts2Counts
 1366              	.LVL124:
1591:Generated_Source\PSoC4/ADC_1.c **** 
1592:Generated_Source\PSoC4/ADC_1.c ****         result_uVolts = ((int64)adcCounts * ADC_1_10UV_COUNTS) 
 1367              		.loc 1 1592 0
 1368 001e C117     		asrs	r1, r0, #31
 1369 0020 084A     		ldr	r2, .L102+8
 1370 0022 0023     		movs	r3, #0
 1371 0024 FFF7FEFF 		bl	__aeabi_lmul
 1372              	.LVL125:
1593:Generated_Source\PSoC4/ADC_1.c **** 			/ ADC_1_countsPer10Volt[rawChannel];
 1373              		.loc 1 1593 0
 1374 0028 A400     		lsls	r4, r4, #2
 1375              	.LVL126:
 1376 002a 074B     		ldr	r3, .L102+12
 1377 002c E258     		ldr	r2, [r4, r3]
 1378 002e D317     		asrs	r3, r2, #31
1592:Generated_Source\PSoC4/ADC_1.c **** 			/ ADC_1_countsPer10Volt[rawChannel];
 1379              		.loc 1 1592 0
 1380 0030 FFF7FEFF 		bl	__aeabi_ldivmod
 1381              	.LVL127:
 1382 0034 00E0     		b	.L100
 1383              	.LVL128:
 1384              	.L101:
1582:Generated_Source\PSoC4/ADC_1.c **** 	uint32 rawChannel;
 1385              		.loc 1 1582 0
 1386 0036 0020     		movs	r0, #0
 1387              	.LVL129:
 1388              	.L100:
1594:Generated_Source\PSoC4/ADC_1.c **** 	}
1595:Generated_Source\PSoC4/ADC_1.c **** 	return ( (int32)result_uVolts );
1596:Generated_Source\PSoC4/ADC_1.c **** }
 1389              		.loc 1 1596 0
 1390              		@ sp needed
 1391              	.LVL130:
 1392 0038 70BD     		pop	{r4, r5, r6, pc}
 1393              	.L103:
 1394 003a C046     		.align	2
 1395              	.L102:
 1396 003c 00000000 		.word	.LANCHOR0
 1397 0040 00000000 		.word	ADC_1_allConfigs
 1398 0044 80969800 		.word	10000000
 1399 0048 00000000 		.word	ADC_1_countsPer10Volt
 1400              		.cfi_endproc
 1401              	.LFE24:
 1402              		.size	ADC_1_CountsTo_uVolts, .-ADC_1_CountsTo_uVolts
 1403              		.section	.text.ADC_1_Init,"ax",%progbits
 1404              		.align	2
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 55


 1405              		.global	ADC_1_Init
 1406              		.code	16
 1407              		.thumb_func
 1408              		.type	ADC_1_Init, %function
 1409              	ADC_1_Init:
 1410              	.LFB25:
1597:Generated_Source\PSoC4/ADC_1.c **** 
1598:Generated_Source\PSoC4/ADC_1.c **** #if(0u != ADC_1_ANY_CONFIG_USES_FILTER)
1599:Generated_Source\PSoC4/ADC_1.c ****     
1600:Generated_Source\PSoC4/ADC_1.c ****     /* ****************************************************************************
1601:Generated_Source\PSoC4/ADC_1.c ****     * Function Name: ADC_1_TrimFilterVos
1602:Generated_Source\PSoC4/ADC_1.c ****     ****************************************************************************//*
1603:Generated_Source\PSoC4/ADC_1.c ****     *
1604:Generated_Source\PSoC4/ADC_1.c ****     * \brief Runs an algorithm to reduce voltage offset using the UAB's opamp trim.
1605:Generated_Source\PSoC4/ADC_1.c ****     *
1606:Generated_Source\PSoC4/ADC_1.c ****     * \param None
1607:Generated_Source\PSoC4/ADC_1.c ****     * 
1608:Generated_Source\PSoC4/ADC_1.c ****     * \return None
1609:Generated_Source\PSoC4/ADC_1.c ****     *
1610:Generated_Source\PSoC4/ADC_1.c ****     * \sideeffect None
1611:Generated_Source\PSoC4/ADC_1.c ****     *
1612:Generated_Source\PSoC4/ADC_1.c ****     * <b>Code Snippet</b>
1613:Generated_Source\PSoC4/ADC_1.c ****     *  \snippet main.c snippet_ADC_1_TrimFilterVos
1614:Generated_Source\PSoC4/ADC_1.c ****     *
1615:Generated_Source\PSoC4/ADC_1.c ****     *******************************************************************************/
1616:Generated_Source\PSoC4/ADC_1.c ****     void ADC_1_TrimFilterVos(void)
1617:Generated_Source\PSoC4/ADC_1.c ****     {
1618:Generated_Source\PSoC4/ADC_1.c ****         uint32 opampTrim = 0uL;
1619:Generated_Source\PSoC4/ADC_1.c ****         uint32 agndTrim = 0uL;
1620:Generated_Source\PSoC4/ADC_1.c ****         uint32 compStatus = 0uL;
1621:Generated_Source\PSoC4/ADC_1.c ****         
1622:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SetupComparatorTrim();
1623:Generated_Source\PSoC4/ADC_1.c ****         
1624:Generated_Source\PSoC4/ADC_1.c ****         /* Sweep from center to crossing */
1625:Generated_Source\PSoC4/ADC_1.c ****         compStatus = ADC_1_SetOpampAndAgndTrim(ADC_1_OPAMP_TRIM_POS_BASE, ADC_1_AGND_TRIM_POS_BASE)
1626:Generated_Source\PSoC4/ADC_1.c ****         if (0uL == compStatus)
1627:Generated_Source\PSoC4/ADC_1.c ****         {
1628:Generated_Source\PSoC4/ADC_1.c ****             opampTrim = ADC_1_RaiseOpampTrimToCrossing(ADC_1_OPAMP_TRIM_POS_BASE);
1629:Generated_Source\PSoC4/ADC_1.c ****             agndTrim = ADC_1_RaiseAgndTrimToCrossing(ADC_1_AGND_TRIM_POS_BASE);
1630:Generated_Source\PSoC4/ADC_1.c ****             if ((agndTrim == (ADC_1_AGND_TRIM_POS_LIMIT - 1uL))
1631:Generated_Source\PSoC4/ADC_1.c ****                 && (opampTrim != (ADC_1_OPAMP_TRIM_POS_LIMIT - 1uL)))
1632:Generated_Source\PSoC4/ADC_1.c ****             {
1633:Generated_Source\PSoC4/ADC_1.c ****                 opampTrim = ADC_1_IncOpampTrim(opampTrim);
1634:Generated_Source\PSoC4/ADC_1.c ****                 (void) ADC_1_SetOpampAndAgndTrim(opampTrim, ADC_1_AGND_TRIM_POS_BASE);
1635:Generated_Source\PSoC4/ADC_1.c ****                 (void) ADC_1_LowerAgndTrimToCrossing(ADC_1_AGND_TRIM_POS_BASE);
1636:Generated_Source\PSoC4/ADC_1.c ****             }
1637:Generated_Source\PSoC4/ADC_1.c ****         }
1638:Generated_Source\PSoC4/ADC_1.c ****         else
1639:Generated_Source\PSoC4/ADC_1.c ****         {
1640:Generated_Source\PSoC4/ADC_1.c ****             opampTrim = ADC_1_LowerOpampTrimToCrossing(ADC_1_OPAMP_TRIM_POS_BASE);
1641:Generated_Source\PSoC4/ADC_1.c ****             agndTrim = ADC_1_LowerAgndTrimToCrossing(ADC_1_AGND_TRIM_POS_BASE);
1642:Generated_Source\PSoC4/ADC_1.c ****             if ((agndTrim == (ADC_1_AGND_TRIM_NEG_LIMIT - 1uL))
1643:Generated_Source\PSoC4/ADC_1.c ****                 && (opampTrim != (ADC_1_OPAMP_TRIM_NEG_LIMIT - 1uL)))
1644:Generated_Source\PSoC4/ADC_1.c ****             {
1645:Generated_Source\PSoC4/ADC_1.c ****                 opampTrim = ADC_1_DecOpampTrim(opampTrim);
1646:Generated_Source\PSoC4/ADC_1.c ****                 (void) ADC_1_SetOpampAndAgndTrim(opampTrim, ADC_1_AGND_TRIM_POS_BASE);
1647:Generated_Source\PSoC4/ADC_1.c ****                 (void) ADC_1_RaiseAgndTrimToCrossing(ADC_1_AGND_TRIM_POS_BASE);
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 56


1648:Generated_Source\PSoC4/ADC_1.c ****             }
1649:Generated_Source\PSoC4/ADC_1.c ****         }
1650:Generated_Source\PSoC4/ADC_1.c ****         
1651:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UndoComparatorTrimSetup();
1652:Generated_Source\PSoC4/ADC_1.c ****     }
1653:Generated_Source\PSoC4/ADC_1.c ****     
1654:Generated_Source\PSoC4/ADC_1.c ****     
1655:Generated_Source\PSoC4/ADC_1.c ****     static void ADC_1_SetupComparatorTrim(void)
1656:Generated_Source\PSoC4/ADC_1.c ****     {
1657:Generated_Source\PSoC4/ADC_1.c ****         /* Set firmware modbit. */
1658:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_A_CAP_ABCF_VAL_REG |= (0x1uL << CyUAB_SIGN_VAL_SHIFT);
1659:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_CAP_ABCF_VAL_REG |= (0x1uL << CyUAB_SIGN_VAL_SHIFT);
1660:Generated_Source\PSoC4/ADC_1.c ****         
1661:Generated_Source\PSoC4/ADC_1.c ****         /* Open filter output switch to isolate filter during trim. */
1662:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_SW_CF_BOT_REG &= ~(uint32)(ADC_1_UABH_B_SW_PO_MASK);
1663:Generated_Source\PSoC4/ADC_1.c ****         
1664:Generated_Source\PSoC4/ADC_1.c ****         /* Power on the UAB half B reference buffer. */
1665:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_OA_CTRL_REG |= (uint32)ADC_1_UABH_B_REF_PWR_MASK;
1666:Generated_Source\PSoC4/ADC_1.c ****         
1667:Generated_Source\PSoC4/ADC_1.c ****         /* Connect the UAB half B reference buffer to the comparator. */
1668:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_SW_STATIC_REG |= (uint32)ADC_1_UABH_B_SW_RT_MASK;
1669:Generated_Source\PSoC4/ADC_1.c ****                         
1670:Generated_Source\PSoC4/ADC_1.c ****         /* Clock the UAB half B comparator with phi1. */
1671:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_SW_OTHER_REG &= ~(uint32)ADC_1_UABH_B_CMP_FF_MASK;
1672:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_SW_OTHER_REG |= (uint32)((uint32)CyUAB_CLK_PHI1 << ADC_1_UABH_B_CMP_FF_SHIFT);
1673:Generated_Source\PSoC4/ADC_1.c ****         
1674:Generated_Source\PSoC4/ADC_1.c ****         /* Power on the UAB half B comparator. */
1675:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_OA_CTRL_REG |= (uint32)ADC_1_UABH_B_CMP_PWR_MASK;
1676:Generated_Source\PSoC4/ADC_1.c ****     }
1677:Generated_Source\PSoC4/ADC_1.c ****     
1678:Generated_Source\PSoC4/ADC_1.c ****     
1679:Generated_Source\PSoC4/ADC_1.c ****     static void ADC_1_UndoComparatorTrimSetup(void)
1680:Generated_Source\PSoC4/ADC_1.c ****     {
1681:Generated_Source\PSoC4/ADC_1.c ****         /* Power off the UAB half B comparator. */
1682:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_OA_CTRL_REG &= ~(uint32)ADC_1_UABH_B_CMP_PWR_MASK;
1683:Generated_Source\PSoC4/ADC_1.c ****         
1684:Generated_Source\PSoC4/ADC_1.c ****         /* Remove clock from the UAB half B comparator. */
1685:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_SW_OTHER_REG &= ~(uint32)ADC_1_UABH_B_CMP_FF_MASK;
1686:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_SW_OTHER_REG |= (uint32)((uint32)CyUAB_SW_OPEN << ADC_1_UABH_B_CMP_FF_SHIFT);
1687:Generated_Source\PSoC4/ADC_1.c ****         
1688:Generated_Source\PSoC4/ADC_1.c ****         /* Disconnect the UAB half B reference buffer from the comparator. */
1689:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_SW_STATIC_REG &= ~(uint32)ADC_1_UABH_B_SW_RT_MASK;
1690:Generated_Source\PSoC4/ADC_1.c ****                         
1691:Generated_Source\PSoC4/ADC_1.c ****         /* Power off the UAB half B reference buffer. */
1692:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_OA_CTRL_REG &= ~(uint32)ADC_1_UABH_B_REF_PWR_MASK;
1693:Generated_Source\PSoC4/ADC_1.c ****         
1694:Generated_Source\PSoC4/ADC_1.c ****         /* Close filter output switch to connect filter to AROUTE. */
1695:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_SW_CF_BOT_REG &= ~(uint32)(ADC_1_UABH_B_SW_PO_MASK);
1696:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_SW_CF_BOT_REG |= (uint32)((uint32)CyUAB_CLK_PHI3 << ADC_1_UABH_B_SW_PO_SHIFT);
1697:Generated_Source\PSoC4/ADC_1.c ****         
1698:Generated_Source\PSoC4/ADC_1.c ****         /* Clear the modbit */
1699:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_A_CAP_ABCF_VAL_REG &= ~(0x1uL << CyUAB_SIGN_VAL_SHIFT);
1700:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_B_CAP_ABCF_VAL_REG &= ~(0x1uL << CyUAB_SIGN_VAL_SHIFT);
1701:Generated_Source\PSoC4/ADC_1.c ****     }
1702:Generated_Source\PSoC4/ADC_1.c ****     
1703:Generated_Source\PSoC4/ADC_1.c ****     
1704:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_RaiseOpampTrimToCrossing(uint32 startTrim)
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 57


1705:Generated_Source\PSoC4/ADC_1.c ****     {
1706:Generated_Source\PSoC4/ADC_1.c ****         uint32 opampTrim;
1707:Generated_Source\PSoC4/ADC_1.c ****         uint32 lastOpampTrim;
1708:Generated_Source\PSoC4/ADC_1.c ****         uint32 compStatus;
1709:Generated_Source\PSoC4/ADC_1.c **** 
1710:Generated_Source\PSoC4/ADC_1.c ****         lastOpampTrim = startTrim;
1711:Generated_Source\PSoC4/ADC_1.c ****         for (opampTrim = startTrim;
1712:Generated_Source\PSoC4/ADC_1.c ****             opampTrim != ADC_1_OPAMP_TRIM_NEG_LIMIT;
1713:Generated_Source\PSoC4/ADC_1.c ****             opampTrim = ADC_1_IncOpampTrim(opampTrim))
1714:Generated_Source\PSoC4/ADC_1.c ****         {
1715:Generated_Source\PSoC4/ADC_1.c ****             compStatus = ADC_1_SetOpampAndAgndTrim(opampTrim, ADC_1_AGND_TRIM_POS_BASE);
1716:Generated_Source\PSoC4/ADC_1.c ****             if (0uL != compStatus)
1717:Generated_Source\PSoC4/ADC_1.c ****             {
1718:Generated_Source\PSoC4/ADC_1.c ****                 (void) ADC_1_SetOpampTrim(lastOpampTrim);
1719:Generated_Source\PSoC4/ADC_1.c ****                 break;
1720:Generated_Source\PSoC4/ADC_1.c ****             }
1721:Generated_Source\PSoC4/ADC_1.c ****             lastOpampTrim = opampTrim;
1722:Generated_Source\PSoC4/ADC_1.c ****         }
1723:Generated_Source\PSoC4/ADC_1.c ****         
1724:Generated_Source\PSoC4/ADC_1.c ****         return lastOpampTrim;
1725:Generated_Source\PSoC4/ADC_1.c ****     }
1726:Generated_Source\PSoC4/ADC_1.c **** 
1727:Generated_Source\PSoC4/ADC_1.c **** 
1728:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_LowerOpampTrimToCrossing(uint32 startTrim)
1729:Generated_Source\PSoC4/ADC_1.c ****     {
1730:Generated_Source\PSoC4/ADC_1.c ****         uint32 opampTrim;
1731:Generated_Source\PSoC4/ADC_1.c ****         uint32 lastOpampTrim;
1732:Generated_Source\PSoC4/ADC_1.c ****         uint32 compStatus;
1733:Generated_Source\PSoC4/ADC_1.c **** 
1734:Generated_Source\PSoC4/ADC_1.c ****         lastOpampTrim = startTrim;
1735:Generated_Source\PSoC4/ADC_1.c ****         for (opampTrim = startTrim;
1736:Generated_Source\PSoC4/ADC_1.c ****             opampTrim != ADC_1_OPAMP_TRIM_NEG_LIMIT;
1737:Generated_Source\PSoC4/ADC_1.c ****             opampTrim = ADC_1_DecOpampTrim(opampTrim))
1738:Generated_Source\PSoC4/ADC_1.c ****         {
1739:Generated_Source\PSoC4/ADC_1.c ****             compStatus = ADC_1_SetOpampAndAgndTrim(opampTrim, ADC_1_AGND_TRIM_POS_BASE);
1740:Generated_Source\PSoC4/ADC_1.c ****             if (0uL == compStatus)
1741:Generated_Source\PSoC4/ADC_1.c ****             {
1742:Generated_Source\PSoC4/ADC_1.c ****                 (void) ADC_1_SetOpampTrim(lastOpampTrim);
1743:Generated_Source\PSoC4/ADC_1.c ****                 break;
1744:Generated_Source\PSoC4/ADC_1.c ****             }
1745:Generated_Source\PSoC4/ADC_1.c ****             lastOpampTrim = opampTrim;
1746:Generated_Source\PSoC4/ADC_1.c ****         }
1747:Generated_Source\PSoC4/ADC_1.c ****         
1748:Generated_Source\PSoC4/ADC_1.c ****         return lastOpampTrim;
1749:Generated_Source\PSoC4/ADC_1.c ****     }
1750:Generated_Source\PSoC4/ADC_1.c **** 
1751:Generated_Source\PSoC4/ADC_1.c **** 
1752:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_RaiseAgndTrimToCrossing(uint32 startTrim)
1753:Generated_Source\PSoC4/ADC_1.c ****     {
1754:Generated_Source\PSoC4/ADC_1.c ****         uint32 agndTrim;
1755:Generated_Source\PSoC4/ADC_1.c ****         uint32 lastAgndTrim;
1756:Generated_Source\PSoC4/ADC_1.c ****         uint32 compStatus;
1757:Generated_Source\PSoC4/ADC_1.c **** 
1758:Generated_Source\PSoC4/ADC_1.c ****         lastAgndTrim = startTrim;
1759:Generated_Source\PSoC4/ADC_1.c ****         for (agndTrim = startTrim;
1760:Generated_Source\PSoC4/ADC_1.c ****             agndTrim != ADC_1_AGND_TRIM_NEG_LIMIT;
1761:Generated_Source\PSoC4/ADC_1.c ****             agndTrim = ADC_1_IncAgndTrim(agndTrim))
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 58


1762:Generated_Source\PSoC4/ADC_1.c ****         {
1763:Generated_Source\PSoC4/ADC_1.c ****             compStatus = ADC_1_SetAgndTrim(agndTrim);
1764:Generated_Source\PSoC4/ADC_1.c ****             if (0uL != compStatus)
1765:Generated_Source\PSoC4/ADC_1.c ****             {
1766:Generated_Source\PSoC4/ADC_1.c ****                 (void) ADC_1_SetAgndTrim(lastAgndTrim); 
1767:Generated_Source\PSoC4/ADC_1.c ****                 break;
1768:Generated_Source\PSoC4/ADC_1.c ****             }
1769:Generated_Source\PSoC4/ADC_1.c ****             lastAgndTrim = agndTrim;
1770:Generated_Source\PSoC4/ADC_1.c ****         }
1771:Generated_Source\PSoC4/ADC_1.c ****         
1772:Generated_Source\PSoC4/ADC_1.c ****         return lastAgndTrim;
1773:Generated_Source\PSoC4/ADC_1.c ****     }
1774:Generated_Source\PSoC4/ADC_1.c ****     
1775:Generated_Source\PSoC4/ADC_1.c ****     
1776:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_LowerAgndTrimToCrossing(uint32 startTrim)
1777:Generated_Source\PSoC4/ADC_1.c ****     {
1778:Generated_Source\PSoC4/ADC_1.c ****         uint32 agndTrim = startTrim;
1779:Generated_Source\PSoC4/ADC_1.c ****         uint32 lastAgndTrim = agndTrim;
1780:Generated_Source\PSoC4/ADC_1.c ****         uint32 compStatus = 1uL;
1781:Generated_Source\PSoC4/ADC_1.c **** 
1782:Generated_Source\PSoC4/ADC_1.c ****         lastAgndTrim = startTrim;
1783:Generated_Source\PSoC4/ADC_1.c ****         for (agndTrim = startTrim;
1784:Generated_Source\PSoC4/ADC_1.c ****             agndTrim != ADC_1_AGND_TRIM_NEG_LIMIT;
1785:Generated_Source\PSoC4/ADC_1.c ****             agndTrim = ADC_1_DecAgndTrim(agndTrim))
1786:Generated_Source\PSoC4/ADC_1.c ****         {
1787:Generated_Source\PSoC4/ADC_1.c ****             compStatus = ADC_1_SetAgndTrim(agndTrim);
1788:Generated_Source\PSoC4/ADC_1.c ****             if (0uL == compStatus)
1789:Generated_Source\PSoC4/ADC_1.c ****             {
1790:Generated_Source\PSoC4/ADC_1.c ****                 (void) ADC_1_SetAgndTrim(lastAgndTrim); 
1791:Generated_Source\PSoC4/ADC_1.c ****                 break;
1792:Generated_Source\PSoC4/ADC_1.c ****             }
1793:Generated_Source\PSoC4/ADC_1.c ****             lastAgndTrim = agndTrim;
1794:Generated_Source\PSoC4/ADC_1.c ****         }
1795:Generated_Source\PSoC4/ADC_1.c ****         
1796:Generated_Source\PSoC4/ADC_1.c ****         return lastAgndTrim;
1797:Generated_Source\PSoC4/ADC_1.c ****     }
1798:Generated_Source\PSoC4/ADC_1.c ****     
1799:Generated_Source\PSoC4/ADC_1.c ****     
1800:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_SetOpampAndAgndTrim(uint32 opampTrim, uint32 agndTrim)
1801:Generated_Source\PSoC4/ADC_1.c ****     {
1802:Generated_Source\PSoC4/ADC_1.c ****         uint32 compStatus = 0uL;
1803:Generated_Source\PSoC4/ADC_1.c ****  
1804:Generated_Source\PSoC4/ADC_1.c ****         uint32 trimRegVal = ADC_1_UABH_A_OA_TRIM_REG;
1805:Generated_Source\PSoC4/ADC_1.c ****         trimRegVal &= ~(ADC_1_OPAMP_TRIM_MASK << CyUAB_OA_OFFSET_SHIFT);
1806:Generated_Source\PSoC4/ADC_1.c ****         trimRegVal |= (opampTrim << CyUAB_OA_OFFSET_SHIFT);
1807:Generated_Source\PSoC4/ADC_1.c ****         trimRegVal &= ~(ADC_1_AGND_TRIM_MASK << CyUAB_AGND_OFFSET_SHIFT);
1808:Generated_Source\PSoC4/ADC_1.c ****         trimRegVal |= (agndTrim << CyUAB_AGND_OFFSET_SHIFT);
1809:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_A_OA_TRIM_REG = trimRegVal;
1810:Generated_Source\PSoC4/ADC_1.c ****         
1811:Generated_Source\PSoC4/ADC_1.c ****         CyDelayUs(100u);
1812:Generated_Source\PSoC4/ADC_1.c ****         
1813:Generated_Source\PSoC4/ADC_1.c ****         compStatus = ADC_1_UABH_B_STAT_REG & ADC_1_UABH_B_COMP_MASK;
1814:Generated_Source\PSoC4/ADC_1.c ****         
1815:Generated_Source\PSoC4/ADC_1.c ****         return compStatus;
1816:Generated_Source\PSoC4/ADC_1.c ****     }
1817:Generated_Source\PSoC4/ADC_1.c ****     
1818:Generated_Source\PSoC4/ADC_1.c ****     
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 59


1819:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_SetOpampTrim(uint32 opampTrim)
1820:Generated_Source\PSoC4/ADC_1.c ****     {
1821:Generated_Source\PSoC4/ADC_1.c ****         uint32 compStatus = 0uL;
1822:Generated_Source\PSoC4/ADC_1.c ****  
1823:Generated_Source\PSoC4/ADC_1.c ****         uint32 trimRegVal = ADC_1_UABH_A_OA_TRIM_REG;
1824:Generated_Source\PSoC4/ADC_1.c ****         trimRegVal &= ~(ADC_1_OPAMP_TRIM_MASK << CyUAB_OA_OFFSET_SHIFT);
1825:Generated_Source\PSoC4/ADC_1.c ****         trimRegVal |= (opampTrim << CyUAB_OA_OFFSET_SHIFT);
1826:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_A_OA_TRIM_REG = trimRegVal;
1827:Generated_Source\PSoC4/ADC_1.c ****         
1828:Generated_Source\PSoC4/ADC_1.c ****         CyDelayUs(100u);
1829:Generated_Source\PSoC4/ADC_1.c ****         
1830:Generated_Source\PSoC4/ADC_1.c ****         compStatus = ADC_1_UABH_B_STAT_REG & ADC_1_UABH_B_COMP_MASK;
1831:Generated_Source\PSoC4/ADC_1.c ****         
1832:Generated_Source\PSoC4/ADC_1.c ****         return compStatus;
1833:Generated_Source\PSoC4/ADC_1.c ****     }
1834:Generated_Source\PSoC4/ADC_1.c ****     
1835:Generated_Source\PSoC4/ADC_1.c ****     
1836:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_SetAgndTrim(uint32 agndTrim)
1837:Generated_Source\PSoC4/ADC_1.c ****     {
1838:Generated_Source\PSoC4/ADC_1.c ****         uint32 compStatus = 0uL;
1839:Generated_Source\PSoC4/ADC_1.c ****  
1840:Generated_Source\PSoC4/ADC_1.c ****         uint32 trimRegVal = ADC_1_UABH_A_OA_TRIM_REG;
1841:Generated_Source\PSoC4/ADC_1.c ****         trimRegVal &= ~(ADC_1_AGND_TRIM_MASK << CyUAB_AGND_OFFSET_SHIFT);
1842:Generated_Source\PSoC4/ADC_1.c ****         trimRegVal |= (agndTrim << CyUAB_AGND_OFFSET_SHIFT);
1843:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_UABH_A_OA_TRIM_REG = trimRegVal;
1844:Generated_Source\PSoC4/ADC_1.c ****         
1845:Generated_Source\PSoC4/ADC_1.c ****         CyDelayUs(100u);
1846:Generated_Source\PSoC4/ADC_1.c ****         
1847:Generated_Source\PSoC4/ADC_1.c ****         compStatus = ADC_1_UABH_B_STAT_REG & ADC_1_UABH_B_COMP_MASK;
1848:Generated_Source\PSoC4/ADC_1.c ****         
1849:Generated_Source\PSoC4/ADC_1.c ****         return compStatus;
1850:Generated_Source\PSoC4/ADC_1.c ****     }
1851:Generated_Source\PSoC4/ADC_1.c ****     
1852:Generated_Source\PSoC4/ADC_1.c ****     /* Skips OPAMP_TRIM_NEG_BASE because it is the same as POS_BASE. */
1853:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_IncOpampTrim(uint32 trim)
1854:Generated_Source\PSoC4/ADC_1.c ****     {
1855:Generated_Source\PSoC4/ADC_1.c ****         
1856:Generated_Source\PSoC4/ADC_1.c ****         if (trim < (ADC_1_OPAMP_TRIM_POS_LIMIT - 1uL))
1857:Generated_Source\PSoC4/ADC_1.c ****         {
1858:Generated_Source\PSoC4/ADC_1.c ****             trim = trim + 1uL;
1859:Generated_Source\PSoC4/ADC_1.c ****         }
1860:Generated_Source\PSoC4/ADC_1.c ****         else if ((ADC_1_OPAMP_TRIM_POS_LIMIT - 1uL) == trim)
1861:Generated_Source\PSoC4/ADC_1.c ****         {
1862:Generated_Source\PSoC4/ADC_1.c ****             trim = ADC_1_OPAMP_TRIM_NEG_LIMIT;
1863:Generated_Source\PSoC4/ADC_1.c ****         }
1864:Generated_Source\PSoC4/ADC_1.c ****         else if (trim <= (ADC_1_OPAMP_TRIM_NEG_BASE + 1uL))
1865:Generated_Source\PSoC4/ADC_1.c ****         {
1866:Generated_Source\PSoC4/ADC_1.c ****             trim = ADC_1_OPAMP_TRIM_POS_BASE;
1867:Generated_Source\PSoC4/ADC_1.c ****         }
1868:Generated_Source\PSoC4/ADC_1.c ****         else
1869:Generated_Source\PSoC4/ADC_1.c ****         {
1870:Generated_Source\PSoC4/ADC_1.c ****             trim = trim - 1uL;
1871:Generated_Source\PSoC4/ADC_1.c ****         }
1872:Generated_Source\PSoC4/ADC_1.c ****         
1873:Generated_Source\PSoC4/ADC_1.c ****         return trim;
1874:Generated_Source\PSoC4/ADC_1.c ****     }
1875:Generated_Source\PSoC4/ADC_1.c **** 
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 60


1876:Generated_Source\PSoC4/ADC_1.c **** 
1877:Generated_Source\PSoC4/ADC_1.c ****     /* Skips OPAMP_TRIM_NEG_BASE because it is the same as POS_BASE. */
1878:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_DecOpampTrim(uint32 trim)
1879:Generated_Source\PSoC4/ADC_1.c ****     {
1880:Generated_Source\PSoC4/ADC_1.c ****         
1881:Generated_Source\PSoC4/ADC_1.c ****         if (ADC_1_OPAMP_TRIM_POS_BASE == trim)
1882:Generated_Source\PSoC4/ADC_1.c ****         {
1883:Generated_Source\PSoC4/ADC_1.c ****             trim = ADC_1_OPAMP_TRIM_NEG_BASE + 1uL;
1884:Generated_Source\PSoC4/ADC_1.c ****         }
1885:Generated_Source\PSoC4/ADC_1.c ****         else if (trim < ADC_1_OPAMP_TRIM_POS_LIMIT)
1886:Generated_Source\PSoC4/ADC_1.c ****         {
1887:Generated_Source\PSoC4/ADC_1.c ****             trim = trim - 1uL;
1888:Generated_Source\PSoC4/ADC_1.c ****         }
1889:Generated_Source\PSoC4/ADC_1.c ****         else if (trim < ADC_1_OPAMP_TRIM_NEG_LIMIT)
1890:Generated_Source\PSoC4/ADC_1.c ****         {
1891:Generated_Source\PSoC4/ADC_1.c ****             trim = trim + 1uL;
1892:Generated_Source\PSoC4/ADC_1.c ****         }
1893:Generated_Source\PSoC4/ADC_1.c ****         else
1894:Generated_Source\PSoC4/ADC_1.c ****         {
1895:Generated_Source\PSoC4/ADC_1.c ****             trim = ADC_1_OPAMP_TRIM_POS_LIMIT - 1uL;
1896:Generated_Source\PSoC4/ADC_1.c ****         }
1897:Generated_Source\PSoC4/ADC_1.c ****         
1898:Generated_Source\PSoC4/ADC_1.c ****         return trim;
1899:Generated_Source\PSoC4/ADC_1.c ****     }
1900:Generated_Source\PSoC4/ADC_1.c **** 
1901:Generated_Source\PSoC4/ADC_1.c **** 
1902:Generated_Source\PSoC4/ADC_1.c ****     /* Skips AGND_TRIM_NEG_BASE because it is the same as POS_BASE. */
1903:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_IncAgndTrim(uint32 trim)
1904:Generated_Source\PSoC4/ADC_1.c ****     {
1905:Generated_Source\PSoC4/ADC_1.c ****         
1906:Generated_Source\PSoC4/ADC_1.c ****         if (trim < (ADC_1_AGND_TRIM_POS_LIMIT - 1uL))
1907:Generated_Source\PSoC4/ADC_1.c ****         {
1908:Generated_Source\PSoC4/ADC_1.c ****             trim = trim + 1uL;
1909:Generated_Source\PSoC4/ADC_1.c ****         }
1910:Generated_Source\PSoC4/ADC_1.c ****         else if ((ADC_1_AGND_TRIM_POS_LIMIT - 1uL) == trim)
1911:Generated_Source\PSoC4/ADC_1.c ****         {
1912:Generated_Source\PSoC4/ADC_1.c ****             trim = ADC_1_AGND_TRIM_NEG_LIMIT;
1913:Generated_Source\PSoC4/ADC_1.c ****         }
1914:Generated_Source\PSoC4/ADC_1.c ****         else if (trim <= (ADC_1_AGND_TRIM_NEG_BASE + 1uL))
1915:Generated_Source\PSoC4/ADC_1.c ****         {
1916:Generated_Source\PSoC4/ADC_1.c ****             trim = ADC_1_AGND_TRIM_POS_BASE;
1917:Generated_Source\PSoC4/ADC_1.c ****         }
1918:Generated_Source\PSoC4/ADC_1.c ****         else
1919:Generated_Source\PSoC4/ADC_1.c ****         {
1920:Generated_Source\PSoC4/ADC_1.c ****             trim = trim - 1uL;
1921:Generated_Source\PSoC4/ADC_1.c ****         }
1922:Generated_Source\PSoC4/ADC_1.c ****         
1923:Generated_Source\PSoC4/ADC_1.c ****         return trim;
1924:Generated_Source\PSoC4/ADC_1.c ****     }
1925:Generated_Source\PSoC4/ADC_1.c **** 
1926:Generated_Source\PSoC4/ADC_1.c **** 
1927:Generated_Source\PSoC4/ADC_1.c ****     /* Skips ADC_1_AGND_TRIM_NEG_BASE because it is the same as POS_BASE. */
1928:Generated_Source\PSoC4/ADC_1.c ****     static uint32 ADC_1_DecAgndTrim(uint32 trim)
1929:Generated_Source\PSoC4/ADC_1.c ****     {
1930:Generated_Source\PSoC4/ADC_1.c ****         
1931:Generated_Source\PSoC4/ADC_1.c ****         if (trim == ADC_1_AGND_TRIM_POS_BASE)
1932:Generated_Source\PSoC4/ADC_1.c ****         {
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 61


1933:Generated_Source\PSoC4/ADC_1.c ****             trim = ADC_1_AGND_TRIM_NEG_BASE + 1uL;
1934:Generated_Source\PSoC4/ADC_1.c ****         }
1935:Generated_Source\PSoC4/ADC_1.c ****         else if (trim < ADC_1_AGND_TRIM_POS_LIMIT)
1936:Generated_Source\PSoC4/ADC_1.c ****         {
1937:Generated_Source\PSoC4/ADC_1.c ****             trim = trim - 1uL;
1938:Generated_Source\PSoC4/ADC_1.c ****         }
1939:Generated_Source\PSoC4/ADC_1.c ****         else if (trim < ADC_1_AGND_TRIM_NEG_LIMIT)
1940:Generated_Source\PSoC4/ADC_1.c ****         {
1941:Generated_Source\PSoC4/ADC_1.c ****             trim = trim + 1uL;
1942:Generated_Source\PSoC4/ADC_1.c ****         }
1943:Generated_Source\PSoC4/ADC_1.c ****         else
1944:Generated_Source\PSoC4/ADC_1.c ****         {
1945:Generated_Source\PSoC4/ADC_1.c ****             trim = ADC_1_AGND_TRIM_POS_LIMIT - 1uL;
1946:Generated_Source\PSoC4/ADC_1.c ****         }
1947:Generated_Source\PSoC4/ADC_1.c ****         
1948:Generated_Source\PSoC4/ADC_1.c ****         return trim;
1949:Generated_Source\PSoC4/ADC_1.c ****     }
1950:Generated_Source\PSoC4/ADC_1.c **** 
1951:Generated_Source\PSoC4/ADC_1.c ****     
1952:Generated_Source\PSoC4/ADC_1.c ****     void ADC_1_filterInit(uint32 configNum)
1953:Generated_Source\PSoC4/ADC_1.c ****     {
1954:Generated_Source\PSoC4/ADC_1.c ****         /* Configure the common filter settings if any configuration filters */
1955:Generated_Source\PSoC4/ADC_1.c ****         switch (configNum)
1956:Generated_Source\PSoC4/ADC_1.c ****         {
1957:Generated_Source\PSoC4/ADC_1.c ****             #if (0u != ADC_1_CFG0_FILTER_PRESENT)
1958:Generated_Source\PSoC4/ADC_1.c ****             case 0u:
1959:Generated_Source\PSoC4/ADC_1.c ****     		    ADC_1_UABH_A_Init(&ADC_1_CFG0_UABH_A_FILTER_config);
1960:Generated_Source\PSoC4/ADC_1.c ****     		    ADC_1_UABH_B_Init(&ADC_1_CFG0_UABH_B_FILTER_config);
1961:Generated_Source\PSoC4/ADC_1.c ****                 
1962:Generated_Source\PSoC4/ADC_1.c ****             break;
1963:Generated_Source\PSoC4/ADC_1.c ****             #endif
1964:Generated_Source\PSoC4/ADC_1.c ****             #if (0u != ADC_1_CFG1_FILTER_PRESENT)
1965:Generated_Source\PSoC4/ADC_1.c ****             case 1u:
1966:Generated_Source\PSoC4/ADC_1.c ****     		    ADC_1_UABH_A_Init(&ADC_1_CFG1_UABH_A_FILTER_config);
1967:Generated_Source\PSoC4/ADC_1.c ****     		    ADC_1_UABH_B_Init(&ADC_1_CFG1_UABH_B_FILTER_config);
1968:Generated_Source\PSoC4/ADC_1.c ****                 
1969:Generated_Source\PSoC4/ADC_1.c ****             break;
1970:Generated_Source\PSoC4/ADC_1.c ****             #endif
1971:Generated_Source\PSoC4/ADC_1.c ****             #if (0u != ADC_1_CFG2_FILTER_PRESENT)
1972:Generated_Source\PSoC4/ADC_1.c ****             case 2u:
1973:Generated_Source\PSoC4/ADC_1.c ****     		    ADC_1_UABH_A_Init(&ADC_1_CFG2_UABH_A_FILTER_config);
1974:Generated_Source\PSoC4/ADC_1.c ****     		    ADC_1_UABH_B_Init(&ADC_1_CFG2_UABH_B_FILTER_config);
1975:Generated_Source\PSoC4/ADC_1.c ****                 
1976:Generated_Source\PSoC4/ADC_1.c ****             break;
1977:Generated_Source\PSoC4/ADC_1.c ****             #endif
1978:Generated_Source\PSoC4/ADC_1.c ****             #if (0u != ADC_1_CFG3_FILTER_PRESENT)
1979:Generated_Source\PSoC4/ADC_1.c ****             case 3u:
1980:Generated_Source\PSoC4/ADC_1.c ****     		    ADC_1_UABH_A_Init(&ADC_1_CFG3_UABH_A_FILTER_config);
1981:Generated_Source\PSoC4/ADC_1.c ****     		    ADC_1_UABH_B_Init(&ADC_1_CFG3_UABH_B_FILTER_config);
1982:Generated_Source\PSoC4/ADC_1.c ****                 
1983:Generated_Source\PSoC4/ADC_1.c ****             break;
1984:Generated_Source\PSoC4/ADC_1.c ****             #endif
1985:Generated_Source\PSoC4/ADC_1.c ****             default:
1986:Generated_Source\PSoC4/ADC_1.c ****             break;
1987:Generated_Source\PSoC4/ADC_1.c ****         }
1988:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_FILTERAGND2SAR_BUFFER_Init();
1989:Generated_Source\PSoC4/ADC_1.c ****     }
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 62


1990:Generated_Source\PSoC4/ADC_1.c **** #endif /* ADC_1_ANY_CONFIG_USES_FILTER != 0u */
1991:Generated_Source\PSoC4/ADC_1.c **** 
1992:Generated_Source\PSoC4/ADC_1.c **** 
1993:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
1994:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_Init
1995:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//*
1996:Generated_Source\PSoC4/ADC_1.c **** *
1997:Generated_Source\PSoC4/ADC_1.c **** * \brief Initialize the component according to parameters defined in the 
1998:Generated_Source\PSoC4/ADC_1.c **** * customizer.
1999:Generated_Source\PSoC4/ADC_1.c **** *
2000:Generated_Source\PSoC4/ADC_1.c **** * \param None
2001:Generated_Source\PSoC4/ADC_1.c **** * 
2002:Generated_Source\PSoC4/ADC_1.c **** * \return None
2003:Generated_Source\PSoC4/ADC_1.c **** *
2004:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect None
2005:Generated_Source\PSoC4/ADC_1.c **** *
2006:Generated_Source\PSoC4/ADC_1.c **** * <b>Code Snippet</b>
2007:Generated_Source\PSoC4/ADC_1.c **** *  \snippet main.c snippet_ADC_1_Init
2008:Generated_Source\PSoC4/ADC_1.c **** *
2009:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
2010:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_Init(void)
2011:Generated_Source\PSoC4/ADC_1.c **** {
 1411              		.loc 1 2011 0
 1412              		.cfi_startproc
 1413              		@ args = 0, pretend = 0, frame = 0
 1414              		@ frame_needed = 0, uses_anonymous_args = 0
 1415 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1416              		.cfi_def_cfa_offset 20
 1417              		.cfi_offset 4, -20
 1418              		.cfi_offset 5, -16
 1419              		.cfi_offset 6, -12
 1420              		.cfi_offset 7, -8
 1421              		.cfi_offset 14, -4
 1422 0002 4746     		mov	r7, r8
 1423 0004 80B4     		push	{r7}
 1424              		.cfi_def_cfa_offset 24
 1425              		.cfi_offset 8, -24
 1426              	.LVL131:
2012:Generated_Source\PSoC4/ADC_1.c **** 	uint32 chNum = 0ul;
2013:Generated_Source\PSoC4/ADC_1.c **** 	uint32 configNum = 0u;
2014:Generated_Source\PSoC4/ADC_1.c **** 	int32 counts;
2015:Generated_Source\PSoC4/ADC_1.c **** 	
2016:Generated_Source\PSoC4/ADC_1.c **** 	if(0u == ADC_1_initVar)
 1427              		.loc 1 2016 0
 1428 0006 3C4B     		ldr	r3, .L116
 1429 0008 1B79     		ldrb	r3, [r3, #4]
 1430 000a 002B     		cmp	r3, #0
 1431 000c 57D0     		beq	.L113
 1432 000e 70E0     		b	.L104
 1433              	.LVL132:
 1434              	.L112:
2017:Generated_Source\PSoC4/ADC_1.c **** 	{
2018:Generated_Source\PSoC4/ADC_1.c **** 		/* Set offset and countsPer10Volt for all channels */
2019:Generated_Source\PSoC4/ADC_1.c **** 		for(chNum = 0ul; chNum < ADC_1_TOTAL_CHANNELS_NUM; chNum++)
2020:Generated_Source\PSoC4/ADC_1.c **** 		{      
2021:Generated_Source\PSoC4/ADC_1.c **** 			if((ADC_1_channelsConfig[chNum] & ADC_1_SAR_CHAN_CONFIG_RESOLUTION_MSK) != 0u)
 1435              		.loc 1 2021 0
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 63


 1436 0010 A300     		lsls	r3, r4, #2
 1437 0012 3A4A     		ldr	r2, .L116+4
 1438 0014 9B58     		ldr	r3, [r3, r2]
 1439 0016 9A05     		lsls	r2, r3, #22
 1440 0018 0AD5     		bpl	.L114
2022:Generated_Source\PSoC4/ADC_1.c ****         	{
2023:Generated_Source\PSoC4/ADC_1.c **** 				if((ADC_1_allConfigs[configNum].sampleCtrl 
 1441              		.loc 1 2023 0
 1442 001a E900     		lsls	r1, r5, #3
 1443 001c 491B     		subs	r1, r1, r5
 1444 001e CA00     		lsls	r2, r1, #3
 1445 0020 3749     		ldr	r1, .L116+8
 1446 0022 8A18     		adds	r2, r1, r2
 1447 0024 D268     		ldr	r2, [r2, #12]
 1448 0026 D207     		lsls	r2, r2, #31
 1449 0028 05D5     		bpl	.L115
2024:Generated_Source\PSoC4/ADC_1.c **** 					& ADC_1_SAR_SAMPLE_CTRL_SUB_RESOLUTION_MSK) 
2025:Generated_Source\PSoC4/ADC_1.c **** 					== ADC_1_SUB_RESOLUTION_10B)
2026:Generated_Source\PSoC4/ADC_1.c **** 				{
2027:Generated_Source\PSoC4/ADC_1.c **** 					counts = (int32) ADC_1_SAR_WRK_MAX_10BIT;
 1450              		.loc 1 2027 0
 1451 002a 8020     		movs	r0, #128
 1452 002c C000     		lsls	r0, r0, #3
 1453 002e 04E0     		b	.L107
 1454              	.L114:
2028:Generated_Source\PSoC4/ADC_1.c **** 				}
2029:Generated_Source\PSoC4/ADC_1.c **** 				else
2030:Generated_Source\PSoC4/ADC_1.c **** 				{
2031:Generated_Source\PSoC4/ADC_1.c **** 					counts = (int32) ADC_1_SAR_WRK_MAX_8BIT;
2032:Generated_Source\PSoC4/ADC_1.c **** 				}
2033:Generated_Source\PSoC4/ADC_1.c ****         	}
2034:Generated_Source\PSoC4/ADC_1.c ****         	else
2035:Generated_Source\PSoC4/ADC_1.c ****         	{
2036:Generated_Source\PSoC4/ADC_1.c ****                counts = (int32)ADC_1_SAR_WRK_MAX_12BIT;
 1455              		.loc 1 2036 0
 1456 0030 8020     		movs	r0, #128
 1457 0032 4001     		lsls	r0, r0, #5
 1458 0034 01E0     		b	.L107
 1459              	.L115:
2031:Generated_Source\PSoC4/ADC_1.c **** 				}
 1460              		.loc 1 2031 0
 1461 0036 8020     		movs	r0, #128
 1462 0038 4000     		lsls	r0, r0, #1
 1463              	.L107:
 1464              	.LVL133:
2037:Generated_Source\PSoC4/ADC_1.c ****         	}
2038:Generated_Source\PSoC4/ADC_1.c **** 			
2039:Generated_Source\PSoC4/ADC_1.c **** 			/* Single Ended Channel */
2040:Generated_Source\PSoC4/ADC_1.c **** 			if((ADC_1_channelsConfig[chNum] & ADC_1_SAR_CHAN_CONFIG_DIFFERENTIAL_EN_MSK) == 0u)
 1465              		.loc 1 2040 0
 1466 003a DB05     		lsls	r3, r3, #23
 1467 003c 1ED4     		bmi	.L108
2041:Generated_Source\PSoC4/ADC_1.c ****         	{
2042:Generated_Source\PSoC4/ADC_1.c **** 				if(((ADC_1_allConfigs[configNum].sampleCtrl 
 1468              		.loc 1 2042 0
 1469 003e EA00     		lsls	r2, r5, #3
 1470 0040 521B     		subs	r2, r2, r5
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 64


 1471 0042 D300     		lsls	r3, r2, #3
 1472 0044 2E4A     		ldr	r2, .L116+8
 1473 0046 D318     		adds	r3, r2, r3
 1474 0048 DB68     		ldr	r3, [r3, #12]
 1475 004a 5B07     		lsls	r3, r3, #29
 1476 004c 11D5     		bpl	.L109
2043:Generated_Source\PSoC4/ADC_1.c **** 					& ADC_1_SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_MSK) 
2044:Generated_Source\PSoC4/ADC_1.c **** 					== ADC_1_SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_MSK) && 
2045:Generated_Source\PSoC4/ADC_1.c **** 					((ADC_1_allConfigs[configNum].ctrl & ADC_1_SAR_CTRL_NEG_SEL_MSK) 
 1477              		.loc 1 2045 0
 1478 004e EA00     		lsls	r2, r5, #3
 1479 0050 521B     		subs	r2, r2, r5
 1480 0052 D300     		lsls	r3, r2, #3
 1481 0054 2A4A     		ldr	r2, .L116+8
 1482 0056 D318     		adds	r3, r2, r3
 1483 0058 9B68     		ldr	r3, [r3, #8]
 1484 005a E022     		movs	r2, #224
 1485 005c 1201     		lsls	r2, r2, #4
 1486 005e 1340     		ands	r3, r2
2044:Generated_Source\PSoC4/ADC_1.c **** 					((ADC_1_allConfigs[configNum].ctrl & ADC_1_SAR_CTRL_NEG_SEL_MSK) 
 1487              		.loc 1 2044 0
 1488 0060 9342     		cmp	r3, r2
 1489 0062 06D1     		bne	.L109
2046:Generated_Source\PSoC4/ADC_1.c **** 					== ADC_1_NEG_VREF_SHIFTED))
2047:Generated_Source\PSoC4/ADC_1.c **** 				{
2048:Generated_Source\PSoC4/ADC_1.c **** 					/* Set offset to the minus half scale to convert results to unsigned format */
2049:Generated_Source\PSoC4/ADC_1.c ****                 	ADC_1_offset[chNum] = (int16)(counts / -2);		
 1490              		.loc 1 2049 0
 1491 0064 4308     		lsrs	r3, r0, #1
 1492 0066 5B42     		rsbs	r3, r3, #0
 1493 0068 1BB2     		sxth	r3, r3
 1494 006a 6200     		lsls	r2, r4, #1
 1495 006c 2549     		ldr	r1, .L116+12
 1496 006e 5352     		strh	r3, [r2, r1]
 1497 0070 08E0     		b	.L110
 1498              	.L109:
2050:Generated_Source\PSoC4/ADC_1.c ****             	}
2051:Generated_Source\PSoC4/ADC_1.c **** 				else
2052:Generated_Source\PSoC4/ADC_1.c **** 				{
2053:Generated_Source\PSoC4/ADC_1.c ****                 	ADC_1_offset[chNum] = 0;	
 1499              		.loc 1 2053 0
 1500 0072 6300     		lsls	r3, r4, #1
 1501 0074 0021     		movs	r1, #0
 1502 0076 234A     		ldr	r2, .L116+12
 1503 0078 9952     		strh	r1, [r3, r2]
 1504 007a 03E0     		b	.L110
 1505              	.L108:
2054:Generated_Source\PSoC4/ADC_1.c **** 				}
2055:Generated_Source\PSoC4/ADC_1.c **** 				
2056:Generated_Source\PSoC4/ADC_1.c **** 			}
2057:Generated_Source\PSoC4/ADC_1.c **** 			else    /* Differential channel */
2058:Generated_Source\PSoC4/ADC_1.c ****         	{
2059:Generated_Source\PSoC4/ADC_1.c ****                	ADC_1_offset[chNum] = 0; 
 1506              		.loc 1 2059 0
 1507 007c 6300     		lsls	r3, r4, #1
 1508 007e 0021     		movs	r1, #0
 1509 0080 204A     		ldr	r2, .L116+12
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 65


 1510 0082 9952     		strh	r1, [r3, r2]
 1511              	.L110:
2060:Generated_Source\PSoC4/ADC_1.c **** 			}
2061:Generated_Source\PSoC4/ADC_1.c ****             
2062:Generated_Source\PSoC4/ADC_1.c **** 			/* Calculate gain in counts per 10 volts with rounding */
2063:Generated_Source\PSoC4/ADC_1.c ****         	ADC_1_countsPer10Volt[chNum] = (int16)(((counts * ADC_1_10MV_COUNTS) \
 1512              		.loc 1 2063 0
 1513 0084 204B     		ldr	r3, .L116+16
 1514 0086 5843     		muls	r0, r3
 1515              	.LVL134:
2064:Generated_Source\PSoC4/ADC_1.c ****                             + ADC_1_allConfigs[configNum].vrefMvValue) \
 1516              		.loc 1 2064 0
 1517 0088 1D4B     		ldr	r3, .L116+8
 1518 008a 9846     		mov	r8, r3
 1519 008c EF00     		lsls	r7, r5, #3
 1520 008e 7B1B     		subs	r3, r7, r5
 1521 0090 DE00     		lsls	r6, r3, #3
 1522 0092 4644     		add	r6, r6, r8
 1523 0094 F16A     		ldr	r1, [r6, #44]
 1524 0096 4018     		adds	r0, r0, r1
2065:Generated_Source\PSoC4/ADC_1.c **** 							/ (ADC_1_allConfigs[configNum].vrefMvValue * 2));
 1525              		.loc 1 2065 0
 1526 0098 4900     		lsls	r1, r1, #1
 1527 009a FFF7FEFF 		bl	__aeabi_idiv
 1528              	.LVL135:
2063:Generated_Source\PSoC4/ADC_1.c ****                             + ADC_1_allConfigs[configNum].vrefMvValue) \
 1529              		.loc 1 2063 0
 1530 009e 00B2     		sxth	r0, r0
 1531 00a0 A300     		lsls	r3, r4, #2
 1532 00a2 1A4A     		ldr	r2, .L116+20
 1533 00a4 9850     		str	r0, [r3, r2]
2066:Generated_Source\PSoC4/ADC_1.c ****             
2067:Generated_Source\PSoC4/ADC_1.c ****             /* Increment configuration number after rolling over to the next configuration*/
2068:Generated_Source\PSoC4/ADC_1.c **** 			if((ADC_1_allConfigs[configNum].channelBase
 1534              		.loc 1 2068 0
 1535 00a6 7F1B     		subs	r7, r7, r5
 1536 00a8 FB00     		lsls	r3, r7, #3
 1537 00aa 4246     		mov	r2, r8
 1538 00ac 9A58     		ldr	r2, [r3, r2]
2069:Generated_Source\PSoC4/ADC_1.c **** 				+ (ADC_1_allConfigs[configNum].numChannels - 1uL)) == chNum)
 1539              		.loc 1 2069 0
 1540 00ae 7368     		ldr	r3, [r6, #4]
 1541 00b0 D318     		adds	r3, r2, r3
 1542 00b2 013B     		subs	r3, r3, #1
2068:Generated_Source\PSoC4/ADC_1.c **** 				+ (ADC_1_allConfigs[configNum].numChannels - 1uL)) == chNum)
 1543              		.loc 1 2068 0
 1544 00b4 9C42     		cmp	r4, r3
 1545 00b6 00D1     		bne	.L111
2070:Generated_Source\PSoC4/ADC_1.c **** 			{
2071:Generated_Source\PSoC4/ADC_1.c **** 				configNum++;
 1546              		.loc 1 2071 0
 1547 00b8 0135     		adds	r5, r5, #1
 1548              	.LVL136:
 1549              	.L111:
2019:Generated_Source\PSoC4/ADC_1.c **** 		{      
 1550              		.loc 1 2019 0 discriminator 2
 1551 00ba 0134     		adds	r4, r4, #1
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 66


 1552              	.LVL137:
 1553 00bc 01E0     		b	.L105
 1554              	.LVL138:
 1555              	.L113:
 1556 00be 0025     		movs	r5, #0
 1557 00c0 0024     		movs	r4, #0
 1558              	.LVL139:
 1559              	.L105:
2019:Generated_Source\PSoC4/ADC_1.c **** 		{      
 1560              		.loc 1 2019 0 is_stmt 0 discriminator 1
 1561 00c2 012C     		cmp	r4, #1
 1562 00c4 A4D9     		bls	.L112
2072:Generated_Source\PSoC4/ADC_1.c **** 			}
2073:Generated_Source\PSoC4/ADC_1.c **** 		} /* for(chNum = 0ul; chNum < ADC_1_TOTAL_CHANNELS_NUM; chNum++) */
2074:Generated_Source\PSoC4/ADC_1.c ****         
2075:Generated_Source\PSoC4/ADC_1.c ****         /* Start and set interrupt vector */
2076:Generated_Source\PSoC4/ADC_1.c ****         CyIntSetPriority(ADC_1_INTC_NUMBER, ADC_1_INTC_PRIOR_NUMBER);
 1563              		.loc 1 2076 0 is_stmt 1
 1564 00c6 0321     		movs	r1, #3
 1565 00c8 0F20     		movs	r0, #15
 1566 00ca FFF7FEFF 		bl	CyIntSetPriority
 1567              	.LVL140:
2077:Generated_Source\PSoC4/ADC_1.c ****         (void)CyIntSetVector(ADC_1_INTC_NUMBER, &ADC_1_ISR);
 1568              		.loc 1 2077 0
 1569 00ce 1049     		ldr	r1, .L116+24
 1570 00d0 0F20     		movs	r0, #15
 1571 00d2 FFF7FEFF 		bl	CyIntSetVector
 1572              	.LVL141:
2078:Generated_Source\PSoC4/ADC_1.c ****         
2079:Generated_Source\PSoC4/ADC_1.c ****         /* Initialize configuration zero if SelectConfig has not been called */
2080:Generated_Source\PSoC4/ADC_1.c ****         if(0u == ADC_1_selected)
 1573              		.loc 1 2080 0
 1574 00d6 084B     		ldr	r3, .L116
 1575 00d8 5B79     		ldrb	r3, [r3, #5]
 1576 00da 002B     		cmp	r3, #0
 1577 00dc 09D1     		bne	.L104
2081:Generated_Source\PSoC4/ADC_1.c **** 	    {
2082:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_selected = 1u;
 1578              		.loc 1 2082 0
 1579 00de 0122     		movs	r2, #1
 1580 00e0 054B     		ldr	r3, .L116
 1581 00e2 5A71     		strb	r2, [r3, #5]
 1582              	.LVL142:
2083:Generated_Source\PSoC4/ADC_1.c ****             configNum = 0u;
2084:Generated_Source\PSoC4/ADC_1.c ****             /* Change Vref selection if is was routed by Creator. Break. */
2085:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_VREF_ROUTED)
2086:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_vrefAMux_DisconnectAll();
2087:Generated_Source\PSoC4/ADC_1.c ****             #endif
2088:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_InitConfig(&ADC_1_allConfigs[configNum]);
 1583              		.loc 1 2088 0
 1584 00e4 064C     		ldr	r4, .L116+8
 1585              	.LVL143:
 1586 00e6 2000     		movs	r0, r4
 1587 00e8 FFF7FEFF 		bl	ADC_1_InitConfig
 1588              	.LVL144:
2089:Generated_Source\PSoC4/ADC_1.c ****             /* Change Vref selection if is was routed by Creator. Make. */
2090:Generated_Source\PSoC4/ADC_1.c ****             #if (ADC_1_VREF_ROUTED)
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 67


2091:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_vrefAMux_Select((uint8)configNum);
2092:Generated_Source\PSoC4/ADC_1.c ****             #endif
2093:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_SAR_CHAN_EN_REG = ADC_1_allConfigs[configNum].chanEn;
 1589              		.loc 1 2093 0
 1590 00ec 226A     		ldr	r2, [r4, #32]
 1591 00ee 094B     		ldr	r3, .L116+28
 1592 00f0 1A60     		str	r2, [r3]
 1593              	.LVL145:
 1594              	.L104:
2094:Generated_Source\PSoC4/ADC_1.c ****             #if(0u != ADC_1_ANY_CONFIG_USES_FILTER)	
2095:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_filterVinMux_Select((uint8)configNum);
2096:Generated_Source\PSoC4/ADC_1.c ****                 ADC_1_filterInit(configNum);
2097:Generated_Source\PSoC4/ADC_1.c ****             #endif
2098:Generated_Source\PSoC4/ADC_1.c ****         }           
2099:Generated_Source\PSoC4/ADC_1.c **** 	}
2100:Generated_Source\PSoC4/ADC_1.c ****     return;
2101:Generated_Source\PSoC4/ADC_1.c **** }
 1595              		.loc 1 2101 0
 1596              		@ sp needed
 1597 00f2 04BC     		pop	{r2}
 1598 00f4 9046     		mov	r8, r2
 1599 00f6 F0BD     		pop	{r4, r5, r6, r7, pc}
 1600              	.L117:
 1601              		.align	2
 1602              	.L116:
 1603 00f8 00000000 		.word	.LANCHOR0
 1604 00fc 00000000 		.word	.LANCHOR1
 1605 0100 00000000 		.word	ADC_1_allConfigs
 1606 0104 00000000 		.word	ADC_1_offset
 1607 0108 10270000 		.word	10000
 1608 010c 00000000 		.word	ADC_1_countsPer10Volt
 1609 0110 00000000 		.word	ADC_1_ISR
 1610 0114 20003A40 		.word	1077542944
 1611              		.cfi_endproc
 1612              	.LFE25:
 1613              		.size	ADC_1_Init, .-ADC_1_Init
 1614              		.section	.text.ADC_1_Enable,"ax",%progbits
 1615              		.align	2
 1616              		.global	ADC_1_Enable
 1617              		.code	16
 1618              		.thumb_func
 1619              		.type	ADC_1_Enable, %function
 1620              	ADC_1_Enable:
 1621              	.LFB26:
2102:Generated_Source\PSoC4/ADC_1.c **** 
2103:Generated_Source\PSoC4/ADC_1.c **** 
2104:Generated_Source\PSoC4/ADC_1.c **** /* ****************************************************************************
2105:Generated_Source\PSoC4/ADC_1.c **** * Function Name: ADC_1_Enable
2106:Generated_Source\PSoC4/ADC_1.c **** ****************************************************************************//*
2107:Generated_Source\PSoC4/ADC_1.c **** *
2108:Generated_Source\PSoC4/ADC_1.c **** * \brief Enables the component. 
2109:Generated_Source\PSoC4/ADC_1.c **** *
2110:Generated_Source\PSoC4/ADC_1.c **** * \param None
2111:Generated_Source\PSoC4/ADC_1.c **** * 
2112:Generated_Source\PSoC4/ADC_1.c **** * \return None
2113:Generated_Source\PSoC4/ADC_1.c **** * 
2114:Generated_Source\PSoC4/ADC_1.c **** * \sideeffect
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 68


2115:Generated_Source\PSoC4/ADC_1.c **** *  None
2116:Generated_Source\PSoC4/ADC_1.c **** *
2117:Generated_Source\PSoC4/ADC_1.c **** * <b>Code Snippet</b>
2118:Generated_Source\PSoC4/ADC_1.c **** *  \snippet main.c snippet_ADC_1_Enable
2119:Generated_Source\PSoC4/ADC_1.c **** *
2120:Generated_Source\PSoC4/ADC_1.c **** *******************************************************************************/
2121:Generated_Source\PSoC4/ADC_1.c **** void ADC_1_Enable(void) 
2122:Generated_Source\PSoC4/ADC_1.c **** {
 1622              		.loc 1 2122 0
 1623              		.cfi_startproc
 1624              		@ args = 0, pretend = 0, frame = 0
 1625              		@ frame_needed = 0, uses_anonymous_args = 0
 1626 0000 10B5     		push	{r4, lr}
 1627              		.cfi_def_cfa_offset 8
 1628              		.cfi_offset 4, -8
 1629              		.cfi_offset 14, -4
2123:Generated_Source\PSoC4/ADC_1.c **** 
2124:Generated_Source\PSoC4/ADC_1.c ****     #if(0u != ADC_1_ANY_CONFIG_USES_FILTER)	
2125:Generated_Source\PSoC4/ADC_1.c ****     	if((ADC_1_allConfigs[ADC_1_currentConfig].miscConfig
2126:Generated_Source\PSoC4/ADC_1.c ****     		& ADC_1_MISC_CONFIG_FILTER_PRESENT_MSK)
2127:Generated_Source\PSoC4/ADC_1.c ****     		== ADC_1_MISC_CONFIG_FILTER_PRESENT_MSK)
2128:Generated_Source\PSoC4/ADC_1.c ****     	{
2129:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_FILTERAGND2SAR_BUFFER_Enable();
2130:Generated_Source\PSoC4/ADC_1.c ****     		ADC_1_UABH_A_Enable();
2131:Generated_Source\PSoC4/ADC_1.c ****     		ADC_1_UABH_B_Enable();
2132:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_B_Run(1u);
2133:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_UABH_A_Run(1u);
2134:Generated_Source\PSoC4/ADC_1.c ****     	}
2135:Generated_Source\PSoC4/ADC_1.c ****     #endif /* ADC_1_ANY_CONFIG_USES_FILTER != 0u */
2136:Generated_Source\PSoC4/ADC_1.c ****         
2137:Generated_Source\PSoC4/ADC_1.c ****     if (0u == (ADC_1_SAR_CTRL_REG & ADC_1_SAR_CTRL_ENABLED_MSK))
 1630              		.loc 1 2137 0
 1631 0002 094B     		ldr	r3, .L121
 1632 0004 1B68     		ldr	r3, [r3]
 1633 0006 002B     		cmp	r3, #0
 1634 0008 0CDB     		blt	.L118
 1635              	.L120:
2138:Generated_Source\PSoC4/ADC_1.c ****     {
2139:Generated_Source\PSoC4/ADC_1.c ****         while (0u != (ADC_1_SAR_STATUS_REG & ADC_1_BUSY_MSK))
 1636              		.loc 1 2139 0 discriminator 1
 1637 000a 084B     		ldr	r3, .L121+4
 1638 000c 1B68     		ldr	r3, [r3]
 1639 000e 002B     		cmp	r3, #0
 1640 0010 FBDB     		blt	.L120
2140:Generated_Source\PSoC4/ADC_1.c ****         {
2141:Generated_Source\PSoC4/ADC_1.c ****             /* wait for SAR to go idle to avoid deadlock */
2142:Generated_Source\PSoC4/ADC_1.c ****         }
2143:Generated_Source\PSoC4/ADC_1.c ****         
2144:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_SAR_CTRL_REG |= ADC_1_SAR_CTRL_ENABLED_MSK;
 1641              		.loc 1 2144 0
 1642 0012 054A     		ldr	r2, .L121
 1643 0014 1368     		ldr	r3, [r2]
 1644 0016 8021     		movs	r1, #128
 1645 0018 0906     		lsls	r1, r1, #24
 1646 001a 0B43     		orrs	r3, r1
 1647 001c 1360     		str	r3, [r2]
2145:Generated_Source\PSoC4/ADC_1.c ****         
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 69


2146:Generated_Source\PSoC4/ADC_1.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
2147:Generated_Source\PSoC4/ADC_1.c ****         CyDelayUs(ADC_1_10US_DELAY);
 1648              		.loc 1 2147 0
 1649 001e 0A20     		movs	r0, #10
 1650 0020 FFF7FEFF 		bl	CyDelayUs
 1651              	.LVL146:
 1652              	.L118:
2148:Generated_Source\PSoC4/ADC_1.c ****     }
2149:Generated_Source\PSoC4/ADC_1.c ****     return;
2150:Generated_Source\PSoC4/ADC_1.c **** }
 1653              		.loc 1 2150 0
 1654              		@ sp needed
 1655 0024 10BD     		pop	{r4, pc}
 1656              	.L122:
 1657 0026 C046     		.align	2
 1658              	.L121:
 1659 0028 00003A40 		.word	1077542912
 1660 002c A0023A40 		.word	1077543584
 1661              		.cfi_endproc
 1662              	.LFE26:
 1663              		.size	ADC_1_Enable, .-ADC_1_Enable
 1664              		.section	.text.ADC_1_Start,"ax",%progbits
 1665              		.align	2
 1666              		.global	ADC_1_Start
 1667              		.code	16
 1668              		.thumb_func
 1669              		.type	ADC_1_Start, %function
 1670              	ADC_1_Start:
 1671              	.LFB1:
 569:Generated_Source\PSoC4/ADC_1.c ****     if (ADC_1_INIT_VAR_INIT_FLAG != (ADC_1_INIT_VAR_INIT_FLAG & ADC_1_initVar))
 1672              		.loc 1 569 0
 1673              		.cfi_startproc
 1674              		@ args = 0, pretend = 0, frame = 0
 1675              		@ frame_needed = 0, uses_anonymous_args = 0
 1676 0000 10B5     		push	{r4, lr}
 1677              		.cfi_def_cfa_offset 8
 1678              		.cfi_offset 4, -8
 1679              		.cfi_offset 14, -4
 570:Generated_Source\PSoC4/ADC_1.c ****     {
 1680              		.loc 1 570 0
 1681 0002 074B     		ldr	r3, .L125
 1682 0004 1B79     		ldrb	r3, [r3, #4]
 1683 0006 DB07     		lsls	r3, r3, #31
 1684 0008 06D4     		bmi	.L124
 572:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_initVar |= ADC_1_INIT_VAR_INIT_FLAG;
 1685              		.loc 1 572 0
 1686 000a FFF7FEFF 		bl	ADC_1_Init
 1687              	.LVL147:
 573:Generated_Source\PSoC4/ADC_1.c ****     }
 1688              		.loc 1 573 0
 1689 000e 044A     		ldr	r2, .L125
 1690 0010 1179     		ldrb	r1, [r2, #4]
 1691 0012 0123     		movs	r3, #1
 1692 0014 0B43     		orrs	r3, r1
 1693 0016 1371     		strb	r3, [r2, #4]
 1694              	.L124:
 576:Generated_Source\PSoC4/ADC_1.c ****     
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 70


 1695              		.loc 1 576 0
 1696 0018 FFF7FEFF 		bl	ADC_1_Enable
 1697              	.LVL148:
 579:Generated_Source\PSoC4/ADC_1.c **** 
 1698              		.loc 1 579 0
 1699              		@ sp needed
 1700 001c 10BD     		pop	{r4, pc}
 1701              	.L126:
 1702 001e C046     		.align	2
 1703              	.L125:
 1704 0020 00000000 		.word	.LANCHOR0
 1705              		.cfi_endproc
 1706              	.LFE1:
 1707              		.size	ADC_1_Start, .-ADC_1_Start
 1708              		.section	.text.ADC_1_StartEx,"ax",%progbits
 1709              		.align	2
 1710              		.global	ADC_1_StartEx
 1711              		.code	16
 1712              		.thumb_func
 1713              		.type	ADC_1_StartEx, %function
 1714              	ADC_1_StartEx:
 1715              	.LFB2:
 601:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_Start();
 1716              		.loc 1 601 0
 1717              		.cfi_startproc
 1718              		@ args = 0, pretend = 0, frame = 0
 1719              		@ frame_needed = 0, uses_anonymous_args = 0
 1720              	.LVL149:
 1721 0000 10B5     		push	{r4, lr}
 1722              		.cfi_def_cfa_offset 8
 1723              		.cfi_offset 4, -8
 1724              		.cfi_offset 14, -4
 1725 0002 0400     		movs	r4, r0
 602:Generated_Source\PSoC4/ADC_1.c ****     ADC_1_IRQ_StartEx(address);
 1726              		.loc 1 602 0
 1727 0004 FFF7FEFF 		bl	ADC_1_Start
 1728              	.LVL150:
 603:Generated_Source\PSoC4/ADC_1.c ****     return;
 1729              		.loc 1 603 0
 1730 0008 2000     		movs	r0, r4
 1731 000a FFF7FEFF 		bl	ADC_1_IRQ_StartEx
 1732              	.LVL151:
 605:Generated_Source\PSoC4/ADC_1.c **** 
 1733              		.loc 1 605 0
 1734              		@ sp needed
 1735              	.LVL152:
 1736 000e 10BD     		pop	{r4, pc}
 1737              		.cfi_endproc
 1738              	.LFE2:
 1739              		.size	ADC_1_StartEx, .-ADC_1_StartEx
 1740              		.section	.text.ADC_1_SelectConfig,"ax",%progbits
 1741              		.align	2
 1742              		.global	ADC_1_SelectConfig
 1743              		.code	16
 1744              		.thumb_func
 1745              		.type	ADC_1_SelectConfig, %function
 1746              	ADC_1_SelectConfig:
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 71


 1747              	.LFB5:
 780:Generated_Source\PSoC4/ADC_1.c ****     /* Check whether the configuration number is valid or not */
 1748              		.loc 1 780 0
 1749              		.cfi_startproc
 1750              		@ args = 0, pretend = 0, frame = 0
 1751              		@ frame_needed = 0, uses_anonymous_args = 0
 1752              	.LVL153:
 1753 0000 70B5     		push	{r4, r5, r6, lr}
 1754              		.cfi_def_cfa_offset 16
 1755              		.cfi_offset 4, -16
 1756              		.cfi_offset 5, -12
 1757              		.cfi_offset 6, -8
 1758              		.cfi_offset 14, -4
 1759 0002 0400     		movs	r4, r0
 1760 0004 0E00     		movs	r6, r1
 782:Generated_Source\PSoC4/ADC_1.c ****     {        
 1761              		.loc 1 782 0
 1762 0006 0028     		cmp	r0, #0
 1763 0008 27D1     		bne	.L128
 785:Generated_Source\PSoC4/ADC_1.c ****         ADC_1_selected = 1u;
 1764              		.loc 1 785 0
 1765 000a FFF7FEFF 		bl	ADC_1_Stop
 1766              	.LVL154:
 786:Generated_Source\PSoC4/ADC_1.c ****         
 1767              		.loc 1 786 0
 1768 000e 134B     		ldr	r3, .L131
 1769 0010 0122     		movs	r2, #1
 1770 0012 5A71     		strb	r2, [r3, #5]
 788:Generated_Source\PSoC4/ADC_1.c ****     	{
 1771              		.loc 1 788 0
 1772 0014 1B79     		ldrb	r3, [r3, #4]
 1773 0016 002B     		cmp	r3, #0
 1774 0018 06D1     		bne	.L130
 790:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_initVar |= ADC_1_INIT_VAR_INIT_FLAG;
 1775              		.loc 1 790 0
 1776 001a FFF7FEFF 		bl	ADC_1_Init
 1777              	.LVL155:
 791:Generated_Source\PSoC4/ADC_1.c ****     	}
 1778              		.loc 1 791 0
 1779 001e 0F4A     		ldr	r2, .L131
 1780 0020 1179     		ldrb	r1, [r2, #4]
 1781 0022 0123     		movs	r3, #1
 1782 0024 0B43     		orrs	r3, r1
 1783 0026 1371     		strb	r3, [r2, #4]
 1784              	.L130:
 796:Generated_Source\PSoC4/ADC_1.c ****         #if (ADC_1_VREF_ROUTED)
 1785              		.loc 1 796 0
 1786 0028 E300     		lsls	r3, r4, #3
 1787 002a 1B1B     		subs	r3, r3, r4
 1788 002c DD00     		lsls	r5, r3, #3
 1789 002e 0C4B     		ldr	r3, .L131+4
 1790 0030 ED18     		adds	r5, r5, r3
 1791 0032 2800     		movs	r0, r5
 1792 0034 FFF7FEFF 		bl	ADC_1_InitConfig
 1793              	.LVL156:
 804:Generated_Source\PSoC4/ADC_1.c ****     	ADC_1_SAR_RANGE_INTR_MASK_REG = ADC_1_allConfigs[config].rangeIntMask;
 1794              		.loc 1 804 0
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 72


 1795 0038 0A4B     		ldr	r3, .L131+8
 1796 003a 2A6A     		ldr	r2, [r5, #32]
 1797 003c 1A60     		str	r2, [r3]
 805:Generated_Source\PSoC4/ADC_1.c ****     	ADC_1_SAR_SATURATE_INTR_MASK_REG = ADC_1_allConfigs[config].satIntMask;
 1798              		.loc 1 805 0
 1799 003e 0A4B     		ldr	r3, .L131+12
 1800 0040 6A6A     		ldr	r2, [r5, #36]
 1801 0042 1A60     		str	r2, [r3]
 806:Generated_Source\PSoC4/ADC_1.c ****     	ADC_1_currentConfig = config;
 1802              		.loc 1 806 0
 1803 0044 AA6A     		ldr	r2, [r5, #40]
 1804 0046 094B     		ldr	r3, .L131+16
 1805 0048 1A60     		str	r2, [r3]
 807:Generated_Source\PSoC4/ADC_1.c ****         
 1806              		.loc 1 807 0
 1807 004a 044B     		ldr	r3, .L131
 1808 004c 1C60     		str	r4, [r3]
 809:Generated_Source\PSoC4/ADC_1.c ****         {
 1809              		.loc 1 809 0
 1810 004e 012E     		cmp	r6, #1
 1811 0050 03D1     		bne	.L128
 812:Generated_Source\PSoC4/ADC_1.c ****             
 1812              		.loc 1 812 0
 1813 0052 FFF7FEFF 		bl	ADC_1_Start
 1814              	.LVL157:
 815:Generated_Source\PSoC4/ADC_1.c ****         }
 1815              		.loc 1 815 0
 1816 0056 FFF7FEFF 		bl	ADC_1_StartConvert
 1817              	.LVL158:
 1818              	.L128:
 819:Generated_Source\PSoC4/ADC_1.c **** 
 1819              		.loc 1 819 0
 1820              		@ sp needed
 1821              	.LVL159:
 1822              	.LVL160:
 1823 005a 70BD     		pop	{r4, r5, r6, pc}
 1824              	.L132:
 1825              		.align	2
 1826              	.L131:
 1827 005c 00000000 		.word	.LANCHOR0
 1828 0060 00000000 		.word	ADC_1_allConfigs
 1829 0064 20003A40 		.word	1077542944
 1830 0068 38023A40 		.word	1077543480
 1831 006c 28023A40 		.word	1077543464
 1832              		.cfi_endproc
 1833              	.LFE5:
 1834              		.size	ADC_1_SelectConfig, .-ADC_1_SelectConfig
 1835              		.section	.text.ADC_1_StopConvert,"ax",%progbits
 1836              		.align	2
 1837              		.global	ADC_1_StopConvert
 1838              		.code	16
 1839              		.thumb_func
 1840              		.type	ADC_1_StopConvert, %function
 1841              	ADC_1_StopConvert:
 1842              	.LFB7:
 879:Generated_Source\PSoC4/ADC_1.c ****     if((ADC_1_SAR_SAMPLE_CTRL_REG  
 1843              		.loc 1 879 0
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 73


 1844              		.cfi_startproc
 1845              		@ args = 0, pretend = 0, frame = 0
 1846              		@ frame_needed = 0, uses_anonymous_args = 0
 1847 0000 10B5     		push	{r4, lr}
 1848              		.cfi_def_cfa_offset 8
 1849              		.cfi_offset 4, -8
 1850              		.cfi_offset 14, -4
 880:Generated_Source\PSoC4/ADC_1.c **** 		& ADC_1_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK) 
 1851              		.loc 1 880 0
 1852 0002 0C4B     		ldr	r3, .L135
 1853 0004 1B68     		ldr	r3, [r3]
 1854 0006 5B03     		lsls	r3, r3, #13
 1855 0008 12D5     		bpl	.L133
 884:Generated_Source\PSoC4/ADC_1.c ****         
 1856              		.loc 1 884 0
 1857 000a 0A4A     		ldr	r2, .L135
 1858 000c 1168     		ldr	r1, [r2]
 1859 000e 0A4B     		ldr	r3, .L135+4
 1860 0010 0B40     		ands	r3, r1
 1861 0012 1360     		str	r3, [r2]
 886:Generated_Source\PSoC4/ADC_1.c ****             & ADC_1_MISC_CONFIG_FILTER_PRESENT_MSK) 
 1862              		.loc 1 886 0
 1863 0014 094B     		ldr	r3, .L135+8
 1864 0016 1A68     		ldr	r2, [r3]
 1865 0018 D300     		lsls	r3, r2, #3
 1866 001a 9A1A     		subs	r2, r3, r2
 1867 001c D300     		lsls	r3, r2, #3
 1868 001e 084A     		ldr	r2, .L135+12
 1869 0020 D318     		adds	r3, r2, r3
 1870 0022 1B6B     		ldr	r3, [r3, #48]
 1871 0024 9B07     		lsls	r3, r3, #30
 1872 0026 03D5     		bpl	.L133
 891:Generated_Source\PSoC4/ADC_1.c ****             ADC_1_Start();
 1873              		.loc 1 891 0
 1874 0028 FFF7FEFF 		bl	ADC_1_Stop
 1875              	.LVL161:
 892:Generated_Source\PSoC4/ADC_1.c ****         }
 1876              		.loc 1 892 0
 1877 002c FFF7FEFF 		bl	ADC_1_Start
 1878              	.LVL162:
 1879              	.L133:
 897:Generated_Source\PSoC4/ADC_1.c **** /*******************************************************************************
 1880              		.loc 1 897 0
 1881              		@ sp needed
 1882 0030 10BD     		pop	{r4, pc}
 1883              	.L136:
 1884 0032 C046     		.align	2
 1885              	.L135:
 1886 0034 04003A40 		.word	1077542916
 1887 0038 FFFFFEFF 		.word	-65537
 1888 003c 00000000 		.word	.LANCHOR0
 1889 0040 00000000 		.word	ADC_1_allConfigs
 1890              		.cfi_endproc
 1891              	.LFE7:
 1892              		.size	ADC_1_StopConvert, .-ADC_1_StopConvert
 1893              		.comm	ADC_1_countsPer10Volt,8,4
 1894              		.comm	ADC_1_offset,4,4
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 74


 1895              		.global	ADC_1_selected
 1896              		.global	ADC_1_initVar
 1897              		.section	.rodata
 1898              		.align	2
 1899              		.set	.LANCHOR1,. + 0
 1900              		.type	ADC_1_channelsConfig, %object
 1901              		.size	ADC_1_channelsConfig, 8
 1902              	ADC_1_channelsConfig:
 1903 0000 00000000 		.word	0
 1904 0004 00100000 		.word	4096
 1905              		.bss
 1906              		.align	2
 1907              		.set	.LANCHOR0,. + 0
 1908              		.type	ADC_1_currentConfig, %object
 1909              		.size	ADC_1_currentConfig, 4
 1910              	ADC_1_currentConfig:
 1911 0000 00000000 		.space	4
 1912              		.type	ADC_1_initVar, %object
 1913              		.size	ADC_1_initVar, 1
 1914              	ADC_1_initVar:
 1915 0004 00       		.space	1
 1916              		.type	ADC_1_selected, %object
 1917              		.size	ADC_1_selected, 1
 1918              	ADC_1_selected:
 1919 0005 00       		.space	1
 1920              		.text
 1921              	.Letext0:
 1922              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1923              		.file 3 "Generated_Source\\PSoC4\\ADC_1.h"
 1924              		.file 4 "Generated_Source\\PSoC4\\ADC_1_intSarClock.h"
 1925              		.file 5 "Generated_Source\\PSoC4\\CyLib.h"
 1926              		.file 6 "Generated_Source\\PSoC4\\ADC_1_IRQ.h"
 1927              		.section	.debug_info,"",%progbits
 1928              	.Ldebug_info0:
 1929 0000 3D0A0000 		.4byte	0xa3d
 1930 0004 0400     		.2byte	0x4
 1931 0006 00000000 		.4byte	.Ldebug_abbrev0
 1932 000a 04       		.byte	0x4
 1933 000b 01       		.uleb128 0x1
 1934 000c 8F040000 		.4byte	.LASF111
 1935 0010 0C       		.byte	0xc
 1936 0011 E0030000 		.4byte	.LASF112
 1937 0015 7F030000 		.4byte	.LASF113
 1938 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1939 001d 00000000 		.4byte	0
 1940 0021 00000000 		.4byte	.Ldebug_line0
 1941 0025 02       		.uleb128 0x2
 1942 0026 01       		.byte	0x1
 1943 0027 06       		.byte	0x6
 1944 0028 72000000 		.4byte	.LASF0
 1945 002c 02       		.uleb128 0x2
 1946 002d 01       		.byte	0x1
 1947 002e 08       		.byte	0x8
 1948 002f 10040000 		.4byte	.LASF1
 1949 0033 02       		.uleb128 0x2
 1950 0034 02       		.byte	0x2
 1951 0035 05       		.byte	0x5
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 75


 1952 0036 46040000 		.4byte	.LASF2
 1953 003a 02       		.uleb128 0x2
 1954 003b 02       		.byte	0x2
 1955 003c 07       		.byte	0x7
 1956 003d 1C020000 		.4byte	.LASF3
 1957 0041 02       		.uleb128 0x2
 1958 0042 04       		.byte	0x4
 1959 0043 05       		.byte	0x5
 1960 0044 B6000000 		.4byte	.LASF4
 1961 0048 02       		.uleb128 0x2
 1962 0049 04       		.byte	0x4
 1963 004a 07       		.byte	0x7
 1964 004b A1010000 		.4byte	.LASF5
 1965 004f 02       		.uleb128 0x2
 1966 0050 08       		.byte	0x8
 1967 0051 05       		.byte	0x5
 1968 0052 64000000 		.4byte	.LASF6
 1969 0056 02       		.uleb128 0x2
 1970 0057 08       		.byte	0x8
 1971 0058 07       		.byte	0x7
 1972 0059 40000000 		.4byte	.LASF7
 1973 005d 03       		.uleb128 0x3
 1974 005e 04       		.byte	0x4
 1975 005f 05       		.byte	0x5
 1976 0060 696E7400 		.ascii	"int\000"
 1977 0064 02       		.uleb128 0x2
 1978 0065 04       		.byte	0x4
 1979 0066 07       		.byte	0x7
 1980 0067 6A010000 		.4byte	.LASF8
 1981 006b 04       		.uleb128 0x4
 1982 006c D6000000 		.4byte	.LASF9
 1983 0070 02       		.byte	0x2
 1984 0071 E401     		.2byte	0x1e4
 1985 0073 2C000000 		.4byte	0x2c
 1986 0077 04       		.uleb128 0x4
 1987 0078 00000000 		.4byte	.LASF10
 1988 007c 02       		.byte	0x2
 1989 007d E501     		.2byte	0x1e5
 1990 007f 3A000000 		.4byte	0x3a
 1991 0083 04       		.uleb128 0x4
 1992 0084 30010000 		.4byte	.LASF11
 1993 0088 02       		.byte	0x2
 1994 0089 E601     		.2byte	0x1e6
 1995 008b 48000000 		.4byte	0x48
 1996 008f 04       		.uleb128 0x4
 1997 0090 45060000 		.4byte	.LASF12
 1998 0094 02       		.byte	0x2
 1999 0095 E801     		.2byte	0x1e8
 2000 0097 33000000 		.4byte	0x33
 2001 009b 04       		.uleb128 0x4
 2002 009c 9F000000 		.4byte	.LASF13
 2003 00a0 02       		.byte	0x2
 2004 00a1 E901     		.2byte	0x1e9
 2005 00a3 41000000 		.4byte	0x41
 2006 00a7 04       		.uleb128 0x4
 2007 00a8 D6020000 		.4byte	.LASF14
 2008 00ac 02       		.byte	0x2
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 76


 2009 00ad EA01     		.2byte	0x1ea
 2010 00af B3000000 		.4byte	0xb3
 2011 00b3 02       		.uleb128 0x2
 2012 00b4 04       		.byte	0x4
 2013 00b5 04       		.byte	0x4
 2014 00b6 79030000 		.4byte	.LASF15
 2015 00ba 02       		.uleb128 0x2
 2016 00bb 08       		.byte	0x8
 2017 00bc 04       		.byte	0x4
 2018 00bd E6000000 		.4byte	.LASF16
 2019 00c1 04       		.uleb128 0x4
 2020 00c2 62030000 		.4byte	.LASF17
 2021 00c6 02       		.byte	0x2
 2022 00c7 EF01     		.2byte	0x1ef
 2023 00c9 4F000000 		.4byte	0x4f
 2024 00cd 02       		.uleb128 0x2
 2025 00ce 01       		.byte	0x1
 2026 00cf 08       		.byte	0x8
 2027 00d0 26050000 		.4byte	.LASF18
 2028 00d4 04       		.uleb128 0x4
 2029 00d5 BD020000 		.4byte	.LASF19
 2030 00d9 02       		.byte	0x2
 2031 00da 9002     		.2byte	0x290
 2032 00dc E0000000 		.4byte	0xe0
 2033 00e0 05       		.uleb128 0x5
 2034 00e1 83000000 		.4byte	0x83
 2035 00e5 04       		.uleb128 0x4
 2036 00e6 30050000 		.4byte	.LASF20
 2037 00ea 02       		.byte	0x2
 2038 00eb A002     		.2byte	0x2a0
 2039 00ed F1000000 		.4byte	0xf1
 2040 00f1 06       		.uleb128 0x6
 2041 00f2 04       		.byte	0x4
 2042 00f3 F7000000 		.4byte	0xf7
 2043 00f7 07       		.uleb128 0x7
 2044 00f8 02       		.uleb128 0x2
 2045 00f9 08       		.byte	0x8
 2046 00fa 04       		.byte	0x4
 2047 00fb 0A030000 		.4byte	.LASF21
 2048 00ff 02       		.uleb128 0x2
 2049 0100 04       		.byte	0x4
 2050 0101 07       		.byte	0x7
 2051 0102 DE020000 		.4byte	.LASF22
 2052 0106 08       		.uleb128 0x8
 2053 0107 38       		.byte	0x38
 2054 0108 03       		.byte	0x3
 2055 0109 5E       		.byte	0x5e
 2056 010a B7010000 		.4byte	0x1b7
 2057 010e 09       		.uleb128 0x9
 2058 010f 6B060000 		.4byte	.LASF23
 2059 0113 03       		.byte	0x3
 2060 0114 60       		.byte	0x60
 2061 0115 83000000 		.4byte	0x83
 2062 0119 00       		.byte	0
 2063 011a 09       		.uleb128 0x9
 2064 011b A6020000 		.4byte	.LASF24
 2065 011f 03       		.byte	0x3
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 77


 2066 0120 61       		.byte	0x61
 2067 0121 83000000 		.4byte	0x83
 2068 0125 04       		.byte	0x4
 2069 0126 09       		.uleb128 0x9
 2070 0127 BB050000 		.4byte	.LASF25
 2071 012b 03       		.byte	0x3
 2072 012c 62       		.byte	0x62
 2073 012d 83000000 		.4byte	0x83
 2074 0131 08       		.byte	0x8
 2075 0132 09       		.uleb128 0x9
 2076 0133 04060000 		.4byte	.LASF26
 2077 0137 03       		.byte	0x3
 2078 0138 65       		.byte	0x65
 2079 0139 83000000 		.4byte	0x83
 2080 013d 0C       		.byte	0xc
 2081 013e 09       		.uleb128 0x9
 2082 013f 23010000 		.4byte	.LASF27
 2083 0143 03       		.byte	0x3
 2084 0144 66       		.byte	0x66
 2085 0145 83000000 		.4byte	0x83
 2086 0149 10       		.byte	0x10
 2087 014a 09       		.uleb128 0x9
 2088 014b 1E030000 		.4byte	.LASF28
 2089 014f 03       		.byte	0x3
 2090 0150 67       		.byte	0x67
 2091 0151 83000000 		.4byte	0x83
 2092 0155 14       		.byte	0x14
 2093 0156 09       		.uleb128 0x9
 2094 0157 40020000 		.4byte	.LASF29
 2095 015b 03       		.byte	0x3
 2096 015c 68       		.byte	0x68
 2097 015d 83000000 		.4byte	0x83
 2098 0161 18       		.byte	0x18
 2099 0162 09       		.uleb128 0x9
 2100 0163 E4050000 		.4byte	.LASF30
 2101 0167 03       		.byte	0x3
 2102 0168 69       		.byte	0x69
 2103 0169 83000000 		.4byte	0x83
 2104 016d 1C       		.byte	0x1c
 2105 016e 09       		.uleb128 0x9
 2106 016f D9030000 		.4byte	.LASF31
 2107 0173 03       		.byte	0x3
 2108 0174 6A       		.byte	0x6a
 2109 0175 83000000 		.4byte	0x83
 2110 0179 20       		.byte	0x20
 2111 017a 09       		.uleb128 0x9
 2112 017b 77010000 		.4byte	.LASF32
 2113 017f 03       		.byte	0x3
 2114 0180 6B       		.byte	0x6b
 2115 0181 83000000 		.4byte	0x83
 2116 0185 24       		.byte	0x24
 2117 0186 09       		.uleb128 0x9
 2118 0187 2B030000 		.4byte	.LASF33
 2119 018b 03       		.byte	0x3
 2120 018c 6C       		.byte	0x6c
 2121 018d 83000000 		.4byte	0x83
 2122 0191 28       		.byte	0x28
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 78


 2123 0192 09       		.uleb128 0x9
 2124 0193 83040000 		.4byte	.LASF34
 2125 0197 03       		.byte	0x3
 2126 0198 6D       		.byte	0x6d
 2127 0199 9B000000 		.4byte	0x9b
 2128 019d 2C       		.byte	0x2c
 2129 019e 09       		.uleb128 0x9
 2130 019f C0050000 		.4byte	.LASF35
 2131 01a3 03       		.byte	0x3
 2132 01a4 6F       		.byte	0x6f
 2133 01a5 83000000 		.4byte	0x83
 2134 01a9 30       		.byte	0x30
 2135 01aa 09       		.uleb128 0x9
 2136 01ab 89000000 		.4byte	.LASF36
 2137 01af 03       		.byte	0x3
 2138 01b0 76       		.byte	0x76
 2139 01b1 77000000 		.4byte	0x77
 2140 01b5 34       		.byte	0x34
 2141 01b6 00       		.byte	0
 2142 01b7 0A       		.uleb128 0xa
 2143 01b8 0F060000 		.4byte	.LASF37
 2144 01bc 03       		.byte	0x3
 2145 01bd 7C       		.byte	0x7c
 2146 01be 06010000 		.4byte	0x106
 2147 01c2 0B       		.uleb128 0xb
 2148 01c3 88050000 		.4byte	.LASF114
 2149 01c7 01       		.byte	0x1
 2150 01c8 3704     		.2byte	0x437
 2151 01ca 9B000000 		.4byte	0x9b
 2152 01ce 00000000 		.4byte	.LFB12
 2153 01d2 58000000 		.4byte	.LFE12-.LFB12
 2154 01d6 01       		.uleb128 0x1
 2155 01d7 9C       		.byte	0x9c
 2156 01d8 0D020000 		.4byte	0x20d
 2157 01dc 0C       		.uleb128 0xc
 2158 01dd 21050000 		.4byte	.LASF40
 2159 01e1 01       		.byte	0x1
 2160 01e2 3704     		.2byte	0x437
 2161 01e4 83000000 		.4byte	0x83
 2162 01e8 00000000 		.4byte	.LLST0
 2163 01ec 0D       		.uleb128 0xd
 2164 01ed C3020000 		.4byte	.LASF38
 2165 01f1 01       		.byte	0x1
 2166 01f2 3904     		.2byte	0x439
 2167 01f4 9B000000 		.4byte	0x9b
 2168 01f8 21000000 		.4byte	.LLST1
 2169 01fc 0D       		.uleb128 0xd
 2170 01fd B2020000 		.4byte	.LASF39
 2171 0201 01       		.byte	0x1
 2172 0202 3A04     		.2byte	0x43a
 2173 0204 83000000 		.4byte	0x83
 2174 0208 40000000 		.4byte	.LLST2
 2175 020c 00       		.byte	0
 2176 020d 0E       		.uleb128 0xe
 2177 020e 94000000 		.4byte	.LASF44
 2178 0212 01       		.byte	0x1
 2179 0213 7902     		.2byte	0x279
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 79


 2180 0215 00000000 		.4byte	.LFB3
 2181 0219 10000000 		.4byte	.LFE3-.LFB3
 2182 021d 01       		.uleb128 0x1
 2183 021e 9C       		.byte	0x9c
 2184 021f 0F       		.uleb128 0xf
 2185 0220 A5000000 		.4byte	.LASF46
 2186 0224 01       		.byte	0x1
 2187 0225 9902     		.2byte	0x299
 2188 0227 00000000 		.4byte	.LFB4
 2189 022b 08010000 		.4byte	.LFE4-.LFB4
 2190 022f 01       		.uleb128 0x1
 2191 0230 9C       		.byte	0x9c
 2192 0231 92020000 		.4byte	0x292
 2193 0235 0C       		.uleb128 0xc
 2194 0236 3D050000 		.4byte	.LASF41
 2195 023a 01       		.byte	0x1
 2196 023b 9902     		.2byte	0x299
 2197 023d 92020000 		.4byte	0x292
 2198 0241 5E000000 		.4byte	.LLST3
 2199 0245 0D       		.uleb128 0xd
 2200 0246 69040000 		.4byte	.LASF42
 2201 024a 01       		.byte	0x1
 2202 024b 9B02     		.2byte	0x29b
 2203 024d 83000000 		.4byte	0x83
 2204 0251 8A000000 		.4byte	.LLST4
 2205 0255 0D       		.uleb128 0xd
 2206 0256 DF010000 		.4byte	.LASF43
 2207 025a 01       		.byte	0x1
 2208 025b 9C02     		.2byte	0x29c
 2209 025d 83000000 		.4byte	0x83
 2210 0261 A9000000 		.4byte	.LLST5
 2211 0265 10       		.uleb128 0x10
 2212 0266 08000000 		.4byte	.LVL8
 2213 026a E8090000 		.4byte	0x9e8
 2214 026e 11       		.uleb128 0x11
 2215 026f 10000000 		.4byte	.LVL9
 2216 0273 F3090000 		.4byte	0x9f3
 2217 0277 81020000 		.4byte	0x281
 2218 027b 12       		.uleb128 0x12
 2219 027c 01       		.uleb128 0x1
 2220 027d 51       		.byte	0x51
 2221 027e 01       		.uleb128 0x1
 2222 027f 30       		.byte	0x30
 2223 0280 00       		.byte	0
 2224 0281 13       		.uleb128 0x13
 2225 0282 16000000 		.4byte	.LVL10
 2226 0286 FE090000 		.4byte	0x9fe
 2227 028a 12       		.uleb128 0x12
 2228 028b 01       		.uleb128 0x1
 2229 028c 50       		.byte	0x50
 2230 028d 02       		.uleb128 0x2
 2231 028e 08       		.byte	0x8
 2232 028f FF       		.byte	0xff
 2233 0290 00       		.byte	0
 2234 0291 00       		.byte	0
 2235 0292 06       		.uleb128 0x6
 2236 0293 04       		.byte	0x4
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 80


 2237 0294 98020000 		.4byte	0x298
 2238 0298 14       		.uleb128 0x14
 2239 0299 B7010000 		.4byte	0x1b7
 2240 029d 0E       		.uleb128 0xe
 2241 029e 8E010000 		.4byte	.LASF45
 2242 02a2 01       		.byte	0x1
 2243 02a3 4B03     		.2byte	0x34b
 2244 02a5 00000000 		.4byte	.LFB6
 2245 02a9 28000000 		.4byte	.LFE6-.LFB6
 2246 02ad 01       		.uleb128 0x1
 2247 02ae 9C       		.byte	0x9c
 2248 02af 0F       		.uleb128 0xf
 2249 02b0 ED000000 		.4byte	.LASF47
 2250 02b4 01       		.byte	0x1
 2251 02b5 9803     		.2byte	0x398
 2252 02b7 00000000 		.4byte	.LFB8
 2253 02bb 28000000 		.4byte	.LFE8-.LFB8
 2254 02bf 01       		.uleb128 0x1
 2255 02c0 9C       		.byte	0x9c
 2256 02c1 D4020000 		.4byte	0x2d4
 2257 02c5 15       		.uleb128 0x15
 2258 02c6 2B050000 		.4byte	.LASF48
 2259 02ca 01       		.byte	0x1
 2260 02cb 9803     		.2byte	0x398
 2261 02cd 83000000 		.4byte	0x83
 2262 02d1 01       		.uleb128 0x1
 2263 02d2 50       		.byte	0x50
 2264 02d3 00       		.byte	0
 2265 02d4 0F       		.uleb128 0xf
 2266 02d5 80020000 		.4byte	.LASF49
 2267 02d9 01       		.byte	0x1
 2268 02da D803     		.2byte	0x3d8
 2269 02dc 00000000 		.4byte	.LFB9
 2270 02e0 10000000 		.4byte	.LFE9-.LFB9
 2271 02e4 01       		.uleb128 0x1
 2272 02e5 9C       		.byte	0x9c
 2273 02e6 FB020000 		.4byte	0x2fb
 2274 02ea 0C       		.uleb128 0xc
 2275 02eb 46010000 		.4byte	.LASF50
 2276 02ef 01       		.byte	0x1
 2277 02f0 D803     		.2byte	0x3d8
 2278 02f2 83000000 		.4byte	0x83
 2279 02f6 E3000000 		.4byte	.LLST6
 2280 02fa 00       		.byte	0
 2281 02fb 0F       		.uleb128 0xf
 2282 02fc 4B060000 		.4byte	.LASF51
 2283 0300 01       		.byte	0x1
 2284 0301 F003     		.2byte	0x3f0
 2285 0303 00000000 		.4byte	.LFB10
 2286 0307 2C000000 		.4byte	.LFE10-.LFB10
 2287 030b 01       		.uleb128 0x1
 2288 030c 9C       		.byte	0x9c
 2289 030d 30030000 		.4byte	0x330
 2290 0311 0C       		.uleb128 0xc
 2291 0312 E9010000 		.4byte	.LASF52
 2292 0316 01       		.byte	0x1
 2293 0317 F003     		.2byte	0x3f0
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 81


 2294 0319 83000000 		.4byte	0x83
 2295 031d 04010000 		.4byte	.LLST7
 2296 0321 16       		.uleb128 0x16
 2297 0322 07000000 		.4byte	.LASF53
 2298 0326 01       		.byte	0x1
 2299 0327 F203     		.2byte	0x3f2
 2300 0329 83000000 		.4byte	0x83
 2301 032d 01       		.uleb128 0x1
 2302 032e 52       		.byte	0x52
 2303 032f 00       		.byte	0
 2304 0330 17       		.uleb128 0x17
 2305 0331 EE050000 		.4byte	.LASF56
 2306 0335 01       		.byte	0x1
 2307 0336 1104     		.2byte	0x411
 2308 0338 83000000 		.4byte	0x83
 2309 033c 00000000 		.4byte	.LFB11
 2310 0340 38000000 		.4byte	.LFE11-.LFB11
 2311 0344 01       		.uleb128 0x1
 2312 0345 9C       		.byte	0x9c
 2313 0346 7B030000 		.4byte	0x37b
 2314 034a 0C       		.uleb128 0xc
 2315 034b 62010000 		.4byte	.LASF54
 2316 034f 01       		.byte	0x1
 2317 0350 1104     		.2byte	0x411
 2318 0352 83000000 		.4byte	0x83
 2319 0356 22010000 		.4byte	.LLST8
 2320 035a 0D       		.uleb128 0xd
 2321 035b 77060000 		.4byte	.LASF55
 2322 035f 01       		.byte	0x1
 2323 0360 1304     		.2byte	0x413
 2324 0362 83000000 		.4byte	0x83
 2325 0366 56010000 		.4byte	.LLST9
 2326 036a 18       		.uleb128 0x18
 2327 036b 77647400 		.ascii	"wdt\000"
 2328 036f 01       		.byte	0x1
 2329 0370 1404     		.2byte	0x414
 2330 0372 83000000 		.4byte	0x83
 2331 0376 8C010000 		.4byte	.LLST10
 2332 037a 00       		.byte	0
 2333 037b 17       		.uleb128 0x17
 2334 037c 1E040000 		.4byte	.LASF57
 2335 0380 01       		.byte	0x1
 2336 0381 6304     		.2byte	0x463
 2337 0383 8F000000 		.4byte	0x8f
 2338 0387 00000000 		.4byte	.LFB13
 2339 038b 54000000 		.4byte	.LFE13-.LFB13
 2340 038f 01       		.uleb128 0x1
 2341 0390 9C       		.byte	0x9c
 2342 0391 C5030000 		.4byte	0x3c5
 2343 0395 0C       		.uleb128 0xc
 2344 0396 21050000 		.4byte	.LASF40
 2345 039a 01       		.byte	0x1
 2346 039b 6304     		.2byte	0x463
 2347 039d 83000000 		.4byte	0x83
 2348 03a1 BF010000 		.4byte	.LLST11
 2349 03a5 0D       		.uleb128 0xd
 2350 03a6 CC020000 		.4byte	.LASF58
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 82


 2351 03aa 01       		.byte	0x1
 2352 03ab 6504     		.2byte	0x465
 2353 03ad 83000000 		.4byte	0x83
 2354 03b1 04020000 		.4byte	.LLST12
 2355 03b5 13       		.uleb128 0x13
 2356 03b6 1E000000 		.4byte	.LVL41
 2357 03ba 090A0000 		.4byte	0xa09
 2358 03be 12       		.uleb128 0x12
 2359 03bf 01       		.uleb128 0x1
 2360 03c0 50       		.byte	0x50
 2361 03c1 01       		.uleb128 0x1
 2362 03c2 30       		.byte	0x30
 2363 03c3 00       		.byte	0
 2364 03c4 00       		.byte	0
 2365 03c5 17       		.uleb128 0x17
 2366 03c6 23060000 		.4byte	.LASF59
 2367 03ca 01       		.byte	0x1
 2368 03cb 8904     		.2byte	0x489
 2369 03cd 9B000000 		.4byte	0x9b
 2370 03d1 00000000 		.4byte	.LFB14
 2371 03d5 64000000 		.4byte	.LFE14-.LFB14
 2372 03d9 01       		.uleb128 0x1
 2373 03da 9C       		.byte	0x9c
 2374 03db 43040000 		.4byte	0x443
 2375 03df 0C       		.uleb128 0xc
 2376 03e0 21050000 		.4byte	.LASF40
 2377 03e4 01       		.byte	0x1
 2378 03e5 8904     		.2byte	0x489
 2379 03e7 83000000 		.4byte	0x83
 2380 03eb 22020000 		.4byte	.LLST13
 2381 03ef 0D       		.uleb128 0xd
 2382 03f0 CC020000 		.4byte	.LASF58
 2383 03f4 01       		.byte	0x1
 2384 03f5 8B04     		.2byte	0x48b
 2385 03f7 83000000 		.4byte	0x83
 2386 03fb 4E020000 		.4byte	.LLST14
 2387 03ff 0D       		.uleb128 0xd
 2388 0400 5D040000 		.4byte	.LASF60
 2389 0404 01       		.byte	0x1
 2390 0405 8C04     		.2byte	0x48c
 2391 0407 8F000000 		.4byte	0x8f
 2392 040b 6C020000 		.4byte	.LLST15
 2393 040f 0D       		.uleb128 0xd
 2394 0410 61020000 		.4byte	.LASF61
 2395 0414 01       		.byte	0x1
 2396 0415 8D04     		.2byte	0x48d
 2397 0417 9B000000 		.4byte	0x9b
 2398 041b 7F020000 		.4byte	.LLST16
 2399 041f 11       		.uleb128 0x11
 2400 0420 1E000000 		.4byte	.LVL49
 2401 0424 090A0000 		.4byte	0xa09
 2402 0428 32040000 		.4byte	0x432
 2403 042c 12       		.uleb128 0x12
 2404 042d 01       		.uleb128 0x1
 2405 042e 50       		.byte	0x50
 2406 042f 01       		.uleb128 0x1
 2407 0430 30       		.byte	0x30
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 83


 2408 0431 00       		.byte	0
 2409 0432 13       		.uleb128 0x13
 2410 0433 4A000000 		.4byte	.LVL53
 2411 0437 C2010000 		.4byte	0x1c2
 2412 043b 12       		.uleb128 0x12
 2413 043c 01       		.uleb128 0x1
 2414 043d 50       		.byte	0x50
 2415 043e 02       		.uleb128 0x2
 2416 043f 75       		.byte	0x75
 2417 0440 00       		.sleb128 0
 2418 0441 00       		.byte	0
 2419 0442 00       		.byte	0
 2420 0443 0F       		.uleb128 0xf
 2421 0444 4B010000 		.4byte	.LASF62
 2422 0448 01       		.byte	0x1
 2423 0449 B804     		.2byte	0x4b8
 2424 044b 00000000 		.4byte	.LFB15
 2425 044f 1C000000 		.4byte	.LFE15-.LFB15
 2426 0453 01       		.uleb128 0x1
 2427 0454 9C       		.byte	0x9c
 2428 0455 6A040000 		.4byte	0x46a
 2429 0459 0C       		.uleb128 0xc
 2430 045a 01030000 		.4byte	.LASF63
 2431 045e 01       		.byte	0x1
 2432 045f B804     		.2byte	0x4b8
 2433 0461 83000000 		.4byte	0x83
 2434 0465 9D020000 		.4byte	.LLST17
 2435 0469 00       		.byte	0
 2436 046a 0F       		.uleb128 0xf
 2437 046b F4010000 		.4byte	.LASF64
 2438 046f 01       		.byte	0x1
 2439 0470 CF04     		.2byte	0x4cf
 2440 0472 00000000 		.4byte	.LFB16
 2441 0476 18000000 		.4byte	.LFE16-.LFB16
 2442 047a 01       		.uleb128 0x1
 2443 047b 9C       		.byte	0x9c
 2444 047c 91040000 		.4byte	0x491
 2445 0480 0C       		.uleb128 0xc
 2446 0481 C2030000 		.4byte	.LASF65
 2447 0485 01       		.byte	0x1
 2448 0486 CF04     		.2byte	0x4cf
 2449 0488 83000000 		.4byte	0x83
 2450 048c BE020000 		.4byte	.LLST18
 2451 0490 00       		.byte	0
 2452 0491 0F       		.uleb128 0xf
 2453 0492 02010000 		.4byte	.LASF66
 2454 0496 01       		.byte	0x1
 2455 0497 EA04     		.2byte	0x4ea
 2456 0499 00000000 		.4byte	.LFB17
 2457 049d 2C000000 		.4byte	.LFE17-.LFB17
 2458 04a1 01       		.uleb128 0x1
 2459 04a2 9C       		.byte	0x9c
 2460 04a3 C6040000 		.4byte	0x4c6
 2461 04a7 0C       		.uleb128 0xc
 2462 04a8 91020000 		.4byte	.LASF67
 2463 04ac 01       		.byte	0x1
 2464 04ad EA04     		.2byte	0x4ea
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 84


 2465 04af 83000000 		.4byte	0x83
 2466 04b3 DF020000 		.4byte	.LLST19
 2467 04b7 16       		.uleb128 0x16
 2468 04b8 07000000 		.4byte	.LASF53
 2469 04bc 01       		.byte	0x1
 2470 04bd EC04     		.2byte	0x4ec
 2471 04bf 83000000 		.4byte	0x83
 2472 04c3 01       		.uleb128 0x1
 2473 04c4 52       		.byte	0x52
 2474 04c5 00       		.byte	0
 2475 04c6 0F       		.uleb128 0xf
 2476 04c7 FF030000 		.4byte	.LASF68
 2477 04cb 01       		.byte	0x1
 2478 04cc 0505     		.2byte	0x505
 2479 04ce 00000000 		.4byte	.LFB18
 2480 04d2 2C000000 		.4byte	.LFE18-.LFB18
 2481 04d6 01       		.uleb128 0x1
 2482 04d7 9C       		.byte	0x9c
 2483 04d8 FB040000 		.4byte	0x4fb
 2484 04dc 0C       		.uleb128 0xc
 2485 04dd 5A030000 		.4byte	.LASF69
 2486 04e1 01       		.byte	0x1
 2487 04e2 0505     		.2byte	0x505
 2488 04e4 83000000 		.4byte	0x83
 2489 04e8 FD020000 		.4byte	.LLST20
 2490 04ec 16       		.uleb128 0x16
 2491 04ed 07000000 		.4byte	.LASF53
 2492 04f1 01       		.byte	0x1
 2493 04f2 0705     		.2byte	0x507
 2494 04f4 83000000 		.4byte	0x83
 2495 04f8 01       		.uleb128 0x1
 2496 04f9 52       		.byte	0x52
 2497 04fa 00       		.byte	0
 2498 04fb 0F       		.uleb128 0xf
 2499 04fc 35060000 		.4byte	.LASF70
 2500 0500 01       		.byte	0x1
 2501 0501 2905     		.2byte	0x529
 2502 0503 00000000 		.4byte	.LFB19
 2503 0507 44000000 		.4byte	.LFE19-.LFB19
 2504 050b 01       		.uleb128 0x1
 2505 050c 9C       		.byte	0x9c
 2506 050d 41050000 		.4byte	0x541
 2507 0511 0C       		.uleb128 0xc
 2508 0512 21050000 		.4byte	.LASF40
 2509 0516 01       		.byte	0x1
 2510 0517 2905     		.2byte	0x529
 2511 0519 83000000 		.4byte	0x83
 2512 051d 1B030000 		.4byte	.LLST21
 2513 0521 0C       		.uleb128 0xc
 2514 0522 B4050000 		.4byte	.LASF71
 2515 0526 01       		.byte	0x1
 2516 0527 2905     		.2byte	0x529
 2517 0529 8F000000 		.4byte	0x8f
 2518 052d 47030000 		.4byte	.LLST22
 2519 0531 13       		.uleb128 0x13
 2520 0532 20000000 		.4byte	.LVL72
 2521 0536 090A0000 		.4byte	0xa09
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 85


 2522 053a 12       		.uleb128 0x12
 2523 053b 01       		.uleb128 0x1
 2524 053c 50       		.byte	0x50
 2525 053d 01       		.uleb128 0x1
 2526 053e 30       		.byte	0x30
 2527 053f 00       		.byte	0
 2528 0540 00       		.byte	0
 2529 0541 0F       		.uleb128 0xf
 2530 0542 36030000 		.4byte	.LASF72
 2531 0546 01       		.byte	0x1
 2532 0547 4C05     		.2byte	0x54c
 2533 0549 00000000 		.4byte	.LFB20
 2534 054d 44000000 		.4byte	.LFE20-.LFB20
 2535 0551 01       		.uleb128 0x1
 2536 0552 9C       		.byte	0x9c
 2537 0553 87050000 		.4byte	0x587
 2538 0557 0C       		.uleb128 0xc
 2539 0558 21050000 		.4byte	.LASF40
 2540 055c 01       		.byte	0x1
 2541 055d 4C05     		.2byte	0x54c
 2542 055f 83000000 		.4byte	0x83
 2543 0563 68030000 		.4byte	.LLST23
 2544 0567 0C       		.uleb128 0xc
 2545 0568 11000000 		.4byte	.LASF73
 2546 056c 01       		.byte	0x1
 2547 056d 4C05     		.2byte	0x54c
 2548 056f 9B000000 		.4byte	0x9b
 2549 0573 94030000 		.4byte	.LLST24
 2550 0577 13       		.uleb128 0x13
 2551 0578 20000000 		.4byte	.LVL76
 2552 057c 090A0000 		.4byte	0xa09
 2553 0580 12       		.uleb128 0x12
 2554 0581 01       		.uleb128 0x1
 2555 0582 50       		.byte	0x50
 2556 0583 01       		.uleb128 0x1
 2557 0584 30       		.byte	0x30
 2558 0585 00       		.byte	0
 2559 0586 00       		.byte	0
 2560 0587 19       		.uleb128 0x19
 2561 0588 BF000000 		.4byte	.LASF74
 2562 058c 01       		.byte	0x1
 2563 058d 6505     		.2byte	0x565
 2564 058f 8F000000 		.4byte	0x8f
 2565 0593 00000000 		.4byte	.LFB21
 2566 0597 98000000 		.4byte	.LFE21-.LFB21
 2567 059b 01       		.uleb128 0x1
 2568 059c 9C       		.byte	0x9c
 2569 059d 15060000 		.4byte	0x615
 2570 05a1 0C       		.uleb128 0xc
 2571 05a2 21050000 		.4byte	.LASF40
 2572 05a6 01       		.byte	0x1
 2573 05a7 6505     		.2byte	0x565
 2574 05a9 83000000 		.4byte	0x83
 2575 05ad C1030000 		.4byte	.LLST25
 2576 05b1 0C       		.uleb128 0xc
 2577 05b2 CB050000 		.4byte	.LASF75
 2578 05b6 01       		.byte	0x1
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 86


 2579 05b7 6505     		.2byte	0x565
 2580 05b9 8F000000 		.4byte	0x8f
 2581 05bd ED030000 		.4byte	.LLST26
 2582 05c1 0D       		.uleb128 0xd
 2583 05c2 5D010000 		.4byte	.LASF76
 2584 05c6 01       		.byte	0x1
 2585 05c7 6705     		.2byte	0x567
 2586 05c9 83000000 		.4byte	0x83
 2587 05cd 3D040000 		.4byte	.LLST27
 2588 05d1 0D       		.uleb128 0xd
 2589 05d2 07020000 		.4byte	.LASF77
 2590 05d6 01       		.byte	0x1
 2591 05d7 6805     		.2byte	0x568
 2592 05d9 83000000 		.4byte	0x83
 2593 05dd 50040000 		.4byte	.LLST28
 2594 05e1 0D       		.uleb128 0xd
 2595 05e2 9B020000 		.4byte	.LASF78
 2596 05e6 01       		.byte	0x1
 2597 05e7 6905     		.2byte	0x569
 2598 05e9 83000000 		.4byte	0x83
 2599 05ed 7B040000 		.4byte	.LLST29
 2600 05f1 11       		.uleb128 0x11
 2601 05f2 24000000 		.4byte	.LVL83
 2602 05f6 090A0000 		.4byte	0xa09
 2603 05fa 04060000 		.4byte	0x604
 2604 05fe 12       		.uleb128 0x12
 2605 05ff 01       		.uleb128 0x1
 2606 0600 50       		.byte	0x50
 2607 0601 01       		.uleb128 0x1
 2608 0602 30       		.byte	0x30
 2609 0603 00       		.byte	0
 2610 0604 13       		.uleb128 0x13
 2611 0605 5E000000 		.4byte	.LVL88
 2612 0609 C2010000 		.4byte	0x1c2
 2613 060d 12       		.uleb128 0x12
 2614 060e 01       		.uleb128 0x1
 2615 060f 50       		.byte	0x50
 2616 0610 02       		.uleb128 0x2
 2617 0611 76       		.byte	0x76
 2618 0612 00       		.sleb128 0
 2619 0613 00       		.byte	0
 2620 0614 00       		.byte	0
 2621 0615 19       		.uleb128 0x19
 2622 0616 44050000 		.4byte	.LASF79
 2623 061a 01       		.byte	0x1
 2624 061b BD05     		.2byte	0x5bd
 2625 061d A7000000 		.4byte	0xa7
 2626 0621 00000000 		.4byte	.LFB22
 2627 0625 54000000 		.4byte	.LFE22-.LFB22
 2628 0629 01       		.uleb128 0x1
 2629 062a 9C       		.byte	0x9c
 2630 062b 81060000 		.4byte	0x681
 2631 062f 0C       		.uleb128 0xc
 2632 0630 21050000 		.4byte	.LASF40
 2633 0634 01       		.byte	0x1
 2634 0635 BD05     		.2byte	0x5bd
 2635 0637 83000000 		.4byte	0x83
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 87


 2636 063b 8E040000 		.4byte	.LLST30
 2637 063f 0C       		.uleb128 0xc
 2638 0640 CB050000 		.4byte	.LASF75
 2639 0644 01       		.byte	0x1
 2640 0645 BD05     		.2byte	0x5bd
 2641 0647 8F000000 		.4byte	0x8f
 2642 064b C8040000 		.4byte	.LLST31
 2643 064f 0D       		.uleb128 0xd
 2644 0650 50040000 		.4byte	.LASF80
 2645 0654 01       		.byte	0x1
 2646 0655 BF05     		.2byte	0x5bf
 2647 0657 A7000000 		.4byte	0xa7
 2648 065b FF040000 		.4byte	.LLST32
 2649 065f 0D       		.uleb128 0xd
 2650 0660 9B020000 		.4byte	.LASF78
 2651 0664 01       		.byte	0x1
 2652 0665 C005     		.2byte	0x5c0
 2653 0667 83000000 		.4byte	0x83
 2654 066b 3D050000 		.4byte	.LLST33
 2655 066f 13       		.uleb128 0x13
 2656 0670 1E000000 		.4byte	.LVL100
 2657 0674 87050000 		.4byte	0x587
 2658 0678 12       		.uleb128 0x12
 2659 0679 01       		.uleb128 0x1
 2660 067a 50       		.byte	0x50
 2661 067b 03       		.uleb128 0x3
 2662 067c F3       		.byte	0xf3
 2663 067d 01       		.uleb128 0x1
 2664 067e 50       		.byte	0x50
 2665 067f 00       		.byte	0
 2666 0680 00       		.byte	0
 2667 0681 19       		.uleb128 0x19
 2668 0682 4B020000 		.4byte	.LASF81
 2669 0686 01       		.byte	0x1
 2670 0687 F305     		.2byte	0x5f3
 2671 0689 8F000000 		.4byte	0x8f
 2672 068d 00000000 		.4byte	.LFB23
 2673 0691 68000000 		.4byte	.LFE23-.LFB23
 2674 0695 01       		.uleb128 0x1
 2675 0696 9C       		.byte	0x9c
 2676 0697 ED060000 		.4byte	0x6ed
 2677 069b 0C       		.uleb128 0xc
 2678 069c 21050000 		.4byte	.LASF40
 2679 06a0 01       		.byte	0x1
 2680 06a1 F305     		.2byte	0x5f3
 2681 06a3 83000000 		.4byte	0x83
 2682 06a7 5B050000 		.4byte	.LLST34
 2683 06ab 0C       		.uleb128 0xc
 2684 06ac CB050000 		.4byte	.LASF75
 2685 06b0 01       		.byte	0x1
 2686 06b1 F305     		.2byte	0x5f3
 2687 06b3 8F000000 		.4byte	0x8f
 2688 06b7 95050000 		.4byte	.LLST35
 2689 06bb 0D       		.uleb128 0xd
 2690 06bc 5D060000 		.4byte	.LASF82
 2691 06c0 01       		.byte	0x1
 2692 06c1 F505     		.2byte	0x5f5
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 88


 2693 06c3 8F000000 		.4byte	0x8f
 2694 06c7 D7050000 		.4byte	.LLST36
 2695 06cb 0D       		.uleb128 0xd
 2696 06cc 9B020000 		.4byte	.LASF78
 2697 06d0 01       		.byte	0x1
 2698 06d1 F605     		.2byte	0x5f6
 2699 06d3 83000000 		.4byte	0x83
 2700 06d7 0D060000 		.4byte	.LLST37
 2701 06db 13       		.uleb128 0x13
 2702 06dc 1E000000 		.4byte	.LVL111
 2703 06e0 87050000 		.4byte	0x587
 2704 06e4 12       		.uleb128 0x12
 2705 06e5 01       		.uleb128 0x1
 2706 06e6 50       		.byte	0x50
 2707 06e7 03       		.uleb128 0x3
 2708 06e8 F3       		.byte	0xf3
 2709 06e9 01       		.uleb128 0x1
 2710 06ea 50       		.byte	0x50
 2711 06eb 00       		.byte	0
 2712 06ec 00       		.byte	0
 2713 06ed 19       		.uleb128 0x19
 2714 06ee 9A060000 		.4byte	.LASF83
 2715 06f2 01       		.byte	0x1
 2716 06f3 2C06     		.2byte	0x62c
 2717 06f5 9B000000 		.4byte	0x9b
 2718 06f9 00000000 		.4byte	.LFB24
 2719 06fd 4C000000 		.4byte	.LFE24-.LFB24
 2720 0701 01       		.uleb128 0x1
 2721 0702 9C       		.byte	0x9c
 2722 0703 59070000 		.4byte	0x759
 2723 0707 0C       		.uleb128 0xc
 2724 0708 21050000 		.4byte	.LASF40
 2725 070c 01       		.byte	0x1
 2726 070d 2C06     		.2byte	0x62c
 2727 070f 83000000 		.4byte	0x83
 2728 0713 63060000 		.4byte	.LLST38
 2729 0717 0C       		.uleb128 0xc
 2730 0718 CB050000 		.4byte	.LASF75
 2731 071c 01       		.byte	0x1
 2732 071d 2C06     		.2byte	0x62c
 2733 071f 8F000000 		.4byte	0x8f
 2734 0723 9D060000 		.4byte	.LLST39
 2735 0727 0D       		.uleb128 0xd
 2736 0728 9E050000 		.4byte	.LASF84
 2737 072c 01       		.byte	0x1
 2738 072d 2E06     		.2byte	0x62e
 2739 072f C1000000 		.4byte	0xc1
 2740 0733 D4060000 		.4byte	.LLST40
 2741 0737 0D       		.uleb128 0xd
 2742 0738 9B020000 		.4byte	.LASF78
 2743 073c 01       		.byte	0x1
 2744 073d 2F06     		.2byte	0x62f
 2745 073f 83000000 		.4byte	0x83
 2746 0743 04070000 		.4byte	.LLST41
 2747 0747 13       		.uleb128 0x13
 2748 0748 1E000000 		.4byte	.LVL124
 2749 074c 87050000 		.4byte	0x587
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 89


 2750 0750 12       		.uleb128 0x12
 2751 0751 01       		.uleb128 0x1
 2752 0752 50       		.byte	0x50
 2753 0753 03       		.uleb128 0x3
 2754 0754 F3       		.byte	0xf3
 2755 0755 01       		.uleb128 0x1
 2756 0756 50       		.byte	0x50
 2757 0757 00       		.byte	0
 2758 0758 00       		.byte	0
 2759 0759 1A       		.uleb128 0x1a
 2760 075a 7E000000 		.4byte	.LASF85
 2761 075e 01       		.byte	0x1
 2762 075f DA07     		.2byte	0x7da
 2763 0761 00000000 		.4byte	.LFB25
 2764 0765 18010000 		.4byte	.LFE25-.LFB25
 2765 0769 01       		.uleb128 0x1
 2766 076a 9C       		.byte	0x9c
 2767 076b DB070000 		.4byte	0x7db
 2768 076f 0D       		.uleb128 0xd
 2769 0770 69040000 		.4byte	.LASF42
 2770 0774 01       		.byte	0x1
 2771 0775 DC07     		.2byte	0x7dc
 2772 0777 83000000 		.4byte	0x83
 2773 077b 5A070000 		.4byte	.LLST42
 2774 077f 0D       		.uleb128 0xd
 2775 0780 84010000 		.4byte	.LASF86
 2776 0784 01       		.byte	0x1
 2777 0785 DD07     		.2byte	0x7dd
 2778 0787 83000000 		.4byte	0x83
 2779 078b 90070000 		.4byte	.LLST43
 2780 078f 0D       		.uleb128 0xd
 2781 0790 19000000 		.4byte	.LASF87
 2782 0794 01       		.byte	0x1
 2783 0795 DE07     		.2byte	0x7de
 2784 0797 9B000000 		.4byte	0x9b
 2785 079b D2070000 		.4byte	.LLST44
 2786 079f 11       		.uleb128 0x11
 2787 07a0 CE000000 		.4byte	.LVL140
 2788 07a4 140A0000 		.4byte	0xa14
 2789 07a8 B7070000 		.4byte	0x7b7
 2790 07ac 12       		.uleb128 0x12
 2791 07ad 01       		.uleb128 0x1
 2792 07ae 50       		.byte	0x50
 2793 07af 01       		.uleb128 0x1
 2794 07b0 3F       		.byte	0x3f
 2795 07b1 12       		.uleb128 0x12
 2796 07b2 01       		.uleb128 0x1
 2797 07b3 51       		.byte	0x51
 2798 07b4 01       		.uleb128 0x1
 2799 07b5 33       		.byte	0x33
 2800 07b6 00       		.byte	0
 2801 07b7 11       		.uleb128 0x11
 2802 07b8 D6000000 		.4byte	.LVL141
 2803 07bc 1F0A0000 		.4byte	0xa1f
 2804 07c0 CA070000 		.4byte	0x7ca
 2805 07c4 12       		.uleb128 0x12
 2806 07c5 01       		.uleb128 0x1
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 90


 2807 07c6 50       		.byte	0x50
 2808 07c7 01       		.uleb128 0x1
 2809 07c8 3F       		.byte	0x3f
 2810 07c9 00       		.byte	0
 2811 07ca 13       		.uleb128 0x13
 2812 07cb EC000000 		.4byte	.LVL144
 2813 07cf 1F020000 		.4byte	0x21f
 2814 07d3 12       		.uleb128 0x12
 2815 07d4 01       		.uleb128 0x1
 2816 07d5 50       		.byte	0x50
 2817 07d6 02       		.uleb128 0x2
 2818 07d7 74       		.byte	0x74
 2819 07d8 00       		.sleb128 0
 2820 07d9 00       		.byte	0
 2821 07da 00       		.byte	0
 2822 07db 0F       		.uleb128 0xf
 2823 07dc 57000000 		.4byte	.LASF88
 2824 07e0 01       		.byte	0x1
 2825 07e1 4908     		.2byte	0x849
 2826 07e3 00000000 		.4byte	.LFB26
 2827 07e7 30000000 		.4byte	.LFE26-.LFB26
 2828 07eb 01       		.uleb128 0x1
 2829 07ec 9C       		.byte	0x9c
 2830 07ed 01080000 		.4byte	0x801
 2831 07f1 13       		.uleb128 0x13
 2832 07f2 24000000 		.4byte	.LVL146
 2833 07f6 2A0A0000 		.4byte	0xa2a
 2834 07fa 12       		.uleb128 0x12
 2835 07fb 01       		.uleb128 0x1
 2836 07fc 50       		.byte	0x50
 2837 07fd 01       		.uleb128 0x1
 2838 07fe 3A       		.byte	0x3a
 2839 07ff 00       		.byte	0
 2840 0800 00       		.byte	0
 2841 0801 0F       		.uleb128 0xf
 2842 0802 87060000 		.4byte	.LASF89
 2843 0806 01       		.byte	0x1
 2844 0807 3802     		.2byte	0x238
 2845 0809 00000000 		.4byte	.LFB1
 2846 080d 24000000 		.4byte	.LFE1-.LFB1
 2847 0811 01       		.uleb128 0x1
 2848 0812 9C       		.byte	0x9c
 2849 0813 2A080000 		.4byte	0x82a
 2850 0817 10       		.uleb128 0x10
 2851 0818 0E000000 		.4byte	.LVL147
 2852 081c 59070000 		.4byte	0x759
 2853 0820 10       		.uleb128 0x10
 2854 0821 1C000000 		.4byte	.LVL148
 2855 0825 DB070000 		.4byte	0x7db
 2856 0829 00       		.byte	0
 2857 082a 0F       		.uleb128 0xf
 2858 082b 20000000 		.4byte	.LASF90
 2859 082f 01       		.byte	0x1
 2860 0830 5802     		.2byte	0x258
 2861 0832 00000000 		.4byte	.LFB2
 2862 0836 10000000 		.4byte	.LFE2-.LFB2
 2863 083a 01       		.uleb128 0x1
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 91


 2864 083b 9C       		.byte	0x9c
 2865 083c 6A080000 		.4byte	0x86a
 2866 0840 0C       		.uleb128 0xc
 2867 0841 16030000 		.4byte	.LASF91
 2868 0845 01       		.byte	0x1
 2869 0846 5802     		.2byte	0x258
 2870 0848 E5000000 		.4byte	0xe5
 2871 084c E5070000 		.4byte	.LLST45
 2872 0850 10       		.uleb128 0x10
 2873 0851 08000000 		.4byte	.LVL150
 2874 0855 01080000 		.4byte	0x801
 2875 0859 13       		.uleb128 0x13
 2876 085a 0E000000 		.4byte	.LVL151
 2877 085e 350A0000 		.4byte	0xa35
 2878 0862 12       		.uleb128 0x12
 2879 0863 01       		.uleb128 0x1
 2880 0864 50       		.byte	0x50
 2881 0865 02       		.uleb128 0x2
 2882 0866 74       		.byte	0x74
 2883 0867 00       		.sleb128 0
 2884 0868 00       		.byte	0
 2885 0869 00       		.byte	0
 2886 086a 0F       		.uleb128 0xf
 2887 086b 6D020000 		.4byte	.LASF92
 2888 086f 01       		.byte	0x1
 2889 0870 0B03     		.2byte	0x30b
 2890 0872 00000000 		.4byte	.LFB5
 2891 0876 70000000 		.4byte	.LFE5-.LFB5
 2892 087a 01       		.uleb128 0x1
 2893 087b 9C       		.byte	0x9c
 2894 087c D9080000 		.4byte	0x8d9
 2895 0880 0C       		.uleb128 0xc
 2896 0881 3D050000 		.4byte	.LASF41
 2897 0885 01       		.byte	0x1
 2898 0886 0B03     		.2byte	0x30b
 2899 0888 83000000 		.4byte	0x83
 2900 088c 11080000 		.4byte	.LLST46
 2901 0890 0C       		.uleb128 0xc
 2902 0891 AC050000 		.4byte	.LASF93
 2903 0895 01       		.byte	0x1
 2904 0896 0B03     		.2byte	0x30b
 2905 0898 83000000 		.4byte	0x83
 2906 089c 3D080000 		.4byte	.LLST47
 2907 08a0 10       		.uleb128 0x10
 2908 08a1 0E000000 		.4byte	.LVL154
 2909 08a5 0D020000 		.4byte	0x20d
 2910 08a9 10       		.uleb128 0x10
 2911 08aa 1E000000 		.4byte	.LVL155
 2912 08ae 59070000 		.4byte	0x759
 2913 08b2 11       		.uleb128 0x11
 2914 08b3 38000000 		.4byte	.LVL156
 2915 08b7 1F020000 		.4byte	0x21f
 2916 08bb C6080000 		.4byte	0x8c6
 2917 08bf 12       		.uleb128 0x12
 2918 08c0 01       		.uleb128 0x1
 2919 08c1 50       		.byte	0x50
 2920 08c2 02       		.uleb128 0x2
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 92


 2921 08c3 75       		.byte	0x75
 2922 08c4 00       		.sleb128 0
 2923 08c5 00       		.byte	0
 2924 08c6 10       		.uleb128 0x10
 2925 08c7 56000000 		.4byte	.LVL157
 2926 08cb 01080000 		.4byte	0x801
 2927 08cf 10       		.uleb128 0x10
 2928 08d0 5A000000 		.4byte	.LVL158
 2929 08d4 9D020000 		.4byte	0x29d
 2930 08d8 00       		.byte	0
 2931 08d9 0F       		.uleb128 0xf
 2932 08da 2E000000 		.4byte	.LASF94
 2933 08de 01       		.byte	0x1
 2934 08df 6E03     		.2byte	0x36e
 2935 08e1 00000000 		.4byte	.LFB7
 2936 08e5 44000000 		.4byte	.LFE7-.LFB7
 2937 08e9 01       		.uleb128 0x1
 2938 08ea 9C       		.byte	0x9c
 2939 08eb 02090000 		.4byte	0x902
 2940 08ef 10       		.uleb128 0x10
 2941 08f0 2C000000 		.4byte	.LVL161
 2942 08f4 0D020000 		.4byte	0x20d
 2943 08f8 10       		.uleb128 0x10
 2944 08f9 30000000 		.4byte	.LVL162
 2945 08fd 01080000 		.4byte	0x801
 2946 0901 00       		.byte	0
 2947 0902 1B       		.uleb128 0x1b
 2948 0903 6F040000 		.4byte	.LASF95
 2949 0907 01       		.byte	0x1
 2950 0908 41       		.byte	0x41
 2951 0909 83000000 		.4byte	0x83
 2952 090d 05       		.uleb128 0x5
 2953 090e 03       		.byte	0x3
 2954 090f 00000000 		.4byte	ADC_1_currentConfig
 2955 0913 1C       		.uleb128 0x1c
 2956 0914 23090000 		.4byte	0x923
 2957 0918 23090000 		.4byte	0x923
 2958 091c 1D       		.uleb128 0x1d
 2959 091d FF000000 		.4byte	0xff
 2960 0921 01       		.byte	0x1
 2961 0922 00       		.byte	0
 2962 0923 14       		.uleb128 0x14
 2963 0924 83000000 		.4byte	0x83
 2964 0928 1B       		.uleb128 0x1b
 2965 0929 B3010000 		.4byte	.LASF96
 2966 092d 01       		.byte	0x1
 2967 092e 47       		.byte	0x47
 2968 092f 39090000 		.4byte	0x939
 2969 0933 05       		.uleb128 0x5
 2970 0934 03       		.byte	0x3
 2971 0935 00000000 		.4byte	ADC_1_channelsConfig
 2972 0939 14       		.uleb128 0x14
 2973 093a 13090000 		.4byte	0x913
 2974 093e 1E       		.uleb128 0x1e
 2975 093f 15010000 		.4byte	.LASF97
 2976 0943 01       		.byte	0x1
 2977 0944 3B       		.byte	0x3b
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 93


 2978 0945 6B000000 		.4byte	0x6b
 2979 0949 05       		.uleb128 0x5
 2980 094a 03       		.byte	0x3
 2981 094b 00000000 		.4byte	ADC_1_initVar
 2982 094f 1E       		.uleb128 0x1e
 2983 0950 D5050000 		.4byte	.LASF98
 2984 0954 01       		.byte	0x1
 2985 0955 3D       		.byte	0x3d
 2986 0956 6B000000 		.4byte	0x6b
 2987 095a 05       		.uleb128 0x5
 2988 095b 03       		.byte	0x3
 2989 095c 00000000 		.4byte	ADC_1_selected
 2990 0960 1C       		.uleb128 0x1c
 2991 0961 70090000 		.4byte	0x970
 2992 0965 70090000 		.4byte	0x970
 2993 0969 1D       		.uleb128 0x1d
 2994 096a FF000000 		.4byte	0xff
 2995 096e 01       		.byte	0x1
 2996 096f 00       		.byte	0
 2997 0970 05       		.uleb128 0x5
 2998 0971 8F000000 		.4byte	0x8f
 2999 0975 1E       		.uleb128 0x1e
 3000 0976 CC030000 		.4byte	.LASF99
 3001 097a 01       		.byte	0x1
 3002 097b 3E       		.byte	0x3e
 3003 097c 86090000 		.4byte	0x986
 3004 0980 05       		.uleb128 0x5
 3005 0981 03       		.byte	0x3
 3006 0982 00000000 		.4byte	ADC_1_offset
 3007 0986 05       		.uleb128 0x5
 3008 0987 60090000 		.4byte	0x960
 3009 098b 1C       		.uleb128 0x1c
 3010 098c 9B090000 		.4byte	0x99b
 3011 0990 9B090000 		.4byte	0x99b
 3012 0994 1D       		.uleb128 0x1d
 3013 0995 FF000000 		.4byte	0xff
 3014 0999 01       		.byte	0x1
 3015 099a 00       		.byte	0
 3016 099b 05       		.uleb128 0x5
 3017 099c 9B000000 		.4byte	0x9b
 3018 09a0 1E       		.uleb128 0x1e
 3019 09a1 30040000 		.4byte	.LASF100
 3020 09a5 01       		.byte	0x1
 3021 09a6 3F       		.byte	0x3f
 3022 09a7 B1090000 		.4byte	0x9b1
 3023 09ab 05       		.uleb128 0x5
 3024 09ac 03       		.byte	0x3
 3025 09ad 00000000 		.4byte	ADC_1_countsPer10Volt
 3026 09b1 05       		.uleb128 0x5
 3027 09b2 8B090000 		.4byte	0x98b
 3028 09b6 1C       		.uleb128 0x1c
 3029 09b7 98020000 		.4byte	0x298
 3030 09bb C6090000 		.4byte	0x9c6
 3031 09bf 1D       		.uleb128 0x1d
 3032 09c0 FF000000 		.4byte	0xff
 3033 09c4 00       		.byte	0
 3034 09c5 00       		.byte	0
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 94


 3035 09c6 1F       		.uleb128 0x1f
 3036 09c7 2F020000 		.4byte	.LASF101
 3037 09cb 03       		.byte	0x3
 3038 09cc DE01     		.2byte	0x1de
 3039 09ce D2090000 		.4byte	0x9d2
 3040 09d2 14       		.uleb128 0x14
 3041 09d3 B6090000 		.4byte	0x9b6
 3042 09d7 1F       		.uleb128 0x1f
 3043 09d8 44030000 		.4byte	.LASF102
 3044 09dc 03       		.byte	0x3
 3045 09dd DF01     		.2byte	0x1df
 3046 09df E3090000 		.4byte	0x9e3
 3047 09e3 14       		.uleb128 0x14
 3048 09e4 13090000 		.4byte	0x913
 3049 09e8 20       		.uleb128 0x20
 3050 09e9 C8010000 		.4byte	.LASF103
 3051 09ed C8010000 		.4byte	.LASF103
 3052 09f1 04       		.byte	0x4
 3053 09f2 27       		.byte	0x27
 3054 09f3 20       		.uleb128 0x20
 3055 09f4 59050000 		.4byte	.LASF104
 3056 09f8 59050000 		.4byte	.LASF104
 3057 09fc 04       		.byte	0x4
 3058 09fd 29       		.byte	0x29
 3059 09fe 20       		.uleb128 0x20
 3060 09ff E7020000 		.4byte	.LASF105
 3061 0a03 E7020000 		.4byte	.LASF105
 3062 0a07 04       		.byte	0x4
 3063 0a08 1D       		.byte	0x1d
 3064 0a09 20       		.uleb128 0x20
 3065 0a0a 93060000 		.4byte	.LASF106
 3066 0a0e 93060000 		.4byte	.LASF106
 3067 0a12 05       		.byte	0x5
 3068 0a13 E7       		.byte	0xe7
 3069 0a14 20       		.uleb128 0x20
 3070 0a15 68030000 		.4byte	.LASF107
 3071 0a19 68030000 		.4byte	.LASF107
 3072 0a1d 05       		.byte	0x5
 3073 0a1e C0       		.byte	0xc0
 3074 0a1f 20       		.uleb128 0x20
 3075 0a20 37010000 		.4byte	.LASF108
 3076 0a24 37010000 		.4byte	.LASF108
 3077 0a28 05       		.byte	0x5
 3078 0a29 BD       		.byte	0xbd
 3079 0a2a 20       		.uleb128 0x20
 3080 0a2b DC000000 		.4byte	.LASF109
 3081 0a2f DC000000 		.4byte	.LASF109
 3082 0a33 05       		.byte	0x5
 3083 0a34 DA       		.byte	0xda
 3084 0a35 20       		.uleb128 0x20
 3085 0a36 B0030000 		.4byte	.LASF110
 3086 0a3a B0030000 		.4byte	.LASF110
 3087 0a3e 06       		.byte	0x6
 3088 0a3f 18       		.byte	0x18
 3089 0a40 00       		.byte	0
 3090              		.section	.debug_abbrev,"",%progbits
 3091              	.Ldebug_abbrev0:
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 95


 3092 0000 01       		.uleb128 0x1
 3093 0001 11       		.uleb128 0x11
 3094 0002 01       		.byte	0x1
 3095 0003 25       		.uleb128 0x25
 3096 0004 0E       		.uleb128 0xe
 3097 0005 13       		.uleb128 0x13
 3098 0006 0B       		.uleb128 0xb
 3099 0007 03       		.uleb128 0x3
 3100 0008 0E       		.uleb128 0xe
 3101 0009 1B       		.uleb128 0x1b
 3102 000a 0E       		.uleb128 0xe
 3103 000b 55       		.uleb128 0x55
 3104 000c 17       		.uleb128 0x17
 3105 000d 11       		.uleb128 0x11
 3106 000e 01       		.uleb128 0x1
 3107 000f 10       		.uleb128 0x10
 3108 0010 17       		.uleb128 0x17
 3109 0011 00       		.byte	0
 3110 0012 00       		.byte	0
 3111 0013 02       		.uleb128 0x2
 3112 0014 24       		.uleb128 0x24
 3113 0015 00       		.byte	0
 3114 0016 0B       		.uleb128 0xb
 3115 0017 0B       		.uleb128 0xb
 3116 0018 3E       		.uleb128 0x3e
 3117 0019 0B       		.uleb128 0xb
 3118 001a 03       		.uleb128 0x3
 3119 001b 0E       		.uleb128 0xe
 3120 001c 00       		.byte	0
 3121 001d 00       		.byte	0
 3122 001e 03       		.uleb128 0x3
 3123 001f 24       		.uleb128 0x24
 3124 0020 00       		.byte	0
 3125 0021 0B       		.uleb128 0xb
 3126 0022 0B       		.uleb128 0xb
 3127 0023 3E       		.uleb128 0x3e
 3128 0024 0B       		.uleb128 0xb
 3129 0025 03       		.uleb128 0x3
 3130 0026 08       		.uleb128 0x8
 3131 0027 00       		.byte	0
 3132 0028 00       		.byte	0
 3133 0029 04       		.uleb128 0x4
 3134 002a 16       		.uleb128 0x16
 3135 002b 00       		.byte	0
 3136 002c 03       		.uleb128 0x3
 3137 002d 0E       		.uleb128 0xe
 3138 002e 3A       		.uleb128 0x3a
 3139 002f 0B       		.uleb128 0xb
 3140 0030 3B       		.uleb128 0x3b
 3141 0031 05       		.uleb128 0x5
 3142 0032 49       		.uleb128 0x49
 3143 0033 13       		.uleb128 0x13
 3144 0034 00       		.byte	0
 3145 0035 00       		.byte	0
 3146 0036 05       		.uleb128 0x5
 3147 0037 35       		.uleb128 0x35
 3148 0038 00       		.byte	0
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 96


 3149 0039 49       		.uleb128 0x49
 3150 003a 13       		.uleb128 0x13
 3151 003b 00       		.byte	0
 3152 003c 00       		.byte	0
 3153 003d 06       		.uleb128 0x6
 3154 003e 0F       		.uleb128 0xf
 3155 003f 00       		.byte	0
 3156 0040 0B       		.uleb128 0xb
 3157 0041 0B       		.uleb128 0xb
 3158 0042 49       		.uleb128 0x49
 3159 0043 13       		.uleb128 0x13
 3160 0044 00       		.byte	0
 3161 0045 00       		.byte	0
 3162 0046 07       		.uleb128 0x7
 3163 0047 15       		.uleb128 0x15
 3164 0048 00       		.byte	0
 3165 0049 27       		.uleb128 0x27
 3166 004a 19       		.uleb128 0x19
 3167 004b 00       		.byte	0
 3168 004c 00       		.byte	0
 3169 004d 08       		.uleb128 0x8
 3170 004e 13       		.uleb128 0x13
 3171 004f 01       		.byte	0x1
 3172 0050 0B       		.uleb128 0xb
 3173 0051 0B       		.uleb128 0xb
 3174 0052 3A       		.uleb128 0x3a
 3175 0053 0B       		.uleb128 0xb
 3176 0054 3B       		.uleb128 0x3b
 3177 0055 0B       		.uleb128 0xb
 3178 0056 01       		.uleb128 0x1
 3179 0057 13       		.uleb128 0x13
 3180 0058 00       		.byte	0
 3181 0059 00       		.byte	0
 3182 005a 09       		.uleb128 0x9
 3183 005b 0D       		.uleb128 0xd
 3184 005c 00       		.byte	0
 3185 005d 03       		.uleb128 0x3
 3186 005e 0E       		.uleb128 0xe
 3187 005f 3A       		.uleb128 0x3a
 3188 0060 0B       		.uleb128 0xb
 3189 0061 3B       		.uleb128 0x3b
 3190 0062 0B       		.uleb128 0xb
 3191 0063 49       		.uleb128 0x49
 3192 0064 13       		.uleb128 0x13
 3193 0065 38       		.uleb128 0x38
 3194 0066 0B       		.uleb128 0xb
 3195 0067 00       		.byte	0
 3196 0068 00       		.byte	0
 3197 0069 0A       		.uleb128 0xa
 3198 006a 16       		.uleb128 0x16
 3199 006b 00       		.byte	0
 3200 006c 03       		.uleb128 0x3
 3201 006d 0E       		.uleb128 0xe
 3202 006e 3A       		.uleb128 0x3a
 3203 006f 0B       		.uleb128 0xb
 3204 0070 3B       		.uleb128 0x3b
 3205 0071 0B       		.uleb128 0xb
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 97


 3206 0072 49       		.uleb128 0x49
 3207 0073 13       		.uleb128 0x13
 3208 0074 00       		.byte	0
 3209 0075 00       		.byte	0
 3210 0076 0B       		.uleb128 0xb
 3211 0077 2E       		.uleb128 0x2e
 3212 0078 01       		.byte	0x1
 3213 0079 03       		.uleb128 0x3
 3214 007a 0E       		.uleb128 0xe
 3215 007b 3A       		.uleb128 0x3a
 3216 007c 0B       		.uleb128 0xb
 3217 007d 3B       		.uleb128 0x3b
 3218 007e 05       		.uleb128 0x5
 3219 007f 27       		.uleb128 0x27
 3220 0080 19       		.uleb128 0x19
 3221 0081 49       		.uleb128 0x49
 3222 0082 13       		.uleb128 0x13
 3223 0083 11       		.uleb128 0x11
 3224 0084 01       		.uleb128 0x1
 3225 0085 12       		.uleb128 0x12
 3226 0086 06       		.uleb128 0x6
 3227 0087 40       		.uleb128 0x40
 3228 0088 18       		.uleb128 0x18
 3229 0089 9742     		.uleb128 0x2117
 3230 008b 19       		.uleb128 0x19
 3231 008c 01       		.uleb128 0x1
 3232 008d 13       		.uleb128 0x13
 3233 008e 00       		.byte	0
 3234 008f 00       		.byte	0
 3235 0090 0C       		.uleb128 0xc
 3236 0091 05       		.uleb128 0x5
 3237 0092 00       		.byte	0
 3238 0093 03       		.uleb128 0x3
 3239 0094 0E       		.uleb128 0xe
 3240 0095 3A       		.uleb128 0x3a
 3241 0096 0B       		.uleb128 0xb
 3242 0097 3B       		.uleb128 0x3b
 3243 0098 05       		.uleb128 0x5
 3244 0099 49       		.uleb128 0x49
 3245 009a 13       		.uleb128 0x13
 3246 009b 02       		.uleb128 0x2
 3247 009c 17       		.uleb128 0x17
 3248 009d 00       		.byte	0
 3249 009e 00       		.byte	0
 3250 009f 0D       		.uleb128 0xd
 3251 00a0 34       		.uleb128 0x34
 3252 00a1 00       		.byte	0
 3253 00a2 03       		.uleb128 0x3
 3254 00a3 0E       		.uleb128 0xe
 3255 00a4 3A       		.uleb128 0x3a
 3256 00a5 0B       		.uleb128 0xb
 3257 00a6 3B       		.uleb128 0x3b
 3258 00a7 05       		.uleb128 0x5
 3259 00a8 49       		.uleb128 0x49
 3260 00a9 13       		.uleb128 0x13
 3261 00aa 02       		.uleb128 0x2
 3262 00ab 17       		.uleb128 0x17
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 98


 3263 00ac 00       		.byte	0
 3264 00ad 00       		.byte	0
 3265 00ae 0E       		.uleb128 0xe
 3266 00af 2E       		.uleb128 0x2e
 3267 00b0 00       		.byte	0
 3268 00b1 3F       		.uleb128 0x3f
 3269 00b2 19       		.uleb128 0x19
 3270 00b3 03       		.uleb128 0x3
 3271 00b4 0E       		.uleb128 0xe
 3272 00b5 3A       		.uleb128 0x3a
 3273 00b6 0B       		.uleb128 0xb
 3274 00b7 3B       		.uleb128 0x3b
 3275 00b8 05       		.uleb128 0x5
 3276 00b9 27       		.uleb128 0x27
 3277 00ba 19       		.uleb128 0x19
 3278 00bb 11       		.uleb128 0x11
 3279 00bc 01       		.uleb128 0x1
 3280 00bd 12       		.uleb128 0x12
 3281 00be 06       		.uleb128 0x6
 3282 00bf 40       		.uleb128 0x40
 3283 00c0 18       		.uleb128 0x18
 3284 00c1 9742     		.uleb128 0x2117
 3285 00c3 19       		.uleb128 0x19
 3286 00c4 00       		.byte	0
 3287 00c5 00       		.byte	0
 3288 00c6 0F       		.uleb128 0xf
 3289 00c7 2E       		.uleb128 0x2e
 3290 00c8 01       		.byte	0x1
 3291 00c9 3F       		.uleb128 0x3f
 3292 00ca 19       		.uleb128 0x19
 3293 00cb 03       		.uleb128 0x3
 3294 00cc 0E       		.uleb128 0xe
 3295 00cd 3A       		.uleb128 0x3a
 3296 00ce 0B       		.uleb128 0xb
 3297 00cf 3B       		.uleb128 0x3b
 3298 00d0 05       		.uleb128 0x5
 3299 00d1 27       		.uleb128 0x27
 3300 00d2 19       		.uleb128 0x19
 3301 00d3 11       		.uleb128 0x11
 3302 00d4 01       		.uleb128 0x1
 3303 00d5 12       		.uleb128 0x12
 3304 00d6 06       		.uleb128 0x6
 3305 00d7 40       		.uleb128 0x40
 3306 00d8 18       		.uleb128 0x18
 3307 00d9 9742     		.uleb128 0x2117
 3308 00db 19       		.uleb128 0x19
 3309 00dc 01       		.uleb128 0x1
 3310 00dd 13       		.uleb128 0x13
 3311 00de 00       		.byte	0
 3312 00df 00       		.byte	0
 3313 00e0 10       		.uleb128 0x10
 3314 00e1 898201   		.uleb128 0x4109
 3315 00e4 00       		.byte	0
 3316 00e5 11       		.uleb128 0x11
 3317 00e6 01       		.uleb128 0x1
 3318 00e7 31       		.uleb128 0x31
 3319 00e8 13       		.uleb128 0x13
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 99


 3320 00e9 00       		.byte	0
 3321 00ea 00       		.byte	0
 3322 00eb 11       		.uleb128 0x11
 3323 00ec 898201   		.uleb128 0x4109
 3324 00ef 01       		.byte	0x1
 3325 00f0 11       		.uleb128 0x11
 3326 00f1 01       		.uleb128 0x1
 3327 00f2 31       		.uleb128 0x31
 3328 00f3 13       		.uleb128 0x13
 3329 00f4 01       		.uleb128 0x1
 3330 00f5 13       		.uleb128 0x13
 3331 00f6 00       		.byte	0
 3332 00f7 00       		.byte	0
 3333 00f8 12       		.uleb128 0x12
 3334 00f9 8A8201   		.uleb128 0x410a
 3335 00fc 00       		.byte	0
 3336 00fd 02       		.uleb128 0x2
 3337 00fe 18       		.uleb128 0x18
 3338 00ff 9142     		.uleb128 0x2111
 3339 0101 18       		.uleb128 0x18
 3340 0102 00       		.byte	0
 3341 0103 00       		.byte	0
 3342 0104 13       		.uleb128 0x13
 3343 0105 898201   		.uleb128 0x4109
 3344 0108 01       		.byte	0x1
 3345 0109 11       		.uleb128 0x11
 3346 010a 01       		.uleb128 0x1
 3347 010b 31       		.uleb128 0x31
 3348 010c 13       		.uleb128 0x13
 3349 010d 00       		.byte	0
 3350 010e 00       		.byte	0
 3351 010f 14       		.uleb128 0x14
 3352 0110 26       		.uleb128 0x26
 3353 0111 00       		.byte	0
 3354 0112 49       		.uleb128 0x49
 3355 0113 13       		.uleb128 0x13
 3356 0114 00       		.byte	0
 3357 0115 00       		.byte	0
 3358 0116 15       		.uleb128 0x15
 3359 0117 05       		.uleb128 0x5
 3360 0118 00       		.byte	0
 3361 0119 03       		.uleb128 0x3
 3362 011a 0E       		.uleb128 0xe
 3363 011b 3A       		.uleb128 0x3a
 3364 011c 0B       		.uleb128 0xb
 3365 011d 3B       		.uleb128 0x3b
 3366 011e 05       		.uleb128 0x5
 3367 011f 49       		.uleb128 0x49
 3368 0120 13       		.uleb128 0x13
 3369 0121 02       		.uleb128 0x2
 3370 0122 18       		.uleb128 0x18
 3371 0123 00       		.byte	0
 3372 0124 00       		.byte	0
 3373 0125 16       		.uleb128 0x16
 3374 0126 34       		.uleb128 0x34
 3375 0127 00       		.byte	0
 3376 0128 03       		.uleb128 0x3
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 100


 3377 0129 0E       		.uleb128 0xe
 3378 012a 3A       		.uleb128 0x3a
 3379 012b 0B       		.uleb128 0xb
 3380 012c 3B       		.uleb128 0x3b
 3381 012d 05       		.uleb128 0x5
 3382 012e 49       		.uleb128 0x49
 3383 012f 13       		.uleb128 0x13
 3384 0130 02       		.uleb128 0x2
 3385 0131 18       		.uleb128 0x18
 3386 0132 00       		.byte	0
 3387 0133 00       		.byte	0
 3388 0134 17       		.uleb128 0x17
 3389 0135 2E       		.uleb128 0x2e
 3390 0136 01       		.byte	0x1
 3391 0137 3F       		.uleb128 0x3f
 3392 0138 19       		.uleb128 0x19
 3393 0139 03       		.uleb128 0x3
 3394 013a 0E       		.uleb128 0xe
 3395 013b 3A       		.uleb128 0x3a
 3396 013c 0B       		.uleb128 0xb
 3397 013d 3B       		.uleb128 0x3b
 3398 013e 05       		.uleb128 0x5
 3399 013f 27       		.uleb128 0x27
 3400 0140 19       		.uleb128 0x19
 3401 0141 49       		.uleb128 0x49
 3402 0142 13       		.uleb128 0x13
 3403 0143 11       		.uleb128 0x11
 3404 0144 01       		.uleb128 0x1
 3405 0145 12       		.uleb128 0x12
 3406 0146 06       		.uleb128 0x6
 3407 0147 40       		.uleb128 0x40
 3408 0148 18       		.uleb128 0x18
 3409 0149 9742     		.uleb128 0x2117
 3410 014b 19       		.uleb128 0x19
 3411 014c 01       		.uleb128 0x1
 3412 014d 13       		.uleb128 0x13
 3413 014e 00       		.byte	0
 3414 014f 00       		.byte	0
 3415 0150 18       		.uleb128 0x18
 3416 0151 34       		.uleb128 0x34
 3417 0152 00       		.byte	0
 3418 0153 03       		.uleb128 0x3
 3419 0154 08       		.uleb128 0x8
 3420 0155 3A       		.uleb128 0x3a
 3421 0156 0B       		.uleb128 0xb
 3422 0157 3B       		.uleb128 0x3b
 3423 0158 05       		.uleb128 0x5
 3424 0159 49       		.uleb128 0x49
 3425 015a 13       		.uleb128 0x13
 3426 015b 02       		.uleb128 0x2
 3427 015c 17       		.uleb128 0x17
 3428 015d 00       		.byte	0
 3429 015e 00       		.byte	0
 3430 015f 19       		.uleb128 0x19
 3431 0160 2E       		.uleb128 0x2e
 3432 0161 01       		.byte	0x1
 3433 0162 3F       		.uleb128 0x3f
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 101


 3434 0163 19       		.uleb128 0x19
 3435 0164 03       		.uleb128 0x3
 3436 0165 0E       		.uleb128 0xe
 3437 0166 3A       		.uleb128 0x3a
 3438 0167 0B       		.uleb128 0xb
 3439 0168 3B       		.uleb128 0x3b
 3440 0169 05       		.uleb128 0x5
 3441 016a 27       		.uleb128 0x27
 3442 016b 19       		.uleb128 0x19
 3443 016c 49       		.uleb128 0x49
 3444 016d 13       		.uleb128 0x13
 3445 016e 11       		.uleb128 0x11
 3446 016f 01       		.uleb128 0x1
 3447 0170 12       		.uleb128 0x12
 3448 0171 06       		.uleb128 0x6
 3449 0172 40       		.uleb128 0x40
 3450 0173 18       		.uleb128 0x18
 3451 0174 9642     		.uleb128 0x2116
 3452 0176 19       		.uleb128 0x19
 3453 0177 01       		.uleb128 0x1
 3454 0178 13       		.uleb128 0x13
 3455 0179 00       		.byte	0
 3456 017a 00       		.byte	0
 3457 017b 1A       		.uleb128 0x1a
 3458 017c 2E       		.uleb128 0x2e
 3459 017d 01       		.byte	0x1
 3460 017e 3F       		.uleb128 0x3f
 3461 017f 19       		.uleb128 0x19
 3462 0180 03       		.uleb128 0x3
 3463 0181 0E       		.uleb128 0xe
 3464 0182 3A       		.uleb128 0x3a
 3465 0183 0B       		.uleb128 0xb
 3466 0184 3B       		.uleb128 0x3b
 3467 0185 05       		.uleb128 0x5
 3468 0186 27       		.uleb128 0x27
 3469 0187 19       		.uleb128 0x19
 3470 0188 11       		.uleb128 0x11
 3471 0189 01       		.uleb128 0x1
 3472 018a 12       		.uleb128 0x12
 3473 018b 06       		.uleb128 0x6
 3474 018c 40       		.uleb128 0x40
 3475 018d 18       		.uleb128 0x18
 3476 018e 9642     		.uleb128 0x2116
 3477 0190 19       		.uleb128 0x19
 3478 0191 01       		.uleb128 0x1
 3479 0192 13       		.uleb128 0x13
 3480 0193 00       		.byte	0
 3481 0194 00       		.byte	0
 3482 0195 1B       		.uleb128 0x1b
 3483 0196 34       		.uleb128 0x34
 3484 0197 00       		.byte	0
 3485 0198 03       		.uleb128 0x3
 3486 0199 0E       		.uleb128 0xe
 3487 019a 3A       		.uleb128 0x3a
 3488 019b 0B       		.uleb128 0xb
 3489 019c 3B       		.uleb128 0x3b
 3490 019d 0B       		.uleb128 0xb
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 102


 3491 019e 49       		.uleb128 0x49
 3492 019f 13       		.uleb128 0x13
 3493 01a0 02       		.uleb128 0x2
 3494 01a1 18       		.uleb128 0x18
 3495 01a2 00       		.byte	0
 3496 01a3 00       		.byte	0
 3497 01a4 1C       		.uleb128 0x1c
 3498 01a5 01       		.uleb128 0x1
 3499 01a6 01       		.byte	0x1
 3500 01a7 49       		.uleb128 0x49
 3501 01a8 13       		.uleb128 0x13
 3502 01a9 01       		.uleb128 0x1
 3503 01aa 13       		.uleb128 0x13
 3504 01ab 00       		.byte	0
 3505 01ac 00       		.byte	0
 3506 01ad 1D       		.uleb128 0x1d
 3507 01ae 21       		.uleb128 0x21
 3508 01af 00       		.byte	0
 3509 01b0 49       		.uleb128 0x49
 3510 01b1 13       		.uleb128 0x13
 3511 01b2 2F       		.uleb128 0x2f
 3512 01b3 0B       		.uleb128 0xb
 3513 01b4 00       		.byte	0
 3514 01b5 00       		.byte	0
 3515 01b6 1E       		.uleb128 0x1e
 3516 01b7 34       		.uleb128 0x34
 3517 01b8 00       		.byte	0
 3518 01b9 03       		.uleb128 0x3
 3519 01ba 0E       		.uleb128 0xe
 3520 01bb 3A       		.uleb128 0x3a
 3521 01bc 0B       		.uleb128 0xb
 3522 01bd 3B       		.uleb128 0x3b
 3523 01be 0B       		.uleb128 0xb
 3524 01bf 49       		.uleb128 0x49
 3525 01c0 13       		.uleb128 0x13
 3526 01c1 3F       		.uleb128 0x3f
 3527 01c2 19       		.uleb128 0x19
 3528 01c3 02       		.uleb128 0x2
 3529 01c4 18       		.uleb128 0x18
 3530 01c5 00       		.byte	0
 3531 01c6 00       		.byte	0
 3532 01c7 1F       		.uleb128 0x1f
 3533 01c8 34       		.uleb128 0x34
 3534 01c9 00       		.byte	0
 3535 01ca 03       		.uleb128 0x3
 3536 01cb 0E       		.uleb128 0xe
 3537 01cc 3A       		.uleb128 0x3a
 3538 01cd 0B       		.uleb128 0xb
 3539 01ce 3B       		.uleb128 0x3b
 3540 01cf 05       		.uleb128 0x5
 3541 01d0 49       		.uleb128 0x49
 3542 01d1 13       		.uleb128 0x13
 3543 01d2 3F       		.uleb128 0x3f
 3544 01d3 19       		.uleb128 0x19
 3545 01d4 3C       		.uleb128 0x3c
 3546 01d5 19       		.uleb128 0x19
 3547 01d6 00       		.byte	0
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 103


 3548 01d7 00       		.byte	0
 3549 01d8 20       		.uleb128 0x20
 3550 01d9 2E       		.uleb128 0x2e
 3551 01da 00       		.byte	0
 3552 01db 3F       		.uleb128 0x3f
 3553 01dc 19       		.uleb128 0x19
 3554 01dd 3C       		.uleb128 0x3c
 3555 01de 19       		.uleb128 0x19
 3556 01df 6E       		.uleb128 0x6e
 3557 01e0 0E       		.uleb128 0xe
 3558 01e1 03       		.uleb128 0x3
 3559 01e2 0E       		.uleb128 0xe
 3560 01e3 3A       		.uleb128 0x3a
 3561 01e4 0B       		.uleb128 0xb
 3562 01e5 3B       		.uleb128 0x3b
 3563 01e6 0B       		.uleb128 0xb
 3564 01e7 00       		.byte	0
 3565 01e8 00       		.byte	0
 3566 01e9 00       		.byte	0
 3567              		.section	.debug_loc,"",%progbits
 3568              	.Ldebug_loc0:
 3569              	.LLST0:
 3570 0000 00000000 		.4byte	.LVL0
 3571 0004 02000000 		.4byte	.LVL1
 3572 0008 0100     		.2byte	0x1
 3573 000a 50       		.byte	0x50
 3574 000b 02000000 		.4byte	.LVL1
 3575 000f 58000000 		.4byte	.LFE12
 3576 0013 0400     		.2byte	0x4
 3577 0015 F3       		.byte	0xf3
 3578 0016 01       		.uleb128 0x1
 3579 0017 50       		.byte	0x50
 3580 0018 9F       		.byte	0x9f
 3581 0019 00000000 		.4byte	0
 3582 001d 00000000 		.4byte	0
 3583              	.LLST1:
 3584 0021 00000000 		.4byte	.LVL0
 3585 0025 46000000 		.4byte	.LVL6
 3586 0029 0200     		.2byte	0x2
 3587 002b 30       		.byte	0x30
 3588 002c 9F       		.byte	0x9f
 3589 002d 46000000 		.4byte	.LVL6
 3590 0031 58000000 		.4byte	.LFE12
 3591 0035 0100     		.2byte	0x1
 3592 0037 50       		.byte	0x50
 3593 0038 00000000 		.4byte	0
 3594 003c 00000000 		.4byte	0
 3595              	.LLST2:
 3596 0040 0A000000 		.4byte	.LVL2
 3597 0044 14000000 		.4byte	.LVL3
 3598 0048 0100     		.2byte	0x1
 3599 004a 52       		.byte	0x52
 3600 004b 28000000 		.4byte	.LVL4
 3601 004f 2C000000 		.4byte	.LVL5
 3602 0053 0100     		.2byte	0x1
 3603 0055 52       		.byte	0x52
 3604 0056 00000000 		.4byte	0
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 104


 3605 005a 00000000 		.4byte	0
 3606              	.LLST3:
 3607 005e 00000000 		.4byte	.LVL7
 3608 0062 07000000 		.4byte	.LVL8-1
 3609 0066 0100     		.2byte	0x1
 3610 0068 50       		.byte	0x50
 3611 0069 07000000 		.4byte	.LVL8-1
 3612 006d C0000000 		.4byte	.LVL24
 3613 0071 0100     		.2byte	0x1
 3614 0073 54       		.byte	0x54
 3615 0074 C0000000 		.4byte	.LVL24
 3616 0078 08010000 		.4byte	.LFE4
 3617 007c 0400     		.2byte	0x4
 3618 007e F3       		.byte	0xf3
 3619 007f 01       		.uleb128 0x1
 3620 0080 50       		.byte	0x50
 3621 0081 9F       		.byte	0x9f
 3622 0082 00000000 		.4byte	0
 3623 0086 00000000 		.4byte	0
 3624              	.LLST4:
 3625 008a 8E000000 		.4byte	.LVL17
 3626 008e 92000000 		.4byte	.LVL18
 3627 0092 0200     		.2byte	0x2
 3628 0094 30       		.byte	0x30
 3629 0095 9F       		.byte	0x9f
 3630 0096 92000000 		.4byte	.LVL18
 3631 009a 08010000 		.4byte	.LFE4
 3632 009e 0100     		.2byte	0x1
 3633 00a0 51       		.byte	0x51
 3634 00a1 00000000 		.4byte	0
 3635 00a5 00000000 		.4byte	0
 3636              	.LLST5:
 3637 00a9 68000000 		.4byte	.LVL11
 3638 00ad 80000000 		.4byte	.LVL14
 3639 00b1 0100     		.2byte	0x1
 3640 00b3 53       		.byte	0x53
 3641 00b4 80000000 		.4byte	.LVL14
 3642 00b8 84000000 		.4byte	.LVL15
 3643 00bc 0700     		.2byte	0x7
 3644 00be 73       		.byte	0x73
 3645 00bf 00       		.sleb128 0
 3646 00c0 40       		.byte	0x40
 3647 00c1 49       		.byte	0x49
 3648 00c2 24       		.byte	0x24
 3649 00c3 21       		.byte	0x21
 3650 00c4 9F       		.byte	0x9f
 3651 00c5 8A000000 		.4byte	.LVL16
 3652 00c9 92000000 		.4byte	.LVL18
 3653 00cd 0100     		.2byte	0x1
 3654 00cf 53       		.byte	0x53
 3655 00d0 A0000000 		.4byte	.LVL19
 3656 00d4 BC000000 		.4byte	.LVL23
 3657 00d8 0100     		.2byte	0x1
 3658 00da 53       		.byte	0x53
 3659 00db 00000000 		.4byte	0
 3660 00df 00000000 		.4byte	0
 3661              	.LLST6:
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 105


 3662 00e3 00000000 		.4byte	.LVL26
 3663 00e7 04000000 		.4byte	.LVL27
 3664 00eb 0100     		.2byte	0x1
 3665 00ed 50       		.byte	0x50
 3666 00ee 04000000 		.4byte	.LVL27
 3667 00f2 10000000 		.4byte	.LFE9
 3668 00f6 0400     		.2byte	0x4
 3669 00f8 F3       		.byte	0xf3
 3670 00f9 01       		.uleb128 0x1
 3671 00fa 50       		.byte	0x50
 3672 00fb 9F       		.byte	0x9f
 3673 00fc 00000000 		.4byte	0
 3674 0100 00000000 		.4byte	0
 3675              	.LLST7:
 3676 0104 00000000 		.4byte	.LVL28
 3677 0108 18000000 		.4byte	.LVL30
 3678 010c 0100     		.2byte	0x1
 3679 010e 50       		.byte	0x50
 3680 010f 18000000 		.4byte	.LVL30
 3681 0113 2C000000 		.4byte	.LFE10
 3682 0117 0100     		.2byte	0x1
 3683 0119 50       		.byte	0x50
 3684 011a 00000000 		.4byte	0
 3685 011e 00000000 		.4byte	0
 3686              	.LLST8:
 3687 0122 00000000 		.4byte	.LVL31
 3688 0126 0A000000 		.4byte	.LVL33
 3689 012a 0100     		.2byte	0x1
 3690 012c 50       		.byte	0x50
 3691 012d 0A000000 		.4byte	.LVL33
 3692 0131 2C000000 		.4byte	.LVL37
 3693 0135 0100     		.2byte	0x1
 3694 0137 51       		.byte	0x51
 3695 0138 2C000000 		.4byte	.LVL37
 3696 013c 2E000000 		.4byte	.LVL38
 3697 0140 0100     		.2byte	0x1
 3698 0142 50       		.byte	0x50
 3699 0143 2E000000 		.4byte	.LVL38
 3700 0147 38000000 		.4byte	.LFE11
 3701 014b 0100     		.2byte	0x1
 3702 014d 51       		.byte	0x51
 3703 014e 00000000 		.4byte	0
 3704 0152 00000000 		.4byte	0
 3705              	.LLST9:
 3706 0156 02000000 		.4byte	.LVL32
 3707 015a 0A000000 		.4byte	.LVL33
 3708 015e 0200     		.2byte	0x2
 3709 0160 30       		.byte	0x30
 3710 0161 9F       		.byte	0x9f
 3711 0162 12000000 		.4byte	.LVL34
 3712 0166 2C000000 		.4byte	.LVL37
 3713 016a 0100     		.2byte	0x1
 3714 016c 50       		.byte	0x50
 3715 016d 2C000000 		.4byte	.LVL37
 3716 0171 2E000000 		.4byte	.LVL38
 3717 0175 0200     		.2byte	0x2
 3718 0177 30       		.byte	0x30
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 106


 3719 0178 9F       		.byte	0x9f
 3720 0179 2E000000 		.4byte	.LVL38
 3721 017d 38000000 		.4byte	.LFE11
 3722 0181 0100     		.2byte	0x1
 3723 0183 50       		.byte	0x50
 3724 0184 00000000 		.4byte	0
 3725 0188 00000000 		.4byte	0
 3726              	.LLST10:
 3727 018c 02000000 		.4byte	.LVL32
 3728 0190 0A000000 		.4byte	.LVL33
 3729 0194 0600     		.2byte	0x6
 3730 0196 0C       		.byte	0xc
 3731 0197 FFFFFF03 		.4byte	0x3ffffff
 3732 019b 9F       		.byte	0x9f
 3733 019c 0A000000 		.4byte	.LVL33
 3734 01a0 26000000 		.4byte	.LVL36
 3735 01a4 0100     		.2byte	0x1
 3736 01a6 52       		.byte	0x52
 3737 01a7 2C000000 		.4byte	.LVL37
 3738 01ab 2E000000 		.4byte	.LVL38
 3739 01af 0600     		.2byte	0x6
 3740 01b1 0C       		.byte	0xc
 3741 01b2 FFFFFF03 		.4byte	0x3ffffff
 3742 01b6 9F       		.byte	0x9f
 3743 01b7 00000000 		.4byte	0
 3744 01bb 00000000 		.4byte	0
 3745              	.LLST11:
 3746 01bf 00000000 		.4byte	.LVL39
 3747 01c3 1A000000 		.4byte	.LVL40
 3748 01c7 0100     		.2byte	0x1
 3749 01c9 50       		.byte	0x50
 3750 01ca 1A000000 		.4byte	.LVL40
 3751 01ce 34000000 		.4byte	.LVL42
 3752 01d2 0100     		.2byte	0x1
 3753 01d4 54       		.byte	0x54
 3754 01d5 34000000 		.4byte	.LVL42
 3755 01d9 42000000 		.4byte	.LVL44
 3756 01dd 0400     		.2byte	0x4
 3757 01df F3       		.byte	0xf3
 3758 01e0 01       		.uleb128 0x1
 3759 01e1 50       		.byte	0x50
 3760 01e2 9F       		.byte	0x9f
 3761 01e3 42000000 		.4byte	.LVL44
 3762 01e7 44000000 		.4byte	.LVL45
 3763 01eb 0100     		.2byte	0x1
 3764 01ed 54       		.byte	0x54
 3765 01ee 44000000 		.4byte	.LVL45
 3766 01f2 54000000 		.4byte	.LFE13
 3767 01f6 0400     		.2byte	0x4
 3768 01f8 F3       		.byte	0xf3
 3769 01f9 01       		.uleb128 0x1
 3770 01fa 50       		.byte	0x50
 3771 01fb 9F       		.byte	0x9f
 3772 01fc 00000000 		.4byte	0
 3773 0200 00000000 		.4byte	0
 3774              	.LLST12:
 3775 0204 40000000 		.4byte	.LVL43
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 107


 3776 0208 42000000 		.4byte	.LVL44
 3777 020c 0100     		.2byte	0x1
 3778 020e 50       		.byte	0x50
 3779 020f 44000000 		.4byte	.LVL45
 3780 0213 46000000 		.4byte	.LVL46
 3781 0217 0100     		.2byte	0x1
 3782 0219 50       		.byte	0x50
 3783 021a 00000000 		.4byte	0
 3784 021e 00000000 		.4byte	0
 3785              	.LLST13:
 3786 0222 00000000 		.4byte	.LVL47
 3787 0226 1A000000 		.4byte	.LVL48
 3788 022a 0100     		.2byte	0x1
 3789 022c 50       		.byte	0x50
 3790 022d 1A000000 		.4byte	.LVL48
 3791 0231 54000000 		.4byte	.LVL59
 3792 0235 0100     		.2byte	0x1
 3793 0237 55       		.byte	0x55
 3794 0238 54000000 		.4byte	.LVL59
 3795 023c 64000000 		.4byte	.LFE14
 3796 0240 0400     		.2byte	0x4
 3797 0242 F3       		.byte	0xf3
 3798 0243 01       		.uleb128 0x1
 3799 0244 50       		.byte	0x50
 3800 0245 9F       		.byte	0x9f
 3801 0246 00000000 		.4byte	0
 3802 024a 00000000 		.4byte	0
 3803              	.LLST14:
 3804 024e 40000000 		.4byte	.LVL50
 3805 0252 42000000 		.4byte	.LVL51
 3806 0256 0100     		.2byte	0x1
 3807 0258 54       		.byte	0x54
 3808 0259 44000000 		.4byte	.LVL52
 3809 025d 54000000 		.4byte	.LVL58
 3810 0261 0100     		.2byte	0x1
 3811 0263 54       		.byte	0x54
 3812 0264 00000000 		.4byte	0
 3813 0268 00000000 		.4byte	0
 3814              	.LLST15:
 3815 026c 4E000000 		.4byte	.LVL54
 3816 0270 52000000 		.4byte	.LVL56
 3817 0274 0100     		.2byte	0x1
 3818 0276 54       		.byte	0x54
 3819 0277 00000000 		.4byte	0
 3820 027b 00000000 		.4byte	0
 3821              	.LLST16:
 3822 027f 50000000 		.4byte	.LVL55
 3823 0283 52000000 		.4byte	.LVL56
 3824 0287 0100     		.2byte	0x1
 3825 0289 50       		.byte	0x50
 3826 028a 54000000 		.4byte	.LVL57
 3827 028e 64000000 		.4byte	.LFE14
 3828 0292 0100     		.2byte	0x1
 3829 0294 50       		.byte	0x50
 3830 0295 00000000 		.4byte	0
 3831 0299 00000000 		.4byte	0
 3832              	.LLST17:
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 108


 3833 029d 00000000 		.4byte	.LVL60
 3834 02a1 0E000000 		.4byte	.LVL61
 3835 02a5 0100     		.2byte	0x1
 3836 02a7 50       		.byte	0x50
 3837 02a8 0E000000 		.4byte	.LVL61
 3838 02ac 1C000000 		.4byte	.LFE15
 3839 02b0 0400     		.2byte	0x4
 3840 02b2 F3       		.byte	0xf3
 3841 02b3 01       		.uleb128 0x1
 3842 02b4 50       		.byte	0x50
 3843 02b5 9F       		.byte	0x9f
 3844 02b6 00000000 		.4byte	0
 3845 02ba 00000000 		.4byte	0
 3846              	.LLST18:
 3847 02be 00000000 		.4byte	.LVL62
 3848 02c2 0E000000 		.4byte	.LVL63
 3849 02c6 0100     		.2byte	0x1
 3850 02c8 50       		.byte	0x50
 3851 02c9 0E000000 		.4byte	.LVL63
 3852 02cd 18000000 		.4byte	.LFE16
 3853 02d1 0400     		.2byte	0x4
 3854 02d3 F3       		.byte	0xf3
 3855 02d4 01       		.uleb128 0x1
 3856 02d5 50       		.byte	0x50
 3857 02d6 9F       		.byte	0x9f
 3858 02d7 00000000 		.4byte	0
 3859 02db 00000000 		.4byte	0
 3860              	.LLST19:
 3861 02df 00000000 		.4byte	.LVL64
 3862 02e3 18000000 		.4byte	.LVL66
 3863 02e7 0100     		.2byte	0x1
 3864 02e9 50       		.byte	0x50
 3865 02ea 18000000 		.4byte	.LVL66
 3866 02ee 2C000000 		.4byte	.LFE17
 3867 02f2 0100     		.2byte	0x1
 3868 02f4 50       		.byte	0x50
 3869 02f5 00000000 		.4byte	0
 3870 02f9 00000000 		.4byte	0
 3871              	.LLST20:
 3872 02fd 00000000 		.4byte	.LVL67
 3873 0301 18000000 		.4byte	.LVL69
 3874 0305 0100     		.2byte	0x1
 3875 0307 50       		.byte	0x50
 3876 0308 18000000 		.4byte	.LVL69
 3877 030c 2C000000 		.4byte	.LFE18
 3878 0310 0100     		.2byte	0x1
 3879 0312 50       		.byte	0x50
 3880 0313 00000000 		.4byte	0
 3881 0317 00000000 		.4byte	0
 3882              	.LLST21:
 3883 031b 00000000 		.4byte	.LVL70
 3884 031f 1C000000 		.4byte	.LVL71
 3885 0323 0100     		.2byte	0x1
 3886 0325 50       		.byte	0x50
 3887 0326 1C000000 		.4byte	.LVL71
 3888 032a 36000000 		.4byte	.LVL73
 3889 032e 0100     		.2byte	0x1
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 109


 3890 0330 55       		.byte	0x55
 3891 0331 36000000 		.4byte	.LVL73
 3892 0335 44000000 		.4byte	.LFE19
 3893 0339 0400     		.2byte	0x4
 3894 033b F3       		.byte	0xf3
 3895 033c 01       		.uleb128 0x1
 3896 033d 50       		.byte	0x50
 3897 033e 9F       		.byte	0x9f
 3898 033f 00000000 		.4byte	0
 3899 0343 00000000 		.4byte	0
 3900              	.LLST22:
 3901 0347 00000000 		.4byte	.LVL70
 3902 034b 1F000000 		.4byte	.LVL72-1
 3903 034f 0100     		.2byte	0x1
 3904 0351 51       		.byte	0x51
 3905 0352 1F000000 		.4byte	.LVL72-1
 3906 0356 44000000 		.4byte	.LFE19
 3907 035a 0400     		.2byte	0x4
 3908 035c F3       		.byte	0xf3
 3909 035d 01       		.uleb128 0x1
 3910 035e 51       		.byte	0x51
 3911 035f 9F       		.byte	0x9f
 3912 0360 00000000 		.4byte	0
 3913 0364 00000000 		.4byte	0
 3914              	.LLST23:
 3915 0368 00000000 		.4byte	.LVL74
 3916 036c 1C000000 		.4byte	.LVL75
 3917 0370 0100     		.2byte	0x1
 3918 0372 50       		.byte	0x50
 3919 0373 1C000000 		.4byte	.LVL75
 3920 0377 36000000 		.4byte	.LVL78
 3921 037b 0100     		.2byte	0x1
 3922 037d 55       		.byte	0x55
 3923 037e 36000000 		.4byte	.LVL78
 3924 0382 44000000 		.4byte	.LFE20
 3925 0386 0400     		.2byte	0x4
 3926 0388 F3       		.byte	0xf3
 3927 0389 01       		.uleb128 0x1
 3928 038a 50       		.byte	0x50
 3929 038b 9F       		.byte	0x9f
 3930 038c 00000000 		.4byte	0
 3931 0390 00000000 		.4byte	0
 3932              	.LLST24:
 3933 0394 00000000 		.4byte	.LVL74
 3934 0398 1F000000 		.4byte	.LVL76-1
 3935 039c 0100     		.2byte	0x1
 3936 039e 51       		.byte	0x51
 3937 039f 1F000000 		.4byte	.LVL76-1
 3938 03a3 36000000 		.4byte	.LVL77
 3939 03a7 0100     		.2byte	0x1
 3940 03a9 54       		.byte	0x54
 3941 03aa 36000000 		.4byte	.LVL77
 3942 03ae 44000000 		.4byte	.LFE20
 3943 03b2 0500     		.2byte	0x5
 3944 03b4 73       		.byte	0x73
 3945 03b5 00       		.sleb128 0
 3946 03b6 70       		.byte	0x70
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 110


 3947 03b7 00       		.sleb128 0
 3948 03b8 22       		.byte	0x22
 3949 03b9 00000000 		.4byte	0
 3950 03bd 00000000 		.4byte	0
 3951              	.LLST25:
 3952 03c1 00000000 		.4byte	.LVL79
 3953 03c5 0C000000 		.4byte	.LVL81
 3954 03c9 0100     		.2byte	0x1
 3955 03cb 50       		.byte	0x50
 3956 03cc 0C000000 		.4byte	.LVL81
 3957 03d0 84000000 		.4byte	.LVL96
 3958 03d4 0100     		.2byte	0x1
 3959 03d6 56       		.byte	0x56
 3960 03d7 84000000 		.4byte	.LVL96
 3961 03db 98000000 		.4byte	.LFE21
 3962 03df 0400     		.2byte	0x4
 3963 03e1 F3       		.byte	0xf3
 3964 03e2 01       		.uleb128 0x1
 3965 03e3 50       		.byte	0x50
 3966 03e4 9F       		.byte	0x9f
 3967 03e5 00000000 		.4byte	0
 3968 03e9 00000000 		.4byte	0
 3969              	.LLST26:
 3970 03ed 00000000 		.4byte	.LVL79
 3971 03f1 0A000000 		.4byte	.LVL80
 3972 03f5 0100     		.2byte	0x1
 3973 03f7 51       		.byte	0x51
 3974 03f8 0A000000 		.4byte	.LVL80
 3975 03fc 6C000000 		.4byte	.LVL90
 3976 0400 0400     		.2byte	0x4
 3977 0402 F3       		.byte	0xf3
 3978 0403 01       		.uleb128 0x1
 3979 0404 51       		.byte	0x51
 3980 0405 9F       		.byte	0x9f
 3981 0406 6C000000 		.4byte	.LVL90
 3982 040a 6E000000 		.4byte	.LVL91
 3983 040e 0100     		.2byte	0x1
 3984 0410 54       		.byte	0x54
 3985 0411 6E000000 		.4byte	.LVL91
 3986 0415 78000000 		.4byte	.LVL93
 3987 0419 0400     		.2byte	0x4
 3988 041b F3       		.byte	0xf3
 3989 041c 01       		.uleb128 0x1
 3990 041d 51       		.byte	0x51
 3991 041e 9F       		.byte	0x9f
 3992 041f 78000000 		.4byte	.LVL93
 3993 0423 84000000 		.4byte	.LVL95
 3994 0427 0100     		.2byte	0x1
 3995 0429 54       		.byte	0x54
 3996 042a 84000000 		.4byte	.LVL95
 3997 042e 98000000 		.4byte	.LFE21
 3998 0432 0100     		.2byte	0x1
 3999 0434 50       		.byte	0x50
 4000 0435 00000000 		.4byte	0
 4001 0439 00000000 		.4byte	0
 4002              	.LLST27:
 4003 043d 6A000000 		.4byte	.LVL89
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 111


 4004 0441 6E000000 		.4byte	.LVL91
 4005 0445 0100     		.2byte	0x1
 4006 0447 50       		.byte	0x50
 4007 0448 00000000 		.4byte	0
 4008 044c 00000000 		.4byte	0
 4009              	.LLST28:
 4010 0450 48000000 		.4byte	.LVL84
 4011 0454 4A000000 		.4byte	.LVL85
 4012 0458 0100     		.2byte	0x1
 4013 045a 52       		.byte	0x52
 4014 045b 4A000000 		.4byte	.LVL85
 4015 045f 4E000000 		.4byte	.LVL86
 4016 0463 0300     		.2byte	0x3
 4017 0465 72       		.byte	0x72
 4018 0466 7F       		.sleb128 -1
 4019 0467 9F       		.byte	0x9f
 4020 0468 4E000000 		.4byte	.LVL86
 4021 046c 78000000 		.4byte	.LVL93
 4022 0470 0100     		.2byte	0x1
 4023 0472 57       		.byte	0x57
 4024 0473 00000000 		.4byte	0
 4025 0477 00000000 		.4byte	0
 4026              	.LLST29:
 4027 047b 16000000 		.4byte	.LVL82
 4028 047f 7A000000 		.4byte	.LVL94
 4029 0483 0100     		.2byte	0x1
 4030 0485 55       		.byte	0x55
 4031 0486 00000000 		.4byte	0
 4032 048a 00000000 		.4byte	0
 4033              	.LLST30:
 4034 048e 00000000 		.4byte	.LVL97
 4035 0492 1D000000 		.4byte	.LVL100-1
 4036 0496 0100     		.2byte	0x1
 4037 0498 50       		.byte	0x50
 4038 0499 1D000000 		.4byte	.LVL100-1
 4039 049d 3E000000 		.4byte	.LVL106
 4040 04a1 0400     		.2byte	0x4
 4041 04a3 F3       		.byte	0xf3
 4042 04a4 01       		.uleb128 0x1
 4043 04a5 50       		.byte	0x50
 4044 04a6 9F       		.byte	0x9f
 4045 04a7 3E000000 		.4byte	.LVL106
 4046 04ab 40000000 		.4byte	.LVL107
 4047 04af 0100     		.2byte	0x1
 4048 04b1 50       		.byte	0x50
 4049 04b2 40000000 		.4byte	.LVL107
 4050 04b6 54000000 		.4byte	.LFE22
 4051 04ba 0400     		.2byte	0x4
 4052 04bc F3       		.byte	0xf3
 4053 04bd 01       		.uleb128 0x1
 4054 04be 50       		.byte	0x50
 4055 04bf 9F       		.byte	0x9f
 4056 04c0 00000000 		.4byte	0
 4057 04c4 00000000 		.4byte	0
 4058              	.LLST31:
 4059 04c8 00000000 		.4byte	.LVL97
 4060 04cc 1D000000 		.4byte	.LVL100-1
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 112


 4061 04d0 0100     		.2byte	0x1
 4062 04d2 51       		.byte	0x51
 4063 04d3 1D000000 		.4byte	.LVL100-1
 4064 04d7 1E000000 		.4byte	.LVL100
 4065 04db 0400     		.2byte	0x4
 4066 04dd F3       		.byte	0xf3
 4067 04de 01       		.uleb128 0x1
 4068 04df 51       		.byte	0x51
 4069 04e0 9F       		.byte	0x9f
 4070 04e1 1E000000 		.4byte	.LVL100
 4071 04e5 21000000 		.4byte	.LVL101-1
 4072 04e9 0100     		.2byte	0x1
 4073 04eb 50       		.byte	0x50
 4074 04ec 3E000000 		.4byte	.LVL106
 4075 04f0 40000000 		.4byte	.LVL107
 4076 04f4 0100     		.2byte	0x1
 4077 04f6 51       		.byte	0x51
 4078 04f7 00000000 		.4byte	0
 4079 04fb 00000000 		.4byte	0
 4080              	.LLST32:
 4081 04ff 02000000 		.4byte	.LVL98
 4082 0503 3C000000 		.4byte	.LVL105
 4083 0507 0600     		.2byte	0x6
 4084 0509 9E       		.byte	0x9e
 4085 050a 04       		.uleb128 0x4
 4086 050b 00000000 		.4byte	0
 4087 050f 3C000000 		.4byte	.LVL105
 4088 0513 3E000000 		.4byte	.LVL106
 4089 0517 0100     		.2byte	0x1
 4090 0519 50       		.byte	0x50
 4091 051a 3E000000 		.4byte	.LVL106
 4092 051e 40000000 		.4byte	.LVL107
 4093 0522 0600     		.2byte	0x6
 4094 0524 9E       		.byte	0x9e
 4095 0525 04       		.uleb128 0x4
 4096 0526 00000000 		.4byte	0
 4097 052a 40000000 		.4byte	.LVL107
 4098 052e 54000000 		.4byte	.LFE22
 4099 0532 0100     		.2byte	0x1
 4100 0534 50       		.byte	0x50
 4101 0535 00000000 		.4byte	0
 4102 0539 00000000 		.4byte	0
 4103              	.LLST33:
 4104 053d 12000000 		.4byte	.LVL99
 4105 0541 2C000000 		.4byte	.LVL103
 4106 0545 0100     		.2byte	0x1
 4107 0547 54       		.byte	0x54
 4108 0548 3E000000 		.4byte	.LVL106
 4109 054c 40000000 		.4byte	.LVL107
 4110 0550 0100     		.2byte	0x1
 4111 0552 54       		.byte	0x54
 4112 0553 00000000 		.4byte	0
 4113 0557 00000000 		.4byte	0
 4114              	.LLST34:
 4115 055b 00000000 		.4byte	.LVL108
 4116 055f 1D000000 		.4byte	.LVL111-1
 4117 0563 0100     		.2byte	0x1
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 113


 4118 0565 50       		.byte	0x50
 4119 0566 1D000000 		.4byte	.LVL111-1
 4120 056a 52000000 		.4byte	.LVL118
 4121 056e 0400     		.2byte	0x4
 4122 0570 F3       		.byte	0xf3
 4123 0571 01       		.uleb128 0x1
 4124 0572 50       		.byte	0x50
 4125 0573 9F       		.byte	0x9f
 4126 0574 52000000 		.4byte	.LVL118
 4127 0578 54000000 		.4byte	.LVL119
 4128 057c 0100     		.2byte	0x1
 4129 057e 50       		.byte	0x50
 4130 057f 54000000 		.4byte	.LVL119
 4131 0583 68000000 		.4byte	.LFE23
 4132 0587 0400     		.2byte	0x4
 4133 0589 F3       		.byte	0xf3
 4134 058a 01       		.uleb128 0x1
 4135 058b 50       		.byte	0x50
 4136 058c 9F       		.byte	0x9f
 4137 058d 00000000 		.4byte	0
 4138 0591 00000000 		.4byte	0
 4139              	.LLST35:
 4140 0595 00000000 		.4byte	.LVL108
 4141 0599 1D000000 		.4byte	.LVL111-1
 4142 059d 0100     		.2byte	0x1
 4143 059f 51       		.byte	0x51
 4144 05a0 1D000000 		.4byte	.LVL111-1
 4145 05a4 1E000000 		.4byte	.LVL111
 4146 05a8 0400     		.2byte	0x4
 4147 05aa F3       		.byte	0xf3
 4148 05ab 01       		.uleb128 0x1
 4149 05ac 51       		.byte	0x51
 4150 05ad 9F       		.byte	0x9f
 4151 05ae 1E000000 		.4byte	.LVL111
 4152 05b2 2E000000 		.4byte	.LVL112
 4153 05b6 0100     		.2byte	0x1
 4154 05b8 50       		.byte	0x50
 4155 05b9 34000000 		.4byte	.LVL113
 4156 05bd 42000000 		.4byte	.LVL114
 4157 05c1 0100     		.2byte	0x1
 4158 05c3 50       		.byte	0x50
 4159 05c4 52000000 		.4byte	.LVL118
 4160 05c8 54000000 		.4byte	.LVL119
 4161 05cc 0100     		.2byte	0x1
 4162 05ce 51       		.byte	0x51
 4163 05cf 00000000 		.4byte	0
 4164 05d3 00000000 		.4byte	0
 4165              	.LLST36:
 4166 05d7 02000000 		.4byte	.LVL109
 4167 05db 50000000 		.4byte	.LVL117
 4168 05df 0200     		.2byte	0x2
 4169 05e1 30       		.byte	0x30
 4170 05e2 9F       		.byte	0x9f
 4171 05e3 50000000 		.4byte	.LVL117
 4172 05e7 52000000 		.4byte	.LVL118
 4173 05eb 0100     		.2byte	0x1
 4174 05ed 50       		.byte	0x50
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 114


 4175 05ee 52000000 		.4byte	.LVL118
 4176 05f2 54000000 		.4byte	.LVL119
 4177 05f6 0200     		.2byte	0x2
 4178 05f8 30       		.byte	0x30
 4179 05f9 9F       		.byte	0x9f
 4180 05fa 54000000 		.4byte	.LVL119
 4181 05fe 68000000 		.4byte	.LFE23
 4182 0602 0100     		.2byte	0x1
 4183 0604 50       		.byte	0x50
 4184 0605 00000000 		.4byte	0
 4185 0609 00000000 		.4byte	0
 4186              	.LLST37:
 4187 060d 12000000 		.4byte	.LVL110
 4188 0611 46000000 		.4byte	.LVL115
 4189 0615 0100     		.2byte	0x1
 4190 0617 54       		.byte	0x54
 4191 0618 46000000 		.4byte	.LVL115
 4192 061c 52000000 		.4byte	.LVL118
 4193 0620 1200     		.2byte	0x12
 4194 0622 75       		.byte	0x75
 4195 0623 00       		.sleb128 0
 4196 0624 33       		.byte	0x33
 4197 0625 24       		.byte	0x24
 4198 0626 75       		.byte	0x75
 4199 0627 00       		.sleb128 0
 4200 0628 1C       		.byte	0x1c
 4201 0629 33       		.byte	0x33
 4202 062a 24       		.byte	0x24
 4203 062b 76       		.byte	0x76
 4204 062c 00       		.sleb128 0
 4205 062d 22       		.byte	0x22
 4206 062e 06       		.byte	0x6
 4207 062f F3       		.byte	0xf3
 4208 0630 01       		.uleb128 0x1
 4209 0631 50       		.byte	0x50
 4210 0632 22       		.byte	0x22
 4211 0633 9F       		.byte	0x9f
 4212 0634 52000000 		.4byte	.LVL118
 4213 0638 54000000 		.4byte	.LVL119
 4214 063c 0100     		.2byte	0x1
 4215 063e 54       		.byte	0x54
 4216 063f 54000000 		.4byte	.LVL119
 4217 0643 54000000 		.4byte	.LVL120
 4218 0647 1200     		.2byte	0x12
 4219 0649 75       		.byte	0x75
 4220 064a 00       		.sleb128 0
 4221 064b 33       		.byte	0x33
 4222 064c 24       		.byte	0x24
 4223 064d 75       		.byte	0x75
 4224 064e 00       		.sleb128 0
 4225 064f 1C       		.byte	0x1c
 4226 0650 33       		.byte	0x33
 4227 0651 24       		.byte	0x24
 4228 0652 76       		.byte	0x76
 4229 0653 00       		.sleb128 0
 4230 0654 22       		.byte	0x22
 4231 0655 06       		.byte	0x6
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 115


 4232 0656 F3       		.byte	0xf3
 4233 0657 01       		.uleb128 0x1
 4234 0658 50       		.byte	0x50
 4235 0659 22       		.byte	0x22
 4236 065a 9F       		.byte	0x9f
 4237 065b 00000000 		.4byte	0
 4238 065f 00000000 		.4byte	0
 4239              	.LLST38:
 4240 0663 00000000 		.4byte	.LVL121
 4241 0667 1D000000 		.4byte	.LVL124-1
 4242 066b 0100     		.2byte	0x1
 4243 066d 50       		.byte	0x50
 4244 066e 1D000000 		.4byte	.LVL124-1
 4245 0672 36000000 		.4byte	.LVL128
 4246 0676 0400     		.2byte	0x4
 4247 0678 F3       		.byte	0xf3
 4248 0679 01       		.uleb128 0x1
 4249 067a 50       		.byte	0x50
 4250 067b 9F       		.byte	0x9f
 4251 067c 36000000 		.4byte	.LVL128
 4252 0680 38000000 		.4byte	.LVL129
 4253 0684 0100     		.2byte	0x1
 4254 0686 50       		.byte	0x50
 4255 0687 38000000 		.4byte	.LVL129
 4256 068b 4C000000 		.4byte	.LFE24
 4257 068f 0400     		.2byte	0x4
 4258 0691 F3       		.byte	0xf3
 4259 0692 01       		.uleb128 0x1
 4260 0693 50       		.byte	0x50
 4261 0694 9F       		.byte	0x9f
 4262 0695 00000000 		.4byte	0
 4263 0699 00000000 		.4byte	0
 4264              	.LLST39:
 4265 069d 00000000 		.4byte	.LVL121
 4266 06a1 1D000000 		.4byte	.LVL124-1
 4267 06a5 0100     		.2byte	0x1
 4268 06a7 51       		.byte	0x51
 4269 06a8 1D000000 		.4byte	.LVL124-1
 4270 06ac 1E000000 		.4byte	.LVL124
 4271 06b0 0400     		.2byte	0x4
 4272 06b2 F3       		.byte	0xf3
 4273 06b3 01       		.uleb128 0x1
 4274 06b4 51       		.byte	0x51
 4275 06b5 9F       		.byte	0x9f
 4276 06b6 1E000000 		.4byte	.LVL124
 4277 06ba 27000000 		.4byte	.LVL125-1
 4278 06be 0100     		.2byte	0x1
 4279 06c0 50       		.byte	0x50
 4280 06c1 36000000 		.4byte	.LVL128
 4281 06c5 38000000 		.4byte	.LVL129
 4282 06c9 0100     		.2byte	0x1
 4283 06cb 51       		.byte	0x51
 4284 06cc 00000000 		.4byte	0
 4285 06d0 00000000 		.4byte	0
 4286              	.LLST40:
 4287 06d4 02000000 		.4byte	.LVL122
 4288 06d8 34000000 		.4byte	.LVL127
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 116


 4289 06dc 0A00     		.2byte	0xa
 4290 06de 9E       		.byte	0x9e
 4291 06df 08       		.uleb128 0x8
 4292 06e0 00000000 		.8byte	0
 4292      00000000 
 4293 06e8 36000000 		.4byte	.LVL128
 4294 06ec 38000000 		.4byte	.LVL129
 4295 06f0 0A00     		.2byte	0xa
 4296 06f2 9E       		.byte	0x9e
 4297 06f3 08       		.uleb128 0x8
 4298 06f4 00000000 		.8byte	0
 4298      00000000 
 4299 06fc 00000000 		.4byte	0
 4300 0700 00000000 		.4byte	0
 4301              	.LLST41:
 4302 0704 12000000 		.4byte	.LVL123
 4303 0708 2A000000 		.4byte	.LVL126
 4304 070c 0100     		.2byte	0x1
 4305 070e 54       		.byte	0x54
 4306 070f 2A000000 		.4byte	.LVL126
 4307 0713 36000000 		.4byte	.LVL128
 4308 0717 1200     		.2byte	0x12
 4309 0719 75       		.byte	0x75
 4310 071a 00       		.sleb128 0
 4311 071b 33       		.byte	0x33
 4312 071c 24       		.byte	0x24
 4313 071d 75       		.byte	0x75
 4314 071e 00       		.sleb128 0
 4315 071f 1C       		.byte	0x1c
 4316 0720 33       		.byte	0x33
 4317 0721 24       		.byte	0x24
 4318 0722 76       		.byte	0x76
 4319 0723 00       		.sleb128 0
 4320 0724 22       		.byte	0x22
 4321 0725 06       		.byte	0x6
 4322 0726 F3       		.byte	0xf3
 4323 0727 01       		.uleb128 0x1
 4324 0728 50       		.byte	0x50
 4325 0729 22       		.byte	0x22
 4326 072a 9F       		.byte	0x9f
 4327 072b 36000000 		.4byte	.LVL128
 4328 072f 38000000 		.4byte	.LVL129
 4329 0733 0100     		.2byte	0x1
 4330 0735 54       		.byte	0x54
 4331 0736 38000000 		.4byte	.LVL129
 4332 073a 38000000 		.4byte	.LVL130
 4333 073e 1200     		.2byte	0x12
 4334 0740 75       		.byte	0x75
 4335 0741 00       		.sleb128 0
 4336 0742 33       		.byte	0x33
 4337 0743 24       		.byte	0x24
 4338 0744 75       		.byte	0x75
 4339 0745 00       		.sleb128 0
 4340 0746 1C       		.byte	0x1c
 4341 0747 33       		.byte	0x33
 4342 0748 24       		.byte	0x24
 4343 0749 76       		.byte	0x76
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 117


 4344 074a 00       		.sleb128 0
 4345 074b 22       		.byte	0x22
 4346 074c 06       		.byte	0x6
 4347 074d F3       		.byte	0xf3
 4348 074e 01       		.uleb128 0x1
 4349 074f 50       		.byte	0x50
 4350 0750 22       		.byte	0x22
 4351 0751 9F       		.byte	0x9f
 4352 0752 00000000 		.4byte	0
 4353 0756 00000000 		.4byte	0
 4354              	.LLST42:
 4355 075a 06000000 		.4byte	.LVL131
 4356 075e 10000000 		.4byte	.LVL132
 4357 0762 0200     		.2byte	0x2
 4358 0764 30       		.byte	0x30
 4359 0765 9F       		.byte	0x9f
 4360 0766 10000000 		.4byte	.LVL132
 4361 076a BE000000 		.4byte	.LVL138
 4362 076e 0100     		.2byte	0x1
 4363 0770 54       		.byte	0x54
 4364 0771 BE000000 		.4byte	.LVL138
 4365 0775 C2000000 		.4byte	.LVL139
 4366 0779 0200     		.2byte	0x2
 4367 077b 30       		.byte	0x30
 4368 077c 9F       		.byte	0x9f
 4369 077d C2000000 		.4byte	.LVL139
 4370 0781 E6000000 		.4byte	.LVL143
 4371 0785 0100     		.2byte	0x1
 4372 0787 54       		.byte	0x54
 4373 0788 00000000 		.4byte	0
 4374 078c 00000000 		.4byte	0
 4375              	.LLST43:
 4376 0790 06000000 		.4byte	.LVL131
 4377 0794 10000000 		.4byte	.LVL132
 4378 0798 0200     		.2byte	0x2
 4379 079a 30       		.byte	0x30
 4380 079b 9F       		.byte	0x9f
 4381 079c 10000000 		.4byte	.LVL132
 4382 07a0 BE000000 		.4byte	.LVL138
 4383 07a4 0100     		.2byte	0x1
 4384 07a6 55       		.byte	0x55
 4385 07a7 BE000000 		.4byte	.LVL138
 4386 07ab C2000000 		.4byte	.LVL139
 4387 07af 0200     		.2byte	0x2
 4388 07b1 30       		.byte	0x30
 4389 07b2 9F       		.byte	0x9f
 4390 07b3 C2000000 		.4byte	.LVL139
 4391 07b7 E4000000 		.4byte	.LVL142
 4392 07bb 0100     		.2byte	0x1
 4393 07bd 55       		.byte	0x55
 4394 07be E4000000 		.4byte	.LVL142
 4395 07c2 F2000000 		.4byte	.LVL145
 4396 07c6 0200     		.2byte	0x2
 4397 07c8 30       		.byte	0x30
 4398 07c9 9F       		.byte	0x9f
 4399 07ca 00000000 		.4byte	0
 4400 07ce 00000000 		.4byte	0
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 118


 4401              	.LLST44:
 4402 07d2 3A000000 		.4byte	.LVL133
 4403 07d6 88000000 		.4byte	.LVL134
 4404 07da 0100     		.2byte	0x1
 4405 07dc 50       		.byte	0x50
 4406 07dd 00000000 		.4byte	0
 4407 07e1 00000000 		.4byte	0
 4408              	.LLST45:
 4409 07e5 00000000 		.4byte	.LVL149
 4410 07e9 07000000 		.4byte	.LVL150-1
 4411 07ed 0100     		.2byte	0x1
 4412 07ef 50       		.byte	0x50
 4413 07f0 07000000 		.4byte	.LVL150-1
 4414 07f4 0E000000 		.4byte	.LVL152
 4415 07f8 0100     		.2byte	0x1
 4416 07fa 54       		.byte	0x54
 4417 07fb 0E000000 		.4byte	.LVL152
 4418 07ff 10000000 		.4byte	.LFE2
 4419 0803 0400     		.2byte	0x4
 4420 0805 F3       		.byte	0xf3
 4421 0806 01       		.uleb128 0x1
 4422 0807 50       		.byte	0x50
 4423 0808 9F       		.byte	0x9f
 4424 0809 00000000 		.4byte	0
 4425 080d 00000000 		.4byte	0
 4426              	.LLST46:
 4427 0811 00000000 		.4byte	.LVL153
 4428 0815 0D000000 		.4byte	.LVL154-1
 4429 0819 0100     		.2byte	0x1
 4430 081b 50       		.byte	0x50
 4431 081c 0D000000 		.4byte	.LVL154-1
 4432 0820 5A000000 		.4byte	.LVL159
 4433 0824 0100     		.2byte	0x1
 4434 0826 54       		.byte	0x54
 4435 0827 5A000000 		.4byte	.LVL159
 4436 082b 70000000 		.4byte	.LFE5
 4437 082f 0400     		.2byte	0x4
 4438 0831 F3       		.byte	0xf3
 4439 0832 01       		.uleb128 0x1
 4440 0833 50       		.byte	0x50
 4441 0834 9F       		.byte	0x9f
 4442 0835 00000000 		.4byte	0
 4443 0839 00000000 		.4byte	0
 4444              	.LLST47:
 4445 083d 00000000 		.4byte	.LVL153
 4446 0841 0D000000 		.4byte	.LVL154-1
 4447 0845 0100     		.2byte	0x1
 4448 0847 51       		.byte	0x51
 4449 0848 0D000000 		.4byte	.LVL154-1
 4450 084c 5A000000 		.4byte	.LVL160
 4451 0850 0100     		.2byte	0x1
 4452 0852 56       		.byte	0x56
 4453 0853 5A000000 		.4byte	.LVL160
 4454 0857 70000000 		.4byte	.LFE5
 4455 085b 0400     		.2byte	0x4
 4456 085d F3       		.byte	0xf3
 4457 085e 01       		.uleb128 0x1
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 119


 4458 085f 51       		.byte	0x51
 4459 0860 9F       		.byte	0x9f
 4460 0861 00000000 		.4byte	0
 4461 0865 00000000 		.4byte	0
 4462              		.section	.debug_aranges,"",%progbits
 4463 0000 E4000000 		.4byte	0xe4
 4464 0004 0200     		.2byte	0x2
 4465 0006 00000000 		.4byte	.Ldebug_info0
 4466 000a 04       		.byte	0x4
 4467 000b 00       		.byte	0
 4468 000c 0000     		.2byte	0
 4469 000e 0000     		.2byte	0
 4470 0010 00000000 		.4byte	.LFB12
 4471 0014 58000000 		.4byte	.LFE12-.LFB12
 4472 0018 00000000 		.4byte	.LFB3
 4473 001c 10000000 		.4byte	.LFE3-.LFB3
 4474 0020 00000000 		.4byte	.LFB4
 4475 0024 08010000 		.4byte	.LFE4-.LFB4
 4476 0028 00000000 		.4byte	.LFB6
 4477 002c 28000000 		.4byte	.LFE6-.LFB6
 4478 0030 00000000 		.4byte	.LFB8
 4479 0034 28000000 		.4byte	.LFE8-.LFB8
 4480 0038 00000000 		.4byte	.LFB9
 4481 003c 10000000 		.4byte	.LFE9-.LFB9
 4482 0040 00000000 		.4byte	.LFB10
 4483 0044 2C000000 		.4byte	.LFE10-.LFB10
 4484 0048 00000000 		.4byte	.LFB11
 4485 004c 38000000 		.4byte	.LFE11-.LFB11
 4486 0050 00000000 		.4byte	.LFB13
 4487 0054 54000000 		.4byte	.LFE13-.LFB13
 4488 0058 00000000 		.4byte	.LFB14
 4489 005c 64000000 		.4byte	.LFE14-.LFB14
 4490 0060 00000000 		.4byte	.LFB15
 4491 0064 1C000000 		.4byte	.LFE15-.LFB15
 4492 0068 00000000 		.4byte	.LFB16
 4493 006c 18000000 		.4byte	.LFE16-.LFB16
 4494 0070 00000000 		.4byte	.LFB17
 4495 0074 2C000000 		.4byte	.LFE17-.LFB17
 4496 0078 00000000 		.4byte	.LFB18
 4497 007c 2C000000 		.4byte	.LFE18-.LFB18
 4498 0080 00000000 		.4byte	.LFB19
 4499 0084 44000000 		.4byte	.LFE19-.LFB19
 4500 0088 00000000 		.4byte	.LFB20
 4501 008c 44000000 		.4byte	.LFE20-.LFB20
 4502 0090 00000000 		.4byte	.LFB21
 4503 0094 98000000 		.4byte	.LFE21-.LFB21
 4504 0098 00000000 		.4byte	.LFB22
 4505 009c 54000000 		.4byte	.LFE22-.LFB22
 4506 00a0 00000000 		.4byte	.LFB23
 4507 00a4 68000000 		.4byte	.LFE23-.LFB23
 4508 00a8 00000000 		.4byte	.LFB24
 4509 00ac 4C000000 		.4byte	.LFE24-.LFB24
 4510 00b0 00000000 		.4byte	.LFB25
 4511 00b4 18010000 		.4byte	.LFE25-.LFB25
 4512 00b8 00000000 		.4byte	.LFB26
 4513 00bc 30000000 		.4byte	.LFE26-.LFB26
 4514 00c0 00000000 		.4byte	.LFB1
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 120


 4515 00c4 24000000 		.4byte	.LFE1-.LFB1
 4516 00c8 00000000 		.4byte	.LFB2
 4517 00cc 10000000 		.4byte	.LFE2-.LFB2
 4518 00d0 00000000 		.4byte	.LFB5
 4519 00d4 70000000 		.4byte	.LFE5-.LFB5
 4520 00d8 00000000 		.4byte	.LFB7
 4521 00dc 44000000 		.4byte	.LFE7-.LFB7
 4522 00e0 00000000 		.4byte	0
 4523 00e4 00000000 		.4byte	0
 4524              		.section	.debug_ranges,"",%progbits
 4525              	.Ldebug_ranges0:
 4526 0000 00000000 		.4byte	.LFB12
 4527 0004 58000000 		.4byte	.LFE12
 4528 0008 00000000 		.4byte	.LFB3
 4529 000c 10000000 		.4byte	.LFE3
 4530 0010 00000000 		.4byte	.LFB4
 4531 0014 08010000 		.4byte	.LFE4
 4532 0018 00000000 		.4byte	.LFB6
 4533 001c 28000000 		.4byte	.LFE6
 4534 0020 00000000 		.4byte	.LFB8
 4535 0024 28000000 		.4byte	.LFE8
 4536 0028 00000000 		.4byte	.LFB9
 4537 002c 10000000 		.4byte	.LFE9
 4538 0030 00000000 		.4byte	.LFB10
 4539 0034 2C000000 		.4byte	.LFE10
 4540 0038 00000000 		.4byte	.LFB11
 4541 003c 38000000 		.4byte	.LFE11
 4542 0040 00000000 		.4byte	.LFB13
 4543 0044 54000000 		.4byte	.LFE13
 4544 0048 00000000 		.4byte	.LFB14
 4545 004c 64000000 		.4byte	.LFE14
 4546 0050 00000000 		.4byte	.LFB15
 4547 0054 1C000000 		.4byte	.LFE15
 4548 0058 00000000 		.4byte	.LFB16
 4549 005c 18000000 		.4byte	.LFE16
 4550 0060 00000000 		.4byte	.LFB17
 4551 0064 2C000000 		.4byte	.LFE17
 4552 0068 00000000 		.4byte	.LFB18
 4553 006c 2C000000 		.4byte	.LFE18
 4554 0070 00000000 		.4byte	.LFB19
 4555 0074 44000000 		.4byte	.LFE19
 4556 0078 00000000 		.4byte	.LFB20
 4557 007c 44000000 		.4byte	.LFE20
 4558 0080 00000000 		.4byte	.LFB21
 4559 0084 98000000 		.4byte	.LFE21
 4560 0088 00000000 		.4byte	.LFB22
 4561 008c 54000000 		.4byte	.LFE22
 4562 0090 00000000 		.4byte	.LFB23
 4563 0094 68000000 		.4byte	.LFE23
 4564 0098 00000000 		.4byte	.LFB24
 4565 009c 4C000000 		.4byte	.LFE24
 4566 00a0 00000000 		.4byte	.LFB25
 4567 00a4 18010000 		.4byte	.LFE25
 4568 00a8 00000000 		.4byte	.LFB26
 4569 00ac 30000000 		.4byte	.LFE26
 4570 00b0 00000000 		.4byte	.LFB1
 4571 00b4 24000000 		.4byte	.LFE1
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 121


 4572 00b8 00000000 		.4byte	.LFB2
 4573 00bc 10000000 		.4byte	.LFE2
 4574 00c0 00000000 		.4byte	.LFB5
 4575 00c4 70000000 		.4byte	.LFE5
 4576 00c8 00000000 		.4byte	.LFB7
 4577 00cc 44000000 		.4byte	.LFE7
 4578 00d0 00000000 		.4byte	0
 4579 00d4 00000000 		.4byte	0
 4580              		.section	.debug_line,"",%progbits
 4581              	.Ldebug_line0:
 4582 0000 B7030000 		.section	.debug_str,"MS",%progbits,1
 4582      02007E00 
 4582      00000201 
 4582      FB0E0D00 
 4582      01010101 
 4583              	.LASF10:
 4584 0000 75696E74 		.ascii	"uint16\000"
 4584      313600
 4585              	.LASF53:
 4586 0007 6368616E 		.ascii	"chanCount\000"
 4586      436F756E 
 4586      7400
 4587              	.LASF73:
 4588 0011 61646347 		.ascii	"adcGain\000"
 4588      61696E00 
 4589              	.LASF87:
 4590 0019 636F756E 		.ascii	"counts\000"
 4590      747300
 4591              	.LASF90:
 4592 0020 4144435F 		.ascii	"ADC_1_StartEx\000"
 4592      315F5374 
 4592      61727445 
 4592      7800
 4593              	.LASF94:
 4594 002e 4144435F 		.ascii	"ADC_1_StopConvert\000"
 4594      315F5374 
 4594      6F70436F 
 4594      6E766572 
 4594      7400
 4595              	.LASF7:
 4596 0040 6C6F6E67 		.ascii	"long long unsigned int\000"
 4596      206C6F6E 
 4596      6720756E 
 4596      7369676E 
 4596      65642069 
 4597              	.LASF88:
 4598 0057 4144435F 		.ascii	"ADC_1_Enable\000"
 4598      315F456E 
 4598      61626C65 
 4598      00
 4599              	.LASF6:
 4600 0064 6C6F6E67 		.ascii	"long long int\000"
 4600      206C6F6E 
 4600      6720696E 
 4600      7400
 4601              	.LASF0:
 4602 0072 7369676E 		.ascii	"signed char\000"
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 122


 4602      65642063 
 4602      68617200 
 4603              	.LASF85:
 4604 007e 4144435F 		.ascii	"ADC_1_Init\000"
 4604      315F496E 
 4604      697400
 4605              	.LASF36:
 4606 0089 636C6B44 		.ascii	"clkDivider\000"
 4606      69766964 
 4606      657200
 4607              	.LASF44:
 4608 0094 4144435F 		.ascii	"ADC_1_Stop\000"
 4608      315F5374 
 4608      6F7000
 4609              	.LASF13:
 4610 009f 696E7433 		.ascii	"int32\000"
 4610      3200
 4611              	.LASF46:
 4612 00a5 4144435F 		.ascii	"ADC_1_InitConfig\000"
 4612      315F496E 
 4612      6974436F 
 4612      6E666967 
 4612      00
 4613              	.LASF4:
 4614 00b6 6C6F6E67 		.ascii	"long int\000"
 4614      20696E74 
 4614      00
 4615              	.LASF74:
 4616 00bf 4144435F 		.ascii	"ADC_1_RawCounts2Counts\000"
 4616      315F5261 
 4616      77436F75 
 4616      6E747332 
 4616      436F756E 
 4617              	.LASF9:
 4618 00d6 75696E74 		.ascii	"uint8\000"
 4618      3800
 4619              	.LASF109:
 4620 00dc 43794465 		.ascii	"CyDelayUs\000"
 4620      6C617955 
 4620      7300
 4621              	.LASF16:
 4622 00e6 646F7562 		.ascii	"double\000"
 4622      6C6500
 4623              	.LASF47:
 4624 00ed 4144435F 		.ascii	"ADC_1_SetConvertMode\000"
 4624      315F5365 
 4624      74436F6E 
 4624      76657274 
 4624      4D6F6465 
 4625              	.LASF66:
 4626 0102 4144435F 		.ascii	"ADC_1_SetLimitMask\000"
 4626      315F5365 
 4626      744C696D 
 4626      69744D61 
 4626      736B00
 4627              	.LASF97:
 4628 0115 4144435F 		.ascii	"ADC_1_initVar\000"
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 123


 4628      315F696E 
 4628      69745661 
 4628      7200
 4629              	.LASF27:
 4630 0123 73616D70 		.ascii	"sampleTime01\000"
 4630      6C655469 
 4630      6D653031 
 4630      00
 4631              	.LASF11:
 4632 0130 75696E74 		.ascii	"uint32\000"
 4632      333200
 4633              	.LASF108:
 4634 0137 4379496E 		.ascii	"CyIntSetVector\000"
 4634      74536574 
 4634      56656374 
 4634      6F7200
 4635              	.LASF50:
 4636 0146 6D61736B 		.ascii	"mask\000"
 4636      00
 4637              	.LASF62:
 4638 014b 4144435F 		.ascii	"ADC_1_SetLowLimit\000"
 4638      315F5365 
 4638      744C6F77 
 4638      4C696D69 
 4638      7400
 4639              	.LASF76:
 4640 015d 74656D70 		.ascii	"temp\000"
 4640      00
 4641              	.LASF54:
 4642 0162 7265744D 		.ascii	"retMode\000"
 4642      6F646500 
 4643              	.LASF8:
 4644 016a 756E7369 		.ascii	"unsigned int\000"
 4644      676E6564 
 4644      20696E74 
 4644      00
 4645              	.LASF32:
 4646 0177 72616E67 		.ascii	"rangeIntMask\000"
 4646      65496E74 
 4646      4D61736B 
 4646      00
 4647              	.LASF86:
 4648 0184 636F6E66 		.ascii	"configNum\000"
 4648      69674E75 
 4648      6D00
 4649              	.LASF45:
 4650 018e 4144435F 		.ascii	"ADC_1_StartConvert\000"
 4650      315F5374 
 4650      61727443 
 4650      6F6E7665 
 4650      727400
 4651              	.LASF5:
 4652 01a1 6C6F6E67 		.ascii	"long unsigned int\000"
 4652      20756E73 
 4652      69676E65 
 4652      6420696E 
 4652      7400
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 124


 4653              	.LASF96:
 4654 01b3 4144435F 		.ascii	"ADC_1_channelsConfig\000"
 4654      315F6368 
 4654      616E6E65 
 4654      6C73436F 
 4654      6E666967 
 4655              	.LASF103:
 4656 01c8 4144435F 		.ascii	"ADC_1_intSarClock_Stop\000"
 4656      315F696E 
 4656      74536172 
 4656      436C6F63 
 4656      6B5F5374 
 4657              	.LASF43:
 4658 01df 746D7052 		.ascii	"tmpRegVal\000"
 4658      65675661 
 4658      6C00
 4659              	.LASF52:
 4660 01e9 656E6162 		.ascii	"enableMask\000"
 4660      6C654D61 
 4660      736B00
 4661              	.LASF64:
 4662 01f4 4144435F 		.ascii	"ADC_1_SetHighLimit\000"
 4662      315F5365 
 4662      74486967 
 4662      684C696D 
 4662      697400
 4663              	.LASF77:
 4664 0207 61766572 		.ascii	"averageAdcSamplesDiv\000"
 4664      61676541 
 4664      64635361 
 4664      6D706C65 
 4664      73446976 
 4665              	.LASF3:
 4666 021c 73686F72 		.ascii	"short unsigned int\000"
 4666      7420756E 
 4666      7369676E 
 4666      65642069 
 4666      6E7400
 4667              	.LASF101:
 4668 022f 4144435F 		.ascii	"ADC_1_allConfigs\000"
 4668      315F616C 
 4668      6C436F6E 
 4668      66696773 
 4668      00
 4669              	.LASF29:
 4670 0240 72616E67 		.ascii	"rangeThres\000"
 4670      65546872 
 4670      657300
 4671              	.LASF81:
 4672 024b 4144435F 		.ascii	"ADC_1_CountsTo_mVolts\000"
 4672      315F436F 
 4672      756E7473 
 4672      546F5F6D 
 4672      566F6C74 
 4673              	.LASF61:
 4674 0261 66696E61 		.ascii	"finalResult\000"
 4674      6C526573 
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 125


 4674      756C7400 
 4675              	.LASF92:
 4676 026d 4144435F 		.ascii	"ADC_1_SelectConfig\000"
 4676      315F5365 
 4676      6C656374 
 4676      436F6E66 
 4676      696700
 4677              	.LASF49:
 4678 0280 4144435F 		.ascii	"ADC_1_SetEosMask\000"
 4678      315F5365 
 4678      74456F73 
 4678      4D61736B 
 4678      00
 4679              	.LASF67:
 4680 0291 6C696D69 		.ascii	"limitMask\000"
 4680      744D6173 
 4680      6B00
 4681              	.LASF78:
 4682 029b 72617743 		.ascii	"rawChannel\000"
 4682      68616E6E 
 4682      656C00
 4683              	.LASF24:
 4684 02a6 6E756D43 		.ascii	"numChannels\000"
 4684      68616E6E 
 4684      656C7300 
 4685              	.LASF39:
 4686 02b2 6368616E 		.ascii	"chanConfig\000"
 4686      436F6E66 
 4686      696700
 4687              	.LASF19:
 4688 02bd 72656733 		.ascii	"reg32\000"
 4688      3200
 4689              	.LASF38:
 4690 02c3 69735369 		.ascii	"isSigned\000"
 4690      676E6564 
 4690      00
 4691              	.LASF58:
 4692 02cc 61646352 		.ascii	"adcResult\000"
 4692      6573756C 
 4692      7400
 4693              	.LASF14:
 4694 02d6 666C6F61 		.ascii	"float32\000"
 4694      74333200 
 4695              	.LASF22:
 4696 02de 73697A65 		.ascii	"sizetype\000"
 4696      74797065 
 4696      00
 4697              	.LASF105:
 4698 02e7 4144435F 		.ascii	"ADC_1_intSarClock_StartEx\000"
 4698      315F696E 
 4698      74536172 
 4698      436C6F63 
 4698      6B5F5374 
 4699              	.LASF63:
 4700 0301 6C6F774C 		.ascii	"lowLimit\000"
 4700      696D6974 
 4700      00
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 126


 4701              	.LASF21:
 4702 030a 6C6F6E67 		.ascii	"long double\000"
 4702      20646F75 
 4702      626C6500 
 4703              	.LASF91:
 4704 0316 61646472 		.ascii	"address\000"
 4704      65737300 
 4705              	.LASF28:
 4706 031e 73616D70 		.ascii	"sampleTime23\000"
 4706      6C655469 
 4706      6D653233 
 4706      00
 4707              	.LASF33:
 4708 032b 73617449 		.ascii	"satIntMask\000"
 4708      6E744D61 
 4708      736B00
 4709              	.LASF72:
 4710 0336 4144435F 		.ascii	"ADC_1_SetGain\000"
 4710      315F5365 
 4710      74476169 
 4710      6E00
 4711              	.LASF102:
 4712 0344 4144435F 		.ascii	"ADC_1_InputsPlacement\000"
 4712      315F496E 
 4712      70757473 
 4712      506C6163 
 4712      656D656E 
 4713              	.LASF69:
 4714 035a 7361744D 		.ascii	"satMask\000"
 4714      61736B00 
 4715              	.LASF17:
 4716 0362 696E7436 		.ascii	"int64\000"
 4716      3400
 4717              	.LASF107:
 4718 0368 4379496E 		.ascii	"CyIntSetPriority\000"
 4718      74536574 
 4718      5072696F 
 4718      72697479 
 4718      00
 4719              	.LASF15:
 4720 0379 666C6F61 		.ascii	"float\000"
 4720      7400
 4721              	.LASF113:
 4722 037f 433A5C70 		.ascii	"C:\\projects\\LaserBodyRoll\\Software\\IOBoard.cyds"
 4722      726F6A65 
 4722      6374735C 
 4722      4C617365 
 4722      72426F64 
 4723 03ae 6E00     		.ascii	"n\000"
 4724              	.LASF110:
 4725 03b0 4144435F 		.ascii	"ADC_1_IRQ_StartEx\000"
 4725      315F4952 
 4725      515F5374 
 4725      61727445 
 4725      7800
 4726              	.LASF65:
 4727 03c2 68696768 		.ascii	"highLimit\000"
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 127


 4727      4C696D69 
 4727      7400
 4728              	.LASF99:
 4729 03cc 4144435F 		.ascii	"ADC_1_offset\000"
 4729      315F6F66 
 4729      66736574 
 4729      00
 4730              	.LASF31:
 4731 03d9 6368616E 		.ascii	"chanEn\000"
 4731      456E00
 4732              	.LASF112:
 4733 03e0 47656E65 		.ascii	"Generated_Source\\PSoC4\\ADC_1.c\000"
 4733      72617465 
 4733      645F536F 
 4733      75726365 
 4733      5C50536F 
 4734              	.LASF68:
 4735 03ff 4144435F 		.ascii	"ADC_1_SetSatMask\000"
 4735      315F5365 
 4735      74536174 
 4735      4D61736B 
 4735      00
 4736              	.LASF1:
 4737 0410 756E7369 		.ascii	"unsigned char\000"
 4737      676E6564 
 4737      20636861 
 4737      7200
 4738              	.LASF57:
 4739 041e 4144435F 		.ascii	"ADC_1_GetResult16\000"
 4739      315F4765 
 4739      74526573 
 4739      756C7431 
 4739      3600
 4740              	.LASF100:
 4741 0430 4144435F 		.ascii	"ADC_1_countsPer10Volt\000"
 4741      315F636F 
 4741      756E7473 
 4741      50657231 
 4741      30566F6C 
 4742              	.LASF2:
 4743 0446 73686F72 		.ascii	"short int\000"
 4743      7420696E 
 4743      7400
 4744              	.LASF80:
 4745 0450 72657375 		.ascii	"result_Volts\000"
 4745      6C745F56 
 4745      6F6C7473 
 4745      00
 4746              	.LASF60:
 4747 045d 61646352 		.ascii	"adcResult16\000"
 4747      6573756C 
 4747      74313600 
 4748              	.LASF42:
 4749 0469 63684E75 		.ascii	"chNum\000"
 4749      6D00
 4750              	.LASF95:
 4751 046f 4144435F 		.ascii	"ADC_1_currentConfig\000"
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 128


 4751      315F6375 
 4751      7272656E 
 4751      74436F6E 
 4751      66696700 
 4752              	.LASF34:
 4753 0483 76726566 		.ascii	"vrefMvValue\000"
 4753      4D765661 
 4753      6C756500 
 4754              	.LASF111:
 4755 048f 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4755      43313120 
 4755      352E342E 
 4755      31203230 
 4755      31363036 
 4756 04c2 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 4756      20726576 
 4756      6973696F 
 4756      6E203233 
 4756      37373135 
 4757 04f5 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 4757      67202D66 
 4757      66756E63 
 4757      74696F6E 
 4757      2D736563 
 4758              	.LASF40:
 4759 0521 6368616E 		.ascii	"chan\000"
 4759      00
 4760              	.LASF18:
 4761 0526 63686172 		.ascii	"char\000"
 4761      00
 4762              	.LASF48:
 4763 052b 6D6F6465 		.ascii	"mode\000"
 4763      00
 4764              	.LASF20:
 4765 0530 63796973 		.ascii	"cyisraddress\000"
 4765      72616464 
 4765      72657373 
 4765      00
 4766              	.LASF41:
 4767 053d 636F6E66 		.ascii	"config\000"
 4767      696700
 4768              	.LASF79:
 4769 0544 4144435F 		.ascii	"ADC_1_CountsTo_Volts\000"
 4769      315F436F 
 4769      756E7473 
 4769      546F5F56 
 4769      6F6C7473 
 4770              	.LASF104:
 4771 0559 4144435F 		.ascii	"ADC_1_intSarClock_SetFractionalDividerRegister\000"
 4771      315F696E 
 4771      74536172 
 4771      436C6F63 
 4771      6B5F5365 
 4772              	.LASF114:
 4773 0588 4144435F 		.ascii	"ADC_1_IsChannelSigned\000"
 4773      315F4973 
 4773      4368616E 
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 129


 4773      6E656C53 
 4773      69676E65 
 4774              	.LASF84:
 4775 059e 72657375 		.ascii	"result_uVolts\000"
 4775      6C745F75 
 4775      566F6C74 
 4775      7300
 4776              	.LASF93:
 4777 05ac 72657374 		.ascii	"restart\000"
 4777      61727400 
 4778              	.LASF71:
 4779 05b4 6F666673 		.ascii	"offset\000"
 4779      657400
 4780              	.LASF25:
 4781 05bb 6374726C 		.ascii	"ctrl\000"
 4781      00
 4782              	.LASF35:
 4783 05c0 6D697363 		.ascii	"miscConfig\000"
 4783      436F6E66 
 4783      696700
 4784              	.LASF75:
 4785 05cb 61646343 		.ascii	"adcCounts\000"
 4785      6F756E74 
 4785      7300
 4786              	.LASF98:
 4787 05d5 4144435F 		.ascii	"ADC_1_selected\000"
 4787      315F7365 
 4787      6C656374 
 4787      656400
 4788              	.LASF30:
 4789 05e4 72616E67 		.ascii	"rangeCond\000"
 4789      65436F6E 
 4789      6400
 4790              	.LASF56:
 4791 05ee 4144435F 		.ascii	"ADC_1_IsEndConversion\000"
 4791      315F4973 
 4791      456E6443 
 4791      6F6E7665 
 4791      7273696F 
 4792              	.LASF26:
 4793 0604 73616D70 		.ascii	"sampleCtrl\000"
 4793      6C654374 
 4793      726C00
 4794              	.LASF37:
 4795 060f 4144435F 		.ascii	"ADC_1_CONFIG_STRUCT\000"
 4795      315F434F 
 4795      4E464947 
 4795      5F535452 
 4795      55435400 
 4796              	.LASF59:
 4797 0623 4144435F 		.ascii	"ADC_1_GetResult32\000"
 4797      315F4765 
 4797      74526573 
 4797      756C7433 
 4797      3200
 4798              	.LASF70:
 4799 0635 4144435F 		.ascii	"ADC_1_SetOffset\000"
ARM GAS  C:\Users\nbutts\AppData\Local\Temp\cclBEN4H.s 			page 130


 4799      315F5365 
 4799      744F6666 
 4799      73657400 
 4800              	.LASF12:
 4801 0645 696E7431 		.ascii	"int16\000"
 4801      3600
 4802              	.LASF51:
 4803 064b 4144435F 		.ascii	"ADC_1_SetChanMask\000"
 4803      315F5365 
 4803      74436861 
 4803      6E4D6173 
 4803      6B00
 4804              	.LASF82:
 4805 065d 72657375 		.ascii	"result_mVolts\000"
 4805      6C745F6D 
 4805      566F6C74 
 4805      7300
 4806              	.LASF23:
 4807 066b 6368616E 		.ascii	"channelBase\000"
 4807      6E656C42 
 4807      61736500 
 4808              	.LASF55:
 4809 0677 656E644F 		.ascii	"endOfConversion\000"
 4809      66436F6E 
 4809      76657273 
 4809      696F6E00 
 4810              	.LASF89:
 4811 0687 4144435F 		.ascii	"ADC_1_Start\000"
 4811      315F5374 
 4811      61727400 
 4812              	.LASF106:
 4813 0693 43794861 		.ascii	"CyHalt\000"
 4813      6C7400
 4814              	.LASF83:
 4815 069a 4144435F 		.ascii	"ADC_1_CountsTo_uVolts\000"
 4815      315F436F 
 4815      756E7473 
 4815      546F5F75 
 4815      566F6C74 
 4816              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
